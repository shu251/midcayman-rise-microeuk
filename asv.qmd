---
title: "18S survey"
format: html
editor: visual
---

# Import sequence and metadata

Set up R environment

```{r}
#| message: false
library(tidyverse); library(phyloseq); library(ape)
library(ggupset)
```

Import previously sequenced and analyzed tag-sequence data. See https://shu251.github.io/microeuk-amplicon-survey/ for additional information.

## Import ASV R objects

```{r}
#| warning: false
load("input-data/MCR-amplicon-data.RData", verbose = T)
# physeq_mcr
```



## Factor - legend/color key
```{r}
vent_ids <- c("BSW", "Plume")

vent_ids <- c("BSW","Plume", "Shrimpocalypse", "LotsOShrimp", "X18", "OMT", "OldManTree", "Rav2", "MustardStand", "ShrimpHole", "WhiteCastle", "ArrowLoop")
vent_fullname <- c("Background","Plume", "Shrimpocalypse", "Lots 'O Shrimp", "X-18", "Old Man Tree", "Old Man Tree", "Ravelin #2", "Mustard Stand", "Shrimp Hole", "White Castle", "Arrow Loop")
site_ids <- c("VD", "Piccard")
site_fullname <- c("Von Damm", "Piccard")

# Colors for VD and Piccard
site_colors <- c("#418b84", "#943b36")
# site_colors

# Vent colors
vent_colors <- c("#c2bfc2","#ebdac9", "#c02c5b", "#cfae20", "#86952c", "#a88fab", "#a88fab", "#70b2aa", "#8c906d", "#806fa2", "#8cabcf", "#609482")

names(vent_colors) <- vent_fullname
names(site_colors) <- site_fullname
# Cooler colors for VD
# c("#4e7d4b") green
#569c91 blue
#ae8fbb purple
#ce86ba a lighter purple
#31464a dark dark green
#8c906d grey green
#bab446 yellow green
#ebdac9 white - cream
#c2bfc2 grey
# Piccard
#c02c5b pink - red
#d65a9e pink
##cfae20 yellow

all_taxa_color = c("#fa9fb5", "#c51b8a", "#67000d", "#ef3b2c", "#ffffcc", "#feb24c", "#c7e9b4", "#1d91c0", "#deebf7", "#253494", "#9e9ac8", "#238b45", "#54278f", "#bdbdbd", "#252525", "#fa9fb5", "#c51b8a", "#67000d", "#ef3b2c", "#ffffcc", "#feb24c", "#c7e9b4", "#1d91c0", "#253494", "#9e9ac8", "#238b45", "#54278f", "#bdbdbd", "#252525")
```


# Visualize metadata

Import environmental parameters and look at Mid-Cayman Rise sites.
```{r}
env_params <- read.delim(file = "input-data/table_wenv.txt", sep = " ")
# env_params
subset_metadata <- env_params %>%
  filter(SAMPLETYPE != "Incubation") %>%
  filter(VENT != "Quakeplume") %>%
  select(SITE, VENT, SAMPLETYPE, RATE_min, EUK_ml, GRAZING_EFFECT_hr) %>%
  distinct() %>%
  group_by(SITE, VENT, SAMPLETYPE) %>%
    summarise(RATE_min_avg = mean(RATE_min),
              EUK_ml_avg = mean(EUK_ml),
              GRAZING_EFFECT_hr_avg = mean(GRAZING_EFFECT_hr)) %>%
  distinct() %>%
  pivot_longer(cols = ends_with("_avg"))

metadata_numeric <- metadata_mcr %>%
  filter(SAMPLETYPE != "Incubation") %>%
  select(VENT, SITE, SAMPLETYPE, DEPTH, TEMP, pH, PercSeawater, Mg, H2, H2S, CH4, ProkConc) %>%
  distinct() %>%
  pivot_longer(cols = DEPTH:ProkConc, values_to = "VALUE_TMP") %>%
  mutate(value = as.numeric(VALUE_TMP)) %>% select(-VALUE_TMP) %>%
  bind_rows(subset_metadata)
```

Code to make tile plot for environmental parameters, but may skip this.
```{r}
# tileplot_env <- function(x){
#   metadata_numeric %>% 
#   filter(name == x) %>%
#   ggplot(aes(x = name, y = VENT, fill = value)) +
#   geom_tile(color = "black") +
#   facet_grid(SITE + SAMPLETYPE ~ ., switch = "both", space = "free", scale = "free") + theme_linedraw() +
#     theme(axis.text.y = element_blank(),
#           strip.text = element_blank(),
#           strip.background = element_blank(),
#           axis.ticks = element_blank(),
#           strip.placement = "outside",
#           legend.title = element_blank(),
#           legend.position = "top",
#           legend.text = element_text(size = 5),
#           panel.background = element_blank(),
#           panel.border = element_blank(),
#           panel.grid = element_blank()) +
#     labs(x = "", y = "") +
#     scale_fill_distiller(palette = "Reds", direction=2, na.value = "grey50")
# }

```

Optional plot, likely will not use.

```{r}
# plot_grid(
#  tileplot_env("TEMP") + 
#    scale_fill_distiller(palette = "YlOrRd", direction=2, na.value = "grey50") +
#    theme(axis.text.y = element_text(color = "black", hjust = 1, vjust = 0), 
#          strip.text.y = element_text(color = "black", hjust = 0, vjust = 0), 
#          strip.placement = "outside"),
#  tileplot_env("PercSeawater") + 
#    scale_fill_distiller(palette = "Blues", direction=2, na.value = "grey50"),
#  tileplot_env("pH") + 
#    scale_fill_distiller(palette = "YlGnBu", direction=2, na.value = "grey50"),
#  tileplot_env("Mg") + 
#    scale_fill_distiller(palette = "Purples", direction=2, na.value = "grey50"),
#  # endemic_env("NO3"),
#  tileplot_env("H2") + 
#    scale_fill_distiller(palette = "Purples", direction=2, na.value = "grey50"),
#  tileplot_env("CH4") + 
#    scale_fill_distiller(palette = "Purples", direction=2, na.value = "grey50"),
#  tileplot_env("H2S") + 
#    scale_fill_distiller(palette = "Purples", direction=2, na.value = "grey50"),
#  tileplot_env("ProkConc") + 
#    scale_fill_distiller(palette = "Oranges", direction=2, na.value = "grey50"),
#  tileplot_env("EUK_ml_avg") + 
#    theme(axis.text.y = element_text(color = "black", hjust = 1, vjust = 0), 
#          strip.text.y = element_text(color = "black", hjust = 0, vjust = 0), 
#          strip.placement = "outside") +
#    scale_fill_distiller(palette = "Oranges", direction=2, na.value = "grey50"),
#  tileplot_env("GRAZING_EFFECT_hr_avg") + 
#    scale_fill_distiller(palette = "Oranges", direction=2, na.value = "grey50"),
#  nrow = 1,
#  rel_widths = c(4,1,1,1,1,1,1,1, 4, 1)
# )
```

# Community structure & diversity at Von Damm & Piccard

## Cluster analysis

Ordination analysis and methods to look at whole protistan communities at MCR.

```{r}
# | message: false
library(vegan); library(ggdendro); library(compositions)
```

## Cluster analysis with grazing assays

```{r}
# head(asv_wtax_qc)
asv_mcr_numeric <- asv_wtax_qc %>% 
  filter(value > 0) %>% 
  group_by(FeatureID, SAMPLENAME) %>% 
  summarise(MEAN_ACROSS_REPS = mean(value)) %>% 
  select(FeatureID, SAMPLENAME, MEAN_ACROSS_REPS) %>% 
  pivot_wider(names_from = SAMPLENAME, values_from = MEAN_ACROSS_REPS, values_fill = 0) %>% 
  column_to_rownames(var = "FeatureID")
```

Transform compositional data, center log ratio.

```{r}
logratio_mcr <- data.frame(compositions::clr(t(asv_mcr_numeric)))
# dim(logratio_mcr)
# ?alr()
# ?ilr()

pca_logratio <- prcomp(logratio_mcr)

variance_logratio <- (pca_logratio$sdev^2)/sum(pca_logratio$sdev^2)

barplot(variance_logratio, main = "Log-Ratio PCA Screeplot", xlab = "PC Axis", ylab = "% Variance", 
    cex.names = 1.5, cex.axis = 1.5, cex.lab = 1.5, cex.main = 1.5)

```

```{r}
# Extract PCA points
mcr_pca_pts <- data.frame(pca_logratio$x, SAMPLE = rownames(pca_logratio$x)) %>% 
  rownames_to_column(var = "SAMPLENAME") %>% 
  separate(SAMPLENAME, c("SITE", "SAMPLETYPE", "YEAR", "VENT"), " ", 
        remove = FALSE) 
```

### PCoA with all samples

```{r, fig.height=6, fig.width=8}
# unique(mcr_pca_pts$VENT)
# vent_ids
# site_fullname
mcr_pca_pts %>% 
  mutate(VENT_ORDER = factor(VENT, levels = vent_ids, labels = vent_fullname),
         SITE_ORDER = factor(SITE, levels = c("VonDamm", "Piccard"), labels = site_fullname)) %>% 
  mutate(TYPE = case_when(
    SAMPLETYPE == "Incubation" ~ "Incubation",
    TRUE ~ "in situ"
  )) %>% 
  ggplot(aes(x = PC1, y = PC2)) +
  geom_point(color = "black", stroke = 1.3, size = 5, aes(shape = SITE_ORDER, fill = VENT_ORDER, alpha = TYPE)) +
  scale_shape_manual(values = c(21, 24)) +
  scale_alpha_manual(values = c(1,0.5)) +
  scale_fill_manual(values = vent_colors) +
  theme_linedraw() +
  guides(fill = guide_legend(override.aes = list(shape = c(22)))) +
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)

```


Dendrogram analysis

```{r}
# ?decostand()
# Relative abundance
rel_abun <- decostand(asv_mcr_numeric, MARGIN = 2, method = "total")
# Cluster dendrogram (average hierarchical clustering)
cluster_mcr <- hclust(dist(t(rel_abun)), method = "average")
dendro <- as.dendrogram(cluster_mcr)
mcr_dendro <- dendro_data(dendro, type = "rectangle")

```

```{r, fig.height=8, fig.width=4}
mcr_dendro_plot <- ggplot(segment(mcr_dendro)) +
  geom_segment(aes(x = x, y = y, xend = xend, 
    yend = yend)) + 
  coord_flip() + 
  scale_y_reverse(expand = c(0.2, 0.5), breaks = c(0, 0.2, 0.4, 0.6, 0.8)) +
  geom_text(aes(x = x, y = y, label = label, angle = 0, hjust = 0), data = label(mcr_dendro)) +
  theme_dendro() + labs(y = "Dissimilarity") +
    theme(axis.text.x = element_text(color = "black", size = 14), axis.line.x = element_line(color = "#252525"), 
        axis.ticks.x = element_line(), axis.title.x = element_text(color = "black", 
            size = 14))
# svg('figs/SUPPLEMENTARY-dendrogram-wreps.svg', w = 10, h = 8)
mcr_dendro_plot
```

### PCoA with in situ only

```{r}
asv_mcr_numeric_insitu <- asv_wtax_qc %>% 
  filter(value > 0) %>% 
  filter(SAMPLETYPE != "Incubation") %>% 
  group_by(FeatureID, SAMPLENAME) %>% 
  summarise(MEAN_ACROSS_REPS = mean(value)) %>% 
  select(FeatureID, SAMPLENAME, MEAN_ACROSS_REPS) %>% 
  pivot_wider(names_from = SAMPLENAME, values_from = MEAN_ACROSS_REPS, values_fill = 0) %>% 
  column_to_rownames(var = "FeatureID")

insitu_logratio_mcr <- data.frame(compositions::clr(t(asv_mcr_numeric_insitu)))

insitu_pca_logratio <- prcomp(insitu_logratio_mcr)

insitu_variance_logratio <- (insitu_pca_logratio$sdev^2)/sum(insitu_pca_logratio$sdev^2)

barplot(insitu_variance_logratio, main = "Log-Ratio PCA Screeplot", xlab = "PC Axis", ylab = "% Variance", 
    cex.names = 1.5, cex.axis = 1.5, cex.lab = 1.5, cex.main = 1.5)
```

```{r}
# Extract PCA points for only insitu samples
insitu_mcr_pca_pts <- data.frame(insitu_pca_logratio$x, SAMPLE = rownames(insitu_pca_logratio$x)) %>% 
  rownames_to_column(var = "SAMPLENAME") %>% 
  separate(SAMPLENAME, c("SITE", "SAMPLETYPE", "YEAR", "VENT"), " ", 
        remove = FALSE) 
```

```{r, fig.height=6, fig.width=8}
insitu_mcr_pca_pts %>% 
  mutate(TYPE = case_when(
    SAMPLETYPE == "Incubation" ~ "Incubation",
    TRUE ~ "in situ"
  )) %>% 
  ggplot(aes(x = PC1, y = PC2)) +
  geom_point(color = "black", size = 4, aes(shape = SITE, fill = VENT, alpha = TYPE)) +
  scale_shape_manual(values = c(21, 24)) +
  scale_alpha_manual(values = c(1,0.4)) +
  theme_linedraw() +
  guides(fill = guide_legend(override.aes = list(shape = c(22)))) +
  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
# Keep same sample colors to compare to cluster analysis with in situ and Tf samples.
```

## Taxonomic breakdown

Try to pair with dendrogram
```{r}
out_labels <- as.data.frame(mcr_dendro$labels)
mcr_sample_order <- as.character(out_labels$label)
```



```{r, fig.height=8, fig.width=11}
alv <- c("Alveolata-Ellobiopsidae", "Alveolata-Perkinsea", "Alveolata-Unknown", "Alveolata-Chrompodellids", "Alveolata-Apicomplexa")
# head(asv_wtax_qc)

bubble <- asv_wtax_qc %>% 
    filter(value > 0) %>% 
  # Avg seq count by ASV across replicates
  group_by(SAMPLENAME, SITE, VENT, SAMPLETYPE, Taxon, FeatureID) %>% 
  summarise(avg_seq = mean(value)) %>% 
  # Separate and curate taxa information
  # filter(SAMPLETYPE != "Incubation") %>% 
  separate(Taxon, c("Domain", "Supergroup", 
                  "Phylum", "Class", "Order",
                  "Family", "Genus", "Species"), sep = ";") %>%
  filter(Domain == "Eukaryota") %>% #select eukaryotes only
  filter(Supergroup != "Opisthokonta") %>% # remove multicellular metazoa
  mutate(Supergroup = ifelse(is.na(Supergroup), "Unknown Eukaryota", Supergroup),
         Phylum = ifelse(is.na(Phylum), "Unknown", Phylum),
         Phylum = ifelse(Phylum == "Alveolata_X", "Ellobiopsidae", Phylum),
         Supergroup = ifelse(Supergroup == "Alveolata", paste(Supergroup, Phylum, sep = "-"), Supergroup)) %>% 
  mutate(SUPERGROUP = case_when(
    Supergroup %in% alv ~ "Other Alveolata",
    Supergroup == "Eukaryota_X" ~ "Unknown Eukaryota",
    Phylum == "Cercozoa" ~ "Rhizaria-Cercozoa",
    Phylum == "Radiolaria" ~ "Rhizaria-Radiolaria",
    Phylum == "Ochrophyta" ~ "Stramenopiles-Ochrophyta",
    Phylum == "Opalozoa" ~ "Stramenopiles-Opalozoa",
    Phylum == "Sagenista" ~ "Stramenopiles-Sagenista",
    TRUE ~ Supergroup
  )) %>% 
  # Taxa to supergroup
  mutate(SupergroupPhylum = SUPERGROUP) %>% 
  group_by(SAMPLENAME, SITE, VENT, SAMPLETYPE) %>% 
    mutate(TOTAL_SEQ = sum(avg_seq)) %>% 
  ungroup() %>% 
  group_by(SAMPLENAME, SITE, VENT, SAMPLETYPE, SUPERGROUP) %>% 
  summarise(SUM = sum(avg_seq),
            REL_ABUN = SUM/TOTAL_SEQ) %>% 
  mutate(SAMPLENAME_ORDER = factor(SAMPLENAME, levels = mcr_sample_order)) %>% 
  ggplot(aes(x = SAMPLENAME_ORDER, y = SUPERGROUP, size = REL_ABUN)) +
    geom_point(shape = 21, color = "white", aes(size = REL_ABUN, fill = SUPERGROUP, alpha = 0.4)) +
    scale_size_continuous(range = c(2,14)) +
  # facet_grid(. ~ SITE, scales = "free", space = "free") +
  theme_minimal() +coord_flip() +
  theme(legend.position = "none",
        axis.text.x = element_text(color = "black", angle = 45, hjust = 1, vjust = 1))

bubble
```

### Dendrogram with bubble plot
```{r, fig.width=20, fig.height=11}
# mcr_dendro_plot + bubble + patchwork::plot_layout(ncol = 2) + patchwork::plot_annotation(tag_levels = "a")
```



## Shared ASVs

```{r}
load("input-data/MCR-amplicon-data.RData", verbose=TRUE)
# unique(asv_wtax_qc$SITE)
head(asv_wtax_qc)
# head(TAX)
```

Function to generate upsetR plot with varied taxonomic levels.

Questions:

-   How many ASVs are shared among vent sites within Von Damm and Piccard?

-   What about shared ASVs across each vent field?

-   Is there a taxonomic level that drives site-to-site or field-to-field community dissimilarity?

```{r, fig.height=8, fig.width=11}
# options for taxa: SupergroupPhylum, Supergroup, Phylum, Class, Order, Family, Genus, Species
alv <- c("Alveolata-Ellobiopsidae", "Alveolata-Perkinsea", "Alveolata-Unknown", "Alveolata-Chrompodellids", "Alveolata-Apicomplexa")

all_taxa_color = c("#fa9fb5", "#c51b8a", "#67000d", "#ef3b2c", "#ffffcc", "#feb24c", "#c7e9b4", "#1d91c0", "#deebf7", "#253494", "#9e9ac8", "#238b45", "#54278f", "#bdbdbd", "#252525", "#fa9fb5", "#c51b8a", "#67000d", "#ef3b2c", "#ffffcc", "#feb24c", "#c7e9b4", "#1d91c0", "#253494", "#9e9ac8", "#238b45", "#54278f", "#bdbdbd", "#252525")

asv_wtax_qc %>% 
  filter(value > 0) %>% 
  filter(SAMPLETYPE != "Incubation") %>% 
  separate(Taxon, c("Domain", "Supergroup", 
                  "Phylum", "Class", "Order",
                  "Family", "Genus", "Species"), sep = ";") %>%
  filter(Domain == "Eukaryota") %>% #select eukaryotes only
  filter(Supergroup != "Opisthokonta") %>% # remove multicellular metazoa
  mutate(Supergroup = ifelse(is.na(Supergroup), "Unknown Eukaryota", Supergroup),
         Phylum = ifelse(is.na(Phylum), "Unknown", Phylum),
         Phylum = ifelse(Phylum == "Alveolata_X", "Ellobiopsidae", Phylum),
         Supergroup = ifelse(Supergroup == "Alveolata", paste(Supergroup, Phylum, sep = "-"), Supergroup)) %>% 
  mutate(SUPERGROUP = case_when(
    Supergroup %in% alv ~ "Other Alveolata",
    Supergroup == "Eukaryota_X" ~ "Unknown Eukaryota",
    Phylum == "Cercozoa" ~ "Rhizaria-Cercozoa",
    Phylum == "Radiolaria" ~ "Rhizaria-Radiolaria",
    Phylum == "Ochrophyta" ~ "Stramenopiles-Ochrophyta",
    Phylum == "Opalozoa" ~ "Stramenopiles-Opalozoa",
    Phylum == "Sagenista" ~ "Stramenopiles-Sagenista",
    TRUE ~ Supergroup
  )) %>% 
  # Taxa to supergroup
  mutate(SupergroupPhylum = SUPERGROUP) %>% #add modified "supergroup-phylum category"
  # Average across replicates
    group_by(FeatureID, SAMPLENAME, VENT, SupergroupPhylum) %>% 
    summarise(AVG = mean(value)) %>% 
  ungroup() %>% 
  separate(SAMPLENAME, c("SITE", "SAMPLETYPE", "YEAR", "Sample_tmp"), remove = TRUE) %>%
  mutate(REGION = "Mid-Cayman Rise") %>%  
  mutate(VENTNAME = paste(SITE, VENT, sep = " ")) %>% 
    select(-Sample_tmp) %>% 
  unite(SAMPLE, SITE, SAMPLETYPE, VENT, sep = " ", remove = FALSE) %>% 
  
  group_by(SupergroupPhylum, SAMPLE) %>% 
    summarise(SUM = sum(AVG)) %>%
  ungroup() %>%
  distinct(SupergroupPhylum, SUM, SAMPLE, .keep_all = TRUE) %>% 
  group_by(SupergroupPhylum) %>% 
  summarise(SAMPLE = list(SAMPLE)) %>% 
  ggplot(aes(x = SAMPLE)) +
    geom_bar(color = "black", width = 0.7, aes(fill = SupergroupPhylum)) +
    scale_x_upset(n_intersections = 25) +
  scale_y_continuous(expand = c(0,0)) +
  labs(x = "", y = "Shared at taxonomic level") +
  theme_linedraw() +
  theme(axis.text.y = element_text(color="black", size=14, face = "bold"),
        axis.text.x = element_text(color="black", size=14, face = "bold"),
        axis.title = element_text(color="black", size=14, face = "bold"),
        legend.text = element_text(color = "black", size = 12, face = "bold"),
        legend.title = element_blank(),
        panel.grid.minor = element_blank(),
        plot.margin = margin(1, 1, 1, 5, "cm")) + 
  scale_fill_manual(values = all_taxa_color)

# Filter data to reduce noise and show sample type to vent ecosystem variability.
# 
```

```{r, fig.width=15, fig.height=12}
asv_wtax_qc %>% 
  filter(value > 0) %>% 
  filter(SAMPLETYPE != "Incubation") %>% 
  separate(Taxon, c("Domain", "Supergroup", 
                  "Phylum", "Class", "Order",
                  "Family", "Genus", "Species"), sep = ";", remove = FALSE) %>%
  filter(Domain == "Eukaryota") %>% #select eukaryotes only
  filter(Supergroup != "Opisthokonta") %>% # remove multicellular metazoa
  mutate(Supergroup = ifelse(is.na(Supergroup), "Unknown Eukaryota", Supergroup),
         Phylum = ifelse(is.na(Phylum), "Unknown", Phylum),
         Phylum = ifelse(Phylum == "Alveolata_X", "Ellobiopsidae", Phylum),
         Supergroup = ifelse(Supergroup == "Alveolata", paste(Supergroup, Phylum, sep = "-"), Supergroup)) %>% 
  mutate(SUPERGROUP = case_when(
    Supergroup %in% alv ~ "Other Alveolata",
    Supergroup == "Eukaryota_X" ~ "Unknown Eukaryota",
    Phylum == "Cercozoa" ~ "Rhizaria-Cercozoa",
    Phylum == "Radiolaria" ~ "Rhizaria-Radiolaria",
    Phylum == "Ochrophyta" ~ "Stramenopiles-Ochrophyta",
    Phylum == "Opalozoa" ~ "Stramenopiles-Opalozoa",
    Phylum == "Sagenista" ~ "Stramenopiles-Sagenista",
    TRUE ~ Supergroup
  )) %>% 
  # Taxa to supergroup
  mutate(SupergroupPhylum = SUPERGROUP) %>% #add modified "supergroup-phylum category"
  # Average across replicates
    group_by(FeatureID, SAMPLENAME, VENT, SupergroupPhylum, Taxon) %>% 
    summarise(AVG = mean(value)) %>% 
  ungroup() %>% 
  separate(SAMPLENAME, c("SITE", "SAMPLETYPE", "YEAR", "Sample_tmp"), remove = TRUE) %>%
  mutate(REGION = "Mid-Cayman Rise") %>%  
  mutate(VENTNAME = paste(SITE, VENT, sep = " ")) %>% 
    select(-Sample_tmp) %>% 
  unite(SAMPLE, SITE, SAMPLETYPE, VENT, sep = " ", remove = FALSE) %>% 
  group_by(SupergroupPhylum, Taxon, SAMPLE) %>% 
    summarise(SUM = sum(AVG)) %>%
  ungroup() %>%
  distinct(Taxon, SupergroupPhylum, SUM, SAMPLE, .keep_all = TRUE) %>% 
  group_by(SupergroupPhylum, Taxon) %>% 
  summarise(SAMPLE = list(SAMPLE)) %>% 
  ggplot(aes(x = SAMPLE)) +
    geom_bar(color = "black", width = 0.7, aes(fill = SupergroupPhylum)) +
    scale_x_upset(n_intersections = 25) +
  scale_y_continuous(expand = c(0,0)) +
  labs(x = "", y = "Shared at taxonomic level") +
  theme_linedraw() +
  theme(axis.text.y = element_text(color="black", size=14, face = "bold"),
        axis.text.x = element_text(color="black", size=14, face = "bold"),
        axis.title = element_text(color="black", size=14, face = "bold"),
        legend.text = element_text(color = "black", size = 12, face = "bold"),
        legend.title = element_blank(),
        panel.grid.minor = element_blank(),
        plot.margin = margin(1, 1, 1, 5, "cm")) + 
  scale_fill_manual(values = all_taxa_color)
```

Example comparisons of shared taxonomic levels. *Explanation*: At ASV level, most ASVs are not shared across samples. So at other taxonomic categories, are these taxa also present or are there whole classes not present?

```{r, fig.width=15, fig.height=8}
# | fig-width: 10
# | fig-height: 15
# SupergroupPhylum, Supergroup, Phylum, Class, Order, Family, Genus, Species

# make_upset_plot(asv_wtax_qc, SupergroupPhylum)

# library(plotly)
# ggplotly(tmp)
# make_upset_plot(asv_wtax_qc, Class) + theme(legend.position = "none")
# make_upset_plot(asv_wtax_qc, Supergroup) + theme(legend.position = "none")
```

A better visualization may be a presence/absence across samples with a tile plot.

```{r}
alv <- c("Alveolata-Ellobiopsidae", "Alveolata-Perkinsea", "Alveolata-Unknown", "Alveolata-Chrompodellids", "Alveolata-Apicomplexa")

make_tile_plot_pa <- function(df, taxa_level, level0){ 
  taxa_select <- enquo(taxa_level)
  taxa_select_higher <- enquo(level0)
  df %>% 
  filter(value > 0) %>% 
  filter(SAMPLETYPE != "Incubation") %>% 
  separate(Taxon, c("Domain", "Supergroup", 
                  "Phylum", "Class", "Order",
                  "Family", "Genus", "Species"), sep = ";") %>%
  filter(Domain == "Eukaryota") %>% #select eukaryotes only
  filter(Supergroup != "Opisthokonta") %>% # remove multicellular metazoa
  mutate(Supergroup = ifelse(is.na(Supergroup), "Unknown Eukaryota", Supergroup),
         Phylum = ifelse(is.na(Phylum), "Unknown", Phylum),
         Phylum = ifelse(Phylum == "Alveolata_X", "Ellobiopsidae", Phylum),
         Supergroup = ifelse(Supergroup == "Alveolata", paste(Supergroup, Phylum, sep = "-"), Supergroup)) %>% 
  mutate(SUPERGROUP = case_when(
    Supergroup %in% alv ~ "Other Alveolata",
    Supergroup == "Eukaryota_X" ~ "Unknown Eukaryota",
    Phylum == "Cercozoa" ~ "Rhizaria-Cercozoa",
    Phylum == "Radiolaria" ~ "Rhizaria-Radiolaria",
    Phylum == "Ochrophyta" ~ "Stramenopiles-Ochrophyta",
    Phylum == "Opalozoa" ~ "Stramenopiles-Opalozoa",
    Phylum == "Sagenista" ~ "Stramenopiles-Sagenista",
    TRUE ~ Supergroup
  )) %>% 
  # Taxa to supergroup
  mutate(SupergroupPhylum = SUPERGROUP) %>% #add modified "supergroup-phylum category"
  # Average across replicates
    group_by(FeatureID, SAMPLENAME, VENT, !!taxa_select_higher, !!taxa_select) %>% 
    summarise(AVG = mean(value)) %>% 
  ungroup() %>% 
  separate(SAMPLENAME, c("SITE", "SAMPLETYPE", "YEAR", "Sample_tmp"), remove = TRUE) %>%
  mutate(REGION = "Mid-Cayman Rise") %>%  
  mutate(VENTNAME = paste(SITE, VENT, sep = " ")) %>% 
    select(-Sample_tmp) %>% 
  unite(SAMPLE, SITE, SAMPLETYPE, VENT, sep = " ", remove = FALSE) %>% 
  group_by(SITE, !!taxa_select_higher, !!taxa_select, SAMPLE) %>% 
    summarise(SUM = sum(AVG)) %>%
  ungroup() %>%
    add_column(PRESENT = 1) %>% 
    drop_na() %>% # remove NAs in taxa categories
  ggplot(aes(x = SAMPLE, y = !!taxa_select)) +
    geom_tile(color = "white", fill = "black", aes(fill = PRESENT)) +
      facet_grid(SupergroupPhylum ~ SITE, space = "free", scales = "free") +
  theme_linedraw() +
  labs(x= "", y = "") +
  theme(axis.text.y = element_text(color="black", size=11),
        axis.text.x = element_text(color="black", size=11, angle = 90, vjust = 0.5, hjust = 1),
        axis.title = element_text(color="black", size=11),
        legend.text = element_text(color = "black", size = 11),
        legend.title = element_blank(),
        panel.grid.minor = element_blank(),
        panel.grid.major = element_blank(),
        plot.margin = margin(1, 1, 1, 5, "cm"))
}
```

```{r, fig.height=18, fig.width=7}
# | fig-width: 10
# | fig-height: 20
# make_tile_plot_pa(asv_wtax_qc, "Class", "SupergroupPhylum")
```

> Above plot addresses presence/absence of the families within major protistan supergroups across the Von Damm and Piccard vent, plume, and background samples.



## Corncob

Corncob analysis can be used to identify specific ASVs that may be enriched when we compare non-vent to vent samples. 

Questions:

* For vent vs. non-vent ASVs, what ASVs are enriched at Piccard?

* For vent vs. non-vent ASVs, what ASVs are enriched at Von Damm?

* For vent vs. non-vent ASVs, what ASVs are enriched at both sites?

```{r}
# | message: false
# devtools::install_github("bryandmartin/corncob")
library(corncob); library(phyloseq)
```

```{r}
load("input-data/MCR-amplicon-data.RData", verbose = TRUE)
```

Explore data input for corncob

```{r}
# otu_table(physeq_mcr)[1:10, 1:3]
sample_data(physeq_mcr)
# tax_table(physeq_mcr)[1:3, ]

# Designated vent vs. non-vent
unique(sample_data(physeq_mcr)$SAMPLETYPE_BIN)

#Designats Piccard vs. vondamm.
unique(sample_data(physeq_mcr)$SITE)
```
Start by removing incubation samples for now. Subset to eukaryotes only and use phyloseq's tax glom to summarize to Supergroup, Phylum, Class, Order, Genus, & species. 

```{r}
head(tax_table(physeq_mcr))

mcr_super <- physeq_mcr %>%
  phyloseq::subset_samples(SAMPLETYPE %in% c("Background", "Plume", "Vent")) %>%
  phyloseq::subset_taxa(Domain == "Eukaryota") %>%
  tax_glom("Supergroup")

mcr_phy <- physeq_mcr %>% 
  phyloseq::subset_samples(SAMPLETYPE %in% c("Background", "Plume", "Vent")) %>% 
  phyloseq::subset_taxa(Domain == "Eukaryota") %>% 
  tax_glom("Phylum")

mcr_class <- physeq_mcr %>% 
  phyloseq::subset_samples(SAMPLETYPE %in% c("Background", "Plume", "Vent")) %>% 
  phyloseq::subset_taxa(Domain == "Eukaryota") %>% 
  tax_glom("Class")

mcr_order <- physeq_mcr %>% 
  phyloseq::subset_samples(SAMPLETYPE %in% c("Background", "Plume", "Vent")) %>% 
  phyloseq::subset_taxa(Domain == "Eukaryota") %>% 
  tax_glom("Order")

mcr_fam <- physeq_mcr %>% 
  phyloseq::subset_samples(SAMPLETYPE %in% c("Background", "Plume", "Vent")) %>% 
  phyloseq::subset_taxa(Domain == "Eukaryota") %>% 
  tax_glom("Family")

mcr_genera <- physeq_mcr %>% 
  phyloseq::subset_samples(SAMPLETYPE %in% c("Background", "Plume", "Vent")) %>% 
  phyloseq::subset_taxa(Domain == "Eukaryota") %>% 
  tax_glom("Genus")

mcr_spp <- physeq_mcr %>% 
  phyloseq::subset_samples(SAMPLETYPE %in% c("Background", "Plume", "Vent")) %>% 
  phyloseq::subset_taxa(Domain == "Eukaryota") %>% 
  tax_glom("Species")

# sample_data(mcr_order)
```

Differential tests in corncob

These tests work to see if taxa are differentially-abundant or variable across a given variable. In this study we have different taxonomic levels, are there more general or species-specific trends? We also have across sample types and site Below set up differential tests across sample types and site (and either or) at different taxonomic levels.

Function to perform specific differential tests across vent fields. Below use **SITE_PICK** parameter to choose between vent fields. Then use the df, to specify the taxonomic level.

```{r}
corncob_mcr <- function(df_in){
  # da_analysis_output <- differentialTest(formula = ~ SAMPLETYPE + SITE,
  #                               phi.formula = ~ SAMPLETYPE+ SITE,
  #                               formula_null = ~ 1,
  #                               phi.formula_null = ~ SAMPLETYPE + SITE,
  #                               test = "Wald", boot = FALSE,
  #                               data = df_in,
  #                               fdr_cutoff = 0.05)
  ## SAMPLETYPE_BIN specifically compares vent to non-vent.
  da_analysis_output <- differentialTest(formula = ~ SAMPLETYPE_BIN,
                                phi.formula = ~ SAMPLETYPE_BIN,
                                formula_null = ~ 1,
                                phi.formula_null = ~ SAMPLETYPE_BIN,
                                test = "Wald", boot = FALSE,
                                data = df_in,
                                fdr_cutoff = 0.05)
  # da_analysis_output <- differentialTest(formula = ~ SITE,
  #                               phi.formula = ~ SITE,
  #                               formula_null = ~ 1,
  #                               phi.formula_null = ~ SITE,
  #                               test = "Wald", boot = FALSE,
  #                               data = df_in,
  #                               fdr_cutoff = 0.05)
  #
  list_ofsig <- as.character(da_analysis_output$significant_taxa)
  total_number <- length(list_ofsig)[1]
  #
  sig_taxa_names <- as.data.frame(tax_table(df_in)) %>% 
    rownames_to_column(var = "FEATURE") %>% 
    filter(FEATURE %in% list_ofsig) %>% 
    rownames_to_column(var = "NUMBER")
  #
  for(var in 1:total_number){
    out_0 <- data.frame(da_analysis_output$significant_models[[var]]$coefficients) %>% 
      add_column(NUMBER = as.character(var))
    cat("extracted # ",var, "\n")
  if (!exists("extracted_coef")){
        extracted_coef <- out_0 # create the final count table
    } else {
        extracted_coef <- rbind(extracted_coef, out_0)
    }
    rm(out_0) # remove excess df
  }
  output_full <- extracted_coef %>% 
    rownames_to_column(var = "variable") %>%
    filter(grepl("mu.", variable)) %>% 
    left_join(sig_taxa_names, by = c("NUMBER" = "NUMBER")) %>% 
      mutate(VARIABLE = str_remove(variable, "[:digit:]+")) %>% select(-variable) #%>% 
    # pivot_wider(names_from = VARIABLE, names_glue = "{VARIABLE}_{.value}", values_from = c(Estimate, Std..Error, t.value, Pr...t..))
  rm(extracted_coef)
  return(output_full)}

```
Define SITE_PICK
```{r}
mcr <- c("Piccard", "VonDamm")
picc <- c("Piccard")
vd <- c("VonDamm")
```

Function to visualize output from corncob
```{r}
plot_corn <- function(cob_out, LEVEL, TITLE){
  level <- enquo(LEVEL)
  cob_out %>%
  filter(VARIABLE != "mu.(Intercept)") %>% 
  ggplot(aes(y = level, x = Estimate)) +
    geom_vline(xintercept = 0, alpha = 0.2) +
    geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +
    geom_point(aes(fill = level), shape = 21, color = "black") +
  facet_grid(. ~ VARIABLE, space = "free", scales = "free") +
  theme(legend.position = element_blank(),
        axis.text.y = element_text(color = "black")) +
  theme_minimal() +
  labs(x = "Coefficient", y = "", title = TITLE)
}
```


### Supergroup corncob

What main supergroups are enriched at MCR?

```{r}
# # vd
# analysis_super_vd <- corncob_mcr(mcr_super %>% 
#                                 phyloseq::subset_samples(SITE %in% vd))
# 
# analysis_super_picc <- corncob_mcr(mcr_super %>% 
#                                 phyloseq::subset_samples(SITE %in% picc))

analysis_super_all <- corncob_mcr(mcr_super %>% 
                                phyloseq::subset_samples(SITE %in% mcr))

# analysis_super_vd %>%
#   filter(VARIABLE != "mu.(Intercept)") %>% 
#   ggplot(aes(y = Supergroup, x = Estimate)) +
#     geom_vline(xintercept = 0, alpha = 0.2) +
#     geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +
#     geom_point(aes(fill = Supergroup), shape = 21, color = "black") +
#   facet_grid(. ~ VARIABLE, space = "free", scales = "free") +
#   theme(legend.position = element_blank(),
#         axis.text.y = element_text(color = "black")) +
#   theme_minimal() +
#   labs(x = "Coefficient", y = "", title = "VD supergroup")

# analysis_super_picc %>%
#   filter(VARIABLE != "mu.(Intercept)") %>% 
#   ggplot(aes(y = Supergroup, x = Estimate)) +
#     geom_vline(xintercept = 0, alpha = 0.2) +
#     geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +
#     geom_point(aes(fill = Supergroup), shape = 21, color = "black") +
#   facet_grid(. ~ VARIABLE, space = "free", scales = "free") +
#   theme(legend.position = element_blank(),
#         axis.text.y = element_text(color = "black")) +
#   theme_minimal() +
#   labs(x = "Coefficient", y = "", title = "piccard supergroup")
```
Plot supergroup enrichment
```{r}
analysis_super_all %>%
  filter(VARIABLE != "mu.(Intercept)") %>% 
  ggplot(aes(y = Supergroup, x = Estimate)) +
    geom_vline(xintercept = 0, alpha = 0.2) +
    geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +
    geom_point(aes(fill = Supergroup), shape = 21, color = "black") +
  facet_grid(. ~ VARIABLE, space = "free", scales = "free") +
  theme(legend.position = element_blank(),
        axis.text.y = element_text(color = "black")) +
  theme_minimal() +
  labs(x = "Coefficient", y = "", title = "MCR supergroup")
```
### Phylum corncob analysis
```{r}
analysis_phylum <- corncob_mcr(mcr_phy)
```

```{r}
analysis_phylum %>%
  filter(VARIABLE != "mu.(Intercept)") %>% 
  ggplot(aes(y = Phylum, x = Estimate)) +
    geom_vline(xintercept = 0, alpha = 0.2) +
    geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +
    geom_point(aes(fill = Phylum), shape = 21, color = "black") +
  facet_grid(Supergroup ~ VARIABLE, space = "free", scales = "free") +
  theme(legend.position = element_blank(),
        axis.text.y = element_text(color = "black")) +
  theme_minimal() +
  labs(x = "Coefficient", y = "", title = "MCR Phylum")
```


### Class corncob analysis

```{r}

analysis_class <- corncob_mcr(mcr_class %>%
                                phyloseq::subset_samples(SITE %in% mcr))
```

```{r, fig.height=10, fig.width=10}
# head(analysis_class)
# unique(analysis_class$VARIABLE)
analysis_class %>%
  unite(Class, c(Phylum, Class), sep = " ", remove = FALSE) %>%
  filter(VARIABLE != "mu.(Intercept)") %>% 
  ggplot(aes(y = Class, x = Estimate)) +
    geom_vline(xintercept = 0, alpha = 0.2) +
    geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +
    geom_point(aes(fill = Supergroup), shape = 21, color = "black") +
  facet_grid(Supergroup ~ VARIABLE, space = "free", scales = "free") +
  theme(legend.position = element_blank(),
        axis.text.y = element_text(color = "black")) +
  theme_minimal() +
  labs(x = "Coefficient", y = "", title = "Class level test for differential abundance")
```

> Class level looks pretty good. Keep this one. Looks at major taxonomic groups that were more enriched at vents? Work on the language here. Repeat vent vs. plume at ASV level. ID some of the core ASVs that can help elaborate on what we see above (table in supplementary)

> _Interpretation_ :

### Order corncob
```{r}
analysis_order <- corncob_mcr(mcr_order)
```

```{r, fig.height=10, fig.width=10}
# head(analysis_class)
# unique(analysis_class$VARIABLE)
analysis_order %>%
  unite(Order, c(Phylum, Class, Order), sep = " ", remove = FALSE) %>%
  filter(VARIABLE != "mu.(Intercept)") %>%
  ggplot(aes(y = Order, x = Estimate)) +
    geom_vline(xintercept = 0, alpha = 0.2) +
    geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +
    geom_point(aes(fill = Supergroup), shape = 21, color = "black") +
  facet_grid(Supergroup ~ VARIABLE, space = "free", scales = "free") +
  theme(legend.position = element_blank(),
        axis.text.y = element_text(color = "black")) +
  theme_minimal() +
  labs(x = "Coefficient", y = "", title = "Order level test for differential abundance")
# ?geom_errorbar
```

### Family corncob
Plan to pairing with tree below
```{r}
analysis_fam <- corncob_mcr(mcr_fam)
```

```{r}
analysis_fam %>%
  unite(Family, c(Class, Order, Family), sep = " ", remove = FALSE) %>%
  filter(VARIABLE != "mu.(Intercept)") %>%
  ggplot(aes(y = Family, x = Estimate)) +
    geom_vline(xintercept = 0, alpha = 0.2) +
    geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +
    geom_point(aes(fill = Supergroup), shape = 21, color = "black") +
  facet_grid(Supergroup + Phylum ~ VARIABLE, space = "free", scales = "free") +
  theme(legend.position = element_blank(),
        axis.text.y = element_text(color = "black")) +
  theme_minimal() +
  labs(x = "Coefficient", y = "", title = "Family level test for differential abundance")
```


### Genus corncob
Plan to pairing with tree below
```{r}
analysis_genus <- corncob_mcr(mcr_genera)
```

```{r}
analysis_genus %>%
  unite(Genus, c(Phylum, Genus), sep = " ", remove = FALSE) %>%
  filter(VARIABLE != "mu.(Intercept)") %>%
  ggplot(aes(y = Genus, x = Estimate)) +
    geom_vline(xintercept = 0, alpha = 0.2) +
    geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +
    geom_point(aes(fill = Supergroup), shape = 21, color = "black") +
  facet_grid(Supergroup ~ VARIABLE, space = "free", scales = "free") +
  theme(legend.position = element_blank(),
        axis.text.y = element_text(color = "black")) +
  theme_minimal() +
  labs(x = "Coefficient", y = "", title = "Genus level test for differential abundance")
```


### Species corncob

```{r}
analysis_spp <- corncob_mcr(mcr_spp)
```

```{r, fig.height=10, fig.width=10}
analysis_spp %>%
  unite(Species, c(Genus, Species), sep = " ", remove = FALSE) %>%
  filter(VARIABLE != "mu.(Intercept)") %>%
  ggplot(aes(y = Species, x = Estimate)) +
    geom_vline(xintercept = 0, alpha = 0.2) +
    geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +
    geom_point(aes(fill = Supergroup), shape = 21, color = "black") +
  facet_grid(Supergroup + Order ~ VARIABLE, space = "free", scales = "free") +
  theme(legend.position = element_blank(),
        axis.text.y = element_text(color = "black")) +
  theme_minimal() +
  labs(x = "Coefficient", y = "", title = "Species level test for differential abundance")
```


Corncob take homes:


# Compare in situ and Tf samples

Examine in situ to T final samples for presence/absence.

> Repeat corncob analysis. Add in situ vs. incubation and run corncob on incubation coefficient. Do this at class and ASV level to ID those ASVs that are specifically positively differentially variable in the incubation samples compared to the in situ. 

```{r}
head(asv_wtax_qc)
# View(asv_wtax_qc)
```

Calculate percent change from in situ to Tf for all grazing experiments

```{r}
alv <- c("Alveolata-Ellobiopsidae", "Alveolata-Perkinsea", "Alveolata-Unknown", "Alveolata-Chrompodellids", "Alveolata-Apicomplexa")

# Extract taxa information
taxa_table <- data.frame(tax_table(TAX)) %>% rownames_to_column(var = "FeatureID")

perc_change <- asv_wtax_qc %>% 
    filter(value > 0) %>% 
  # Avg seq count by ASV across replicates
  group_by(SITE, VENT, SAMPLETYPE, FeatureID) %>% 
  summarise(avg_seq = mean(value)) %>% 
  mutate(ASSAY = case_when(
    SAMPLETYPE == "Incubation" ~ "Tf",
    TRUE ~ "insitu"
  )) %>%
    ungroup() %>% 
  select(-SAMPLETYPE) %>%
  pivot_wider(names_from = ASSAY, values_from = avg_seq, values_fn = sum) %>% 
  # Select only ASVs present in both in situ and incubation experiments.
  drop_na() %>% # remove NAs
  filter(!(insitu == 0 | Tf == 0)) %>% # remove if 1 or the other are zero
  filter(!(insitu == 0 & Tf == 0)) %>%
    mutate(seq_change = Tf - insitu) %>% 
    mutate(category_change = case_when(
           seq_change < 0 ~ "Decrease",
           seq_change > 0 ~ "Increase",
           seq_change == 0 ~ "No Change")) %>% 
  # Add in supergroup information
  left_join(select(taxa_table, FeatureID, Domain:Species) %>% distinct()) %>% 
  filter(Domain == "Eukaryota") %>%
  filter(Supergroup != "Opisthokonta") %>% 
  mutate(Supergroup = ifelse(is.na(Supergroup), "Unknown Eukaryota", Supergroup),
         Phylum = ifelse(is.na(Phylum), "Unknown", Phylum),
         Phylum = ifelse(Phylum == "Alveolata_X", "Ellobiopsidae", Phylum),
         Supergroup = ifelse(Supergroup == "Alveolata", paste(Supergroup, Phylum, sep = "-"), Supergroup)) %>% 
  mutate(SUPERGROUP = case_when(
    Supergroup %in% alv ~ "Other Alveolata",
    Supergroup == "Eukaryota_X" ~ "Unknown Eukaryota",
    Phylum == "Cercozoa" ~ "Rhizaria-Cercozoa",
    Phylum == "Radiolaria" ~ "Rhizaria-Radiolaria",
    Phylum == "Ochrophyta" ~ "Stramenopiles-Ochrophyta",
    Phylum == "Opalozoa" ~ "Stramenopiles-Opalozoa",
    Phylum == "Sagenista" ~ "Stramenopiles-Sagenista",
    TRUE ~ Supergroup
  ))

table(perc_change$category_change)
head(perc_change)
# unique(perc_change[1:2])
```

Of the ASVs that appeared in both in situ and Tf for each grazing experiment, 1073 decreased in sequence relative abundance, and over 1200 increased. Only 28 showed no change in sequence relative abundance.

Formatted table to show sequence increase vs. decrease PER ASV from insitu to experiment Tf.

```{r, fig.height=10, fig.width=9}
all_taxa_order <- c("Alveolata-Ciliophora", "Alveolata-Dinoflagellata", "Protalveolata", "Other Alveolata", "Amoebozoa", "Apusozoa", "Excavata", "Hacrobia", "Archaeplastida", "Rhizaria", "Rhizaria-Radiolaria", "Rhizaria-Cercozoa", "Stramenopiles", "Stramenopiles-Opalozoa", "Stramenopiles-Sagenista", "Stramenopiles-Ochrophyta", "Opisthokonta", "Unknown Eukaryota")
# length(all_taxa_order)

all_taxa_color = c("#fa9fb5", "#c51b8a", "#67000d", "#ef3b2c", "#ffffcc", "#feb24c","#cc4c02", "#c7e9b4", "#238b45", "#c6dbef", "#99d8c9","#1d91c0", "#253494", "#9e9ac8", "#54278f", "#bdbdbd", "#252525", "#f0f0f0")
# length(all_taxa_color)

perc_change %>% 
  group_by(SITE, VENT, category_change, SUPERGROUP) %>% 
  summarise(sum_change = sum(seq_change),
            asv_total = n_distinct(FeatureID)) %>% 
  mutate(SUPERGROUP_ORDER = factor(SUPERGROUP, levels = all_taxa_order),
         VENT_ORDER = factor(VENT, levels = vent_ids, labels = vent_fullname),
         SITE_ORER = factor(SITE, levels = c("VonDamm", "Piccard"), labels = site_fullname)) %>% 
  # mutate(SUPERGROUP_ORDER = factor(SUPERGROUP, levels = all_taxa_order)) %>% 
  ggplot(aes(x = sum_change, y = VENT_ORDER, fill = SUPERGROUP_ORDER)) +
  geom_bar(position = "dodge", stat = "identity", color = "black") +
  # scale_x_continuous(limits = c(-15000, 150000)) +
  scale_fill_manual(values = all_taxa_color) +
  # facet_grid(SITE_ORER ~ ., space = "free", scales = "free") +
  theme_linedraw() +
  geom_vline(xintercept = 0) +
    theme(
          # strip.text = element_blank(),
          strip.background = element_blank(),
          axis.ticks = element_blank(),
          strip.placement = "outside",
          legend.title = element_blank(),
          legend.position = "top",
          legend.text = element_text(size = 5),
          # panel.background = element_blank(),
          # panel.border = element_blank(),
          panel.grid.minor = element_blank()) +
    labs(x = "Sequence Decrease           Sequence Increase", y = "")
  # geom_bar(filter(category_change == "Increase"), stat = "identity") 
```

```{r}
# str(perc_change)
perc_change %>% 
  group_by(SITE, VENT, category_change, SUPERGROUP) %>% 
  summarise(sum_change = sum(seq_change),
            asv_total = n_distinct(FeatureID)) %>% 
  ungroup() %>% 
  mutate(asv_int = as.numeric(asv_total)) %>% 
  mutate(asv_change = case_when(
           category_change == "Decrease" ~ (0 - asv_int),
           TRUE ~ asv_int
         )) %>% 
  mutate(SUPERGROUP_ORDER = factor(SUPERGROUP, levels = all_taxa_order)) %>% 
  ggplot(aes(x = asv_change, y = VENT, fill = SUPERGROUP_ORDER)) +
  geom_bar(stat = "identity") +
  scale_x_continuous(limits = c(-350, 350)) +
  scale_fill_manual(values = all_taxa_color) +
  facet_grid(SITE ~ ., space = "free", scales = "free") +
  theme_linedraw() +
    theme(
          # strip.text = element_blank(),
          strip.background = element_blank(),
          axis.ticks = element_blank(),
          strip.placement = "outside",
          legend.title = element_blank(),
          legend.position = "top",
          legend.text = element_text(size = 5),
          # panel.background = element_blank(),
          # panel.border = element_blank(),
          panel.grid.minor = element_blank()) +
    labs(x = "ASV change", y = "")
```



```{r}
perc_change %>% 
  select(SITE, VENT, SUPERGROUP)
```


## CLR change
```{r}
# head(asv_wtax_qc)
numeric_tmp <- asv_wtax_qc %>% 
  filter(value > 0) %>% 
  group_by(FeatureID, SAMPLENAME, Taxon) %>% 
  summarise(MEAN_ACROSS_REPS = mean(value)) %>% 
  # unite(TAX, Taxon, FeatureID, sep = "__") %>% 
  select(FeatureID, SAMPLENAME, MEAN_ACROSS_REPS) %>% 
  pivot_wider(names_from = SAMPLENAME, values_from = MEAN_ACROSS_REPS, values_fill = 0) %>% 
  column_to_rownames(var = "FeatureID")

logratio_mcr <- data.frame(t(compositions::clr(t(numeric_tmp))))
## From above 
# head(logratio_mcr)
```






# Tree

```{r}
# physeq_mcr
```
What is relatedness between piccard and von damm ciliate communities?
First try at 
```{r}
# head(tax_table(physeq_mcr))
# mcr_ciliate <- subset_taxa(physeq_mcr, Phylum == "Ciliophora") %>% 
#   subset_samples(SAMPLETYPE != "Incubation") %>% 
#   tax_glom(taxrank="Species")
# 
# mcr_ciliate
# # head(tax_table(mcr_ciliate))
# # subset_ciliate <- prune_samples(sample_sums(mcr_ciliate) > 100)
# phy_tree(mcr_ciliate)
```
```{r}
# Bug in phyloseq requires update with dev version on github:
# library("devtools")
# install_github("joey711/phyloseq")
# library(phyloseq)
```



```{r, fig.height=18, fig.width=9}
# plot_tree(clean, 
#           color = "SITE",
#           label.tips = "Species", 
#           shape = "SAMPLETYPE", size = "abundance", base.spacing = 0.06)
# ?plot_tree
```

# Session information

```{r}
sessionInfo()
```
