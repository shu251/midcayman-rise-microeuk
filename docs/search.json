[
  {
    "objectID": "asv.html",
    "href": "asv.html",
    "title": "18S survey",
    "section": "",
    "text": "Set up R environment\n\n\nCode\nlibrary(tidyverse); library(phyloseq); library(ape)\nlibrary(ggupset)\n\n\nImport previously sequenced and analyzed tag-sequence data. See https://shu251.github.io/microeuk-amplicon-survey/ for additional information.\n\n\n\n\nCode\nload(\"input-data/MCR-amplicon-data.RData\", verbose = T)\n\n\nLoading objects:\n  phylo_obj\n  samplenames\n  physeq_wnames\n  metadata_mcr\n  asv_wtax_qc\n  TAX\n  tax_matrix\n  physeq_mcr\n\n\nCode\n# physeq_mcr\n\n\n\n\n\n\n\nCode\nvent_ids <- c(\"BSW\", \"Plume\")\n\nvent_ids <- c(\"BSW\",\"Plume\", \"Shrimpocalypse\", \"LotsOShrimp\", \"X18\", \"OMT\", \"OldManTree\", \"Rav2\", \"MustardStand\", \"ShrimpHole\", \"WhiteCastle\", \"ArrowLoop\")\nvent_fullname <- c(\"Background\",\"Plume\", \"Shrimpocalypse\", \"Lots 'O Shrimp\", \"X-18\", \"Old Man Tree\", \"Old Man Tree\", \"Ravelin #2\", \"Mustard Stand\", \"Shrimp Hole\", \"White Castle\", \"Arrow Loop\")\nsite_ids <- c(\"VD\", \"Piccard\")\nsite_fullname <- c(\"Von Damm\", \"Piccard\")\n\n# Colors for VD and Piccard\nsite_colors <- c(\"#418b84\", \"#943b36\")\n# site_colors\n\n# Vent colors\nvent_colors <- c(\"#c2bfc2\",\"#ebdac9\", \"#c02c5b\", \"#cfae20\", \"#86952c\", \"#a88fab\", \"#a88fab\", \"#70b2aa\", \"#8c906d\", \"#806fa2\", \"#8cabcf\", \"#609482\")\n\nnames(vent_colors) <- vent_fullname\nnames(site_colors) <- site_fullname\n# Cooler colors for VD\n# c(\"#4e7d4b\") green\n#569c91 blue\n#ae8fbb purple\n#ce86ba a lighter purple\n#31464a dark dark green\n#8c906d grey green\n#bab446 yellow green\n#ebdac9 white - cream\n#c2bfc2 grey\n# Piccard\n#c02c5b pink - red\n#d65a9e pink\n##cfae20 yellow\n\nall_taxa_color = c(\"#fa9fb5\", \"#c51b8a\", \"#67000d\", \"#ef3b2c\", \"#ffffcc\", \"#feb24c\", \"#c7e9b4\", \"#1d91c0\", \"#deebf7\", \"#253494\", \"#9e9ac8\", \"#238b45\", \"#54278f\", \"#bdbdbd\", \"#252525\", \"#fa9fb5\", \"#c51b8a\", \"#67000d\", \"#ef3b2c\", \"#ffffcc\", \"#feb24c\", \"#c7e9b4\", \"#1d91c0\", \"#253494\", \"#9e9ac8\", \"#238b45\", \"#54278f\", \"#bdbdbd\", \"#252525\")"
  },
  {
    "objectID": "asv.html#import-decontam-results-to-qc-asv-table",
    "href": "asv.html#import-decontam-results-to-qc-asv-table",
    "title": "18S survey",
    "section": "Import decontam results to QC ASV table",
    "text": "Import decontam results to QC ASV table\n\nload(\"../../microeuks_deepbiosphere_datamine/microeuk-amplicon-survey/seq-analysis/contam-asvs.RData\", verbose= TRUE)\n\nLoading objects:\n  list_of_contam_asvs\n\nclass(list_of_contam_asvs)\n\n[1] \"character\"\n\n\n\nasv_wtax_qc <- merged_asv %>%\n  select(FeatureID = '#OTU ID', everything()) %>%\n  filter(!(FeatureID %in% list_of_contam_asvs)) %>%\n  # In wide format, subsample 1000 random ASVs\n  # sample_n(1000, replace = FALSE) %>%\n  pivot_longer(cols = !FeatureID,\n               names_to = \"SAMPLE\", values_to = \"value\") %>%\n  filter(grepl(\"_MCR_\", SAMPLE)) %>%\n  left_join(merged_tax, by = c(\"FeatureID\" = \"Feature ID\")) %>%\n  left_join(filter(metadata_formatted, grepl(\"_MCR_\", SAMPLE))) %>%\n  unite(SAMPLENAME, SITE, SAMPLETYPE, YEAR, VENT, SAMPLEID, sep = \" \", remove = FALSE)\n# dim(asv_wtax_qc)\n# length(unique(asv_wtax_qc$FeatureID))\n\n\ntax_matrix <- asv_wtax_qc %>%\n  select(FeatureID, Taxon) %>%\n  distinct() %>%\n  separate(Taxon, c(\"Domain\", \"Supergroup\",\n                  \"Phylum\", \"Class\", \"Order\",\n                  \"Family\", \"Genus\", \"Species\"), sep = \";\") %>%\n  column_to_rownames(var = \"FeatureID\") %>%\n  as.matrix\n# dim(tax_matrix)\nasv_matrix <- asv_wtax_qc %>%\n  select(FeatureID, SAMPLE, value) %>%\n  pivot_wider(names_from = SAMPLE, values_from = value, values_fill = 0) %>%\n  column_to_rownames(var = \"FeatureID\") %>%\n  as.matrix\n# dim(asv_matrix)\n# dim(asv_matrix); dim(tax_matrix)\n\n# Align row names for each matrix\nrownames(tax_matrix) <- row.names(asv_matrix)\n# dim(asv_matrix)\nmcr_samples <- as.character(colnames(asv_matrix))\n\n# Set rownames of metadata table to SAMPLE information\nmetadata_mcr <- filter(metadata_formatted, SAMPLE %in% mcr_samples) %>%\n  rownames_to_column(var = \"X\") %>%\n  column_to_rownames(var = \"SAMPLE\")\n# dim(metadata_mcr)"
  },
  {
    "objectID": "asv.html#import-as-phyloseq-objects",
    "href": "asv.html#import-as-phyloseq-objects",
    "title": "18S survey",
    "section": "Import as phyloseq objects",
    "text": "Import as phyloseq objects\n\n# Import asv and tax matrices\nASV = otu_table(asv_matrix, taxa_are_rows = TRUE)\nTAX = tax_table(tax_matrix)\nphylo_obj <- phyloseq(ASV, TAX)\n# phylo_obj\n# Import metadata as sample data in phyloseq\nsamplenames <- sample_data(metadata_mcr)\n# samplenames\n# join as phyloseq object\nphyseq_wnames = merge_phyloseq(phylo_obj, samplenames)\n# colnames(ASV)\n# TAX\n## Check\nphyseq_wnames\n\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 17878 taxa and 23 samples ]\nsample_data() Sample Data:       [ 23 samples by 16 sample variables ]\ntax_table()   Taxonomy Table:    [ 17878 taxa by 8 taxonomic ranks ]\n\nntaxa(physeq_wnames) #17878\n\n[1] 17878\n\nnsamples(physeq_wnames) #23\n\n[1] 23\n\n# # physeq_wnames # run with sample, 1000 tax.\n# # head(taxa_names(physeq_wnames))\nmcr_tree <- rtree(ntaxa(physeq_wnames), rooted = TRUE, tip.label = taxa_names(physeq_wnames))\n# class(mcr_tree)\n# ?merge_phyloseq\nphyseq_mcr <- merge_phyloseq(physeq_wnames, mcr_tree)"
  },
  {
    "objectID": "asv.html#save-output-asv-tables-for-downstream-analyses",
    "href": "asv.html#save-output-asv-tables-for-downstream-analyses",
    "title": "18S survey",
    "section": "Save output ASV tables for downstream analyses",
    "text": "Save output ASV tables for downstream analyses\n\n# phylo_obj <- phyloseq(ASV, TAX)\n# samplenames <- sample_data(metadata_formatted)\n# physeq_wnames = merge_phyloseq(phylo_obj, samplenames)\n# dim(asv_wtax_qc)\n# physeq_wnames\n\n# save(phylo_obj, samplenames, physeq_wnames, metadata_mcr, asv_wtax_qc, TAX, tax_matrix, physeq_mcr, file = \"input-data/MCR-amplicon-data.RData\")"
  },
  {
    "objectID": "grazing.html",
    "href": "grazing.html",
    "title": "Protistan grazing analysis",
    "section": "",
    "text": "Code below details how to import cell count (FLP count) information from Mid-Cayman Rise protistan grazing incubations and estimate grazing rate and cell biomass.\n\n\n\n\nCode\nlibrary(tidyverse); library(cowplot); library(broom)\nlibrary(patchwork)\n\n\nSet color schematic\n\n\nCode\n# vent_ids &lt;- c(\"BSW\",\"Plume\", \"Shrimpocalypse\", \"LotsOShrimp\", \"X18\", \"OMT\", \"Rav2\", \"MustardStand\", \"ShrimpHole\")\n# vent_fullname &lt;- c(\"Background\",\"Plume\", \"Shrimpocalypse\", \"Lots 'O Shrimp\", \"X-18\", \"Old Man Tree\", \"Ravelin #2\", \"Mustard Stand\", \"Shrimp Hole\")\n# Order by temperature\nvent_ids &lt;- c(\"BSW\",\"Plume\", \"LotsOShrimp\", \"Shrimpocalypse\", \n              \"ShrimpHole\", \"X18\", \"Rav2\", \"MustardStand\", \"OMT\")\nvent_fullname &lt;- c(\"Background\",\"Plume\", \"Lots 'O Shrimp\", \"Shrimpocalypse\",  \n                   \"Shrimp Hole\", \"X-18\", \"Ravelin #2\", \"Mustard Stand\", \"Old Man Tree\")\n\nsite_ids &lt;- c(\"VD\", \"Piccard\")\nsite_fullname &lt;- c(\"Von Damm\", \"Piccard\")\nsite_color &lt;- c(\"#264653\", \"#E76F51\")\nnames(site_color) &lt;- site_fullname\n\nwhole_pal &lt;- c(\"#264653\", \"#2A9D8F\", \"#E9C46A\",\"#F4A261\", \"#E76F51\")\n\nextra &lt;- c(\"#eae2b7\", \"#5f0f40\", \"#90be6d\", \"#941b0c\", \"#577590\")\n\n\n\n\n\nImport eukaryotic cell count data from grazing experiments. In this section, we will calculate cells per ml from raw counts (Field of view, etc.) and use to estimate protist cell concentration. These will be used below in grazing experiment calculations.\n\n\nCode\ncounts &lt;- read.delim(\"input-data/euk-counts-compiled.txt\", \n                     blank.lines.skip = FALSE,\n                     na.strings = c(\"\", \"NA\"),\n                     stringsAsFactors = FALSE) # Import\ncounts[is.na(counts)] &lt;- 0 # Change blanks to zeroes\n\n\nRaw data table collected during microscopy count process. Below code reviews the structure of this raw data and updates column headers to be more ‘R’ friendly.\n\n\nCode\n# head(counts)\ncolnames(counts) &lt;- c(\"DATE\", \"SAMPLE\", \"EXPID\", \"VOL\", \"MAG\", \"FOV\", \"nanoNoFLP\", \"microNoFLP\", \"nanoFLP\", \"microFLP\", \"NOTES\", \"DateCompiled\"); colnames(counts)\n\n\n [1] \"DATE\"         \"SAMPLE\"       \"EXPID\"        \"VOL\"          \"MAG\"         \n [6] \"FOV\"          \"nanoNoFLP\"    \"microNoFLP\"   \"nanoFLP\"      \"microFLP\"    \n[11] \"NOTES\"        \"DateCompiled\"\n\n\n\nTo count occurrence and number of FLP ingested by eukaryotic cells, the number of FLPs ingested was tallied and comma separated for multiple eukaryotic cells with FLP. These values need to separated and counted as 1 eukaryotic cell each, but retain the number of FLP per cell.\n\nParse raw microscopy count data.\n\n\nCode\ncounts_occur &lt;- counts %&gt;%\n  # remove incomplete\n  filter(NOTES != \"Not countable\") %&gt;% \n  # Count number of euk cells observed with FLPs (ex. if \"1,2\", 'occur' will = 2)\n  mutate(nanoFLP_occur = as.numeric(str_count(nanoFLP, \"[1-9]\\\\d*\")), \n         microFLP_occur = as.numeric(str_count(microFLP, \"[1-9]\\\\d*\")),\n         # Add number of euk cells with FLPs to those without for total number of euk cells\n         nanoTOTAL = as.numeric(nanoNoFLP) + nanoFLP_occur, \n         microTOTAL = as.numeric(microNoFLP) + microFLP_occur,\n         euksTOTAL = nanoTOTAL + microTOTAL) %&gt;%\n      data.frame"
  },
  {
    "objectID": "grazing.html#running-code",
    "href": "grazing.html#running-code",
    "title": "Protistan grazing analysis",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Microbial eukaryotic predation pressure and biomass at Mid-Cayman Rise: Implications for deep-sea carbon cycling",
    "section": "",
    "text": "Summary: Deep-sea hydrothermal vent geochemistry shapes the foundation of the microbial food web by fueling chemolithoautotrophic microbial activity. Microbial eukaryotes play a critical role in hydrothermal vent food webs as consumers, hosts of symbiotic bacteria, and as a nutritional source to higher trophic levels. This study aims to measure the cell concentration and grazing pressures of vent-associated microbial eukaryotes in low temperature diffuse hydrothermal fluids using grazing assays conducted at both ambient (shipboard) and in situ pressures. Fluids from the Von Damm and Piccard vent fields at the Mid-Cayman Rise in the Caribbean Sea were targeted, as each field represents a distinct geologic setting with correspondingly distinct fluid compositions. Results from in situ pressure experiments generally showed higher grazing rates and cell concentrations relative to the shipboard experiments, likely due to the impact of depressurization. This new quantification of protistan biomass in deep-sea hydrothermal vent ecosystems contributes to a more comprehensive understanding of the microbial food web in these environments. Hydrothermally-fuelled microbial food webs play a significant role in the broader deep-sea carbon budget by contributing to local carbon export and supply of nutrient resources to the deep ocean.\n\n\n\nROV Jason (Credit: Rika Anderson)\n\n\n\n\n\nMustard Stand (Credit: WHOI)\n\n\n\n\n\nSampling IGTs on the RV Atlantis (Credit: Rika Anderson)\n\n\n\n\n\nRavelin #2 (Credit: WHOI)\n\n\n\n\n\nFilter collected via ROV Jason (Credit: Rika Anderson)\n\n\n\n\n\nBartizan (Credit: WHOI)\n\n\n\n\n\nSampling the HOG\n\n\nContact info: skhu[at]tamu.edu\nRaw sequence data are available through NCBI under SRA BioProject accession number PRJNA802868."
  },
  {
    "objectID": "grazing.html#calculate-cells-per-ml-euk",
    "href": "grazing.html#calculate-cells-per-ml-euk",
    "title": "Protistan grazing analysis",
    "section": "Calculate cells per ml (euk)",
    "text": "Calculate cells per ml (euk)\nInput data are the raw microscopy counts by FOV. Code below calculations cells/ml based on these values. Additionaly, variance and standard deviation are also calculated. Eukaryotic cells were also classified by size, where micro equates to >20um and nano is <20um. All counts were done at 100x magnification, confirm this: unique(counts_occur$MAG).\nCalculate cell concentration (cells/ml).\n\n\nCode\ncounts_cellsml_all <- counts_occur %>%\n  group_by(SAMPLE, EXPID, VOL) %>% #Calculate averages by sample\n  summarise(totalFOV = n(), # Count total FOV counted\n            nanoAvg = sum(nanoTOTAL)/totalFOV, #Average per FOV\n            nanoVar = var(nanoTOTAL), #Variance\n            nanoSd = (2*(sqrt(nanoVar))), #Standard deviation\n            microAvg = sum(microTOTAL)/totalFOV, ## Repeat for microeuks\n            microVar = var(microTOTAL), \n            microSd = (2*(sqrt(microVar))), \n            euksAvg = sum(euksTOTAL)/totalFOV, ## Repeat for total cell count\n            euksVar = var(euksTOTAL), \n            euksSd = (2*(sqrt(euksVar))), \n            .groups = 'drop_last') %>%\n  # Calculate cells/ml based on magnification (at x100, 0.01 is vol of grid), volume filtered (VOL), dilution factor (0.9), and area of counting grid (for Huber lab scope, it is 283.385):\n  mutate(nanoCONC = ((nanoAvg * 283.385)/(VOL * 0.01 * 0.9)),\n         microCONC = ((microAvg * 283.385)/(VOL * 0.01 * 0.9)),\n         eukCONC = ((euksAvg * 283.385)/(VOL * 0.01 * 0.9))\n         ) %>%\n  # left_join(expmeta) %>%\n  separate(SAMPLE, c(\"Site\", \"Name\"), sep = \"-\", remove = FALSE) %>%\n  separate(EXPID, c(\"TimePoint\", \"Replicate\"), sep = \"-\", remove = FALSE) %>%\n  data.frame\n\n\n\nReplicates belong to the same experiment for either Bag or IGT incubation. Below, modify these names and label new column with bag or igt. And create an average across replicates.\n\nAverage cells/ml across replicates, pivot to long format\n\n\nCode\ncounts_cellsml_avg <- counts_cellsml_all %>%\n  select(Site, Name, TimePoint, Replicate, nanoCONC, microCONC, eukCONC) %>%\n  mutate(EXP_TYPE = case_when(\n    grepl(\"IGT\", Replicate) ~ \"IGT\",\n    grepl(\"Rep\", Replicate) ~ \"Bag\"\n  )) %>%\n  mutate(IGT_REP = case_when(\n    EXP_TYPE == \"IGT\" ~ Replicate,\n    EXP_TYPE == \"Bag\" ~ \"Bag\")) %>%\n  select(-Replicate) %>%\n  pivot_longer(cols = ends_with(\"CONC\"), names_to = \"VARIABLE\", values_to = \"CONCENTRATION\") %>%\n  group_by(Site, Name, TimePoint, EXP_TYPE, IGT_REP, VARIABLE) %>%\n  # Calculate mean, variance, SD, min, and max\n  summarise(MEAN = mean(CONCENTRATION),\n            VAR = var(CONCENTRATION),\n            SD = sd(CONCENTRATION),\n            SEM =(sd(CONCENTRATION)/sqrt(length(CONCENTRATION))),\n            MIN = min(CONCENTRATION),\n            MAX = max(CONCENTRATION),\n            .groups = 'drop_last') %>%\n  data.frame\n\n\nNOTES on calculations:\nVAR = takes the sum of the squares of each value’s deviation from the mean and divides by the number of such values minus one. This differs from the calculation of variance across an entire population in that the latter divides by the size of the dataset without subtracting one.\nSD = standard deviation of all values\nSEM = standard deviation of sampling distribution; standard deviation divided by the square root of the sample size.\nSave output file\n\n\nCode\n# save(counts_cellsml_all, counts_cellsml_avg, file = \"input-data/raw-avg-eukcount.RData\")\n\n\nReformat to parse experiment information type\n\n\nCode\n# Convert to long format and add column that reports IGT vs bag experiment\nplot_euk_conc <- counts_cellsml_all %>%\n  select(Site, Name, TimePoint, Replicate, ends_with(\"CONC\")) %>%\n  mutate(EXP_TYPE = case_when(\n    grepl(\"IGT\", Replicate) ~ \"IGT\",\n    grepl(\"Rep\", Replicate) ~ \"Bag\"\n  )) %>%\n  pivot_longer(cols = ends_with(\"CONC\"), names_to = \"VARIABLE\", values_to = \"CONCENTRATION\") %>%\n  data.frame\n\n\nFactor cell count data\n\n\nCode\nunique(plot_euk_conc$Name)\n\n\n[1] \"LotsOShrimp\"    \"Plume\"          \"Shrimpocalypse\" \"BSW\"           \n[5] \"MustardStand\"   \"OMT\"            \"Rav2\"           \"ShrimpHole\"    \n[9] \"X18\"           \n\n\nCode\nvent_ids <- c(\"BSW\",\"Plume\", \"Shrimpocalypse\", \"LotsOShrimp\", \"X18\", \"OMT\", \"Rav2\", \"MustardStand\", \"ShrimpHole\")\nvent_fullname <- c(\"Background\",\"Plume\", \"Shrimpocalypse\", \"Lots 'O Shrimp\", \"X-18\", \"Old Man Tree\", \"Ravelin #2\", \"Mustard Stand\", \"Shrimp Hole\")\nsite_ids <- c(\"VD\", \"Piccard\")\nsite_fullname <- c(\"Von Damm\", \"Piccard\")\nplot_euk_conc$SiteOrder <- factor(plot_euk_conc$Site, levels = site_ids, labels = site_fullname)\nplot_euk_conc$NameOrder <- factor(plot_euk_conc$Name, levels = vent_ids, labels = vent_fullname)\n\n\n\nPlot eukaryote cells per ml\nFigure 1 reports all eukaryote cells per ml counts from all grazing assay counts..\n\n\nCode\nconc_boxplot <- ggplot(plot_euk_conc, aes(x = NameOrder, \n                                          y = CONCENTRATION, \n                                          group = NameOrder,\n                                          fill = VARIABLE,\n                                          shape = EXP_TYPE)) +\n    geom_boxplot() + \n    # Do not color by time point\n    geom_jitter(color = \"black\", size = 2, aes(fill = VARIABLE,\n                                          shape = EXP_TYPE)) +\n    scale_shape_manual(values = c(21,24)) +\n    scale_fill_manual(values = c(\"#e7298a\", \"#fcbba1\", \"#c6dbef\")) +\n    coord_flip() +\n    scale_y_log10() +\n    # scale_y_log10(limits = c(10,1000), expand = c(0, 0)) +\n    facet_grid(SiteOrder ~ EXP_TYPE, space = \"free\", scale = \"free\") +\n    theme_bw() + \n  theme(axis.text.x = element_text(angle = 0, h = 1, vjust = 1),\n        strip.background = element_blank(),\n        legend.position = \"right\",\n        legend.title = element_blank()) +\n    labs(x = \"\", y = bquote(\"Eukaryote cells \"~mL^-1),\n         title = \"Distribution of all eukaryotic cell counts\")\n\nconc_boxplot\n\n\nWarning: Transformation introduced infinite values in continuous y-axis\nTransformation introduced infinite values in continuous y-axis\n\n\nWarning: Removed 39 rows containing non-finite values (stat_boxplot).\n\n\nWarning: Removed 39 rows containing missing values (geom_point).\n\n\n\n\n\nFigure 1: ?(caption)\n\n\n\n\nEukaryote cell concentration (cells/ml) are lower in the background and plume samples compared to vent sites. ~300 cells/ml in background and plume compared to ~1000 cells per ml at the vent sites. These values are also consistent between each vent site (Von Damm and Piccard) and between Bag and IGT samples.\n\nBoxplot represents the median (line in box) and the 1st and 3rd quartiles in the lower and upper hinges, respectively (25th and 75th percentiles). Black data points are outliers from the boxplot. Upper and lower whiskers represent the 1.5 * interquartile ranges. Pink data points are the values contributing to the boxplot (individial counts across replicates and time points.)\n\n\neukCONC is the sum of micro and nano. Because there was a discrepency between the micro and nano cell counts, we plan to combine for most of the analysis. Here we show that the cell concentration across replicate samples was similar throughout experiments. And that the bag versus IGT experiment results were within range of one another."
  },
  {
    "objectID": "grazing.html#isolate-t0-only-counts-for-cellsml-plot",
    "href": "grazing.html#isolate-t0-only-counts-for-cellsml-plot",
    "title": "Protistan grazing analysis",
    "section": "2.2 Isolate T0 only counts for cells/ml plot",
    "text": "2.2 Isolate T0 only counts for cells/ml plot\n\n\nCode\nvent_ids <- c(\"BSW\",\"Plume\", \"Shrimpocalypse\", \"LotsOShrimp\", \"X18\", \"OMT\", \"Rav2\", \"MustardStand\", \"ShrimpHole\")\nvent_fullname <- c(\"Background\",\"Plume\", \"Shrimpocalypse\", \"Lots 'O Shrimp\", \"X-18\", \"Old Man Tree\", \"Ravelin #2\", \"Mustard Stand\", \"Shrimp Hole\")\n\nplot_euk_format <- plot_euk_conc %>%\n  filter(TimePoint == \"T0\") %>% \n  # filter(TimePoint == \"T0\" & (VARIABLE == \"eukCONC\")) %>%\n  group_by(SiteOrder, NameOrder, TimePoint, EXP_TYPE, VARIABLE) %>%\n  summarise(avg_conc = mean(CONCENTRATION),\n            SEM_conc = (sd(CONCENTRATION)/sqrt(length(CONCENTRATION))),\n            .groups = \"rowwise\") %>%\n  unite(EXPERIMENT, SiteOrder, NameOrder, EXP_TYPE, remove = FALSE) %>%\n  data.frame\n\nplot_euk_format\n\n\n                   EXPERIMENT SiteOrder      NameOrder TimePoint EXP_TYPE\n1     Von Damm_Background_Bag  Von Damm     Background        T0      Bag\n2     Von Damm_Background_Bag  Von Damm     Background        T0      Bag\n3     Von Damm_Background_Bag  Von Damm     Background        T0      Bag\n4          Von Damm_Plume_Bag  Von Damm          Plume        T0      Bag\n5          Von Damm_Plume_Bag  Von Damm          Plume        T0      Bag\n6          Von Damm_Plume_Bag  Von Damm          Plume        T0      Bag\n7           Von Damm_X-18_Bag  Von Damm           X-18        T0      Bag\n8           Von Damm_X-18_Bag  Von Damm           X-18        T0      Bag\n9           Von Damm_X-18_Bag  Von Damm           X-18        T0      Bag\n10  Von Damm_Old Man Tree_IGT  Von Damm   Old Man Tree        T0      IGT\n11  Von Damm_Old Man Tree_IGT  Von Damm   Old Man Tree        T0      IGT\n12  Von Damm_Old Man Tree_IGT  Von Damm   Old Man Tree        T0      IGT\n13    Von Damm_Ravelin #2_Bag  Von Damm     Ravelin #2        T0      Bag\n14    Von Damm_Ravelin #2_Bag  Von Damm     Ravelin #2        T0      Bag\n15    Von Damm_Ravelin #2_Bag  Von Damm     Ravelin #2        T0      Bag\n16    Von Damm_Ravelin #2_IGT  Von Damm     Ravelin #2        T0      IGT\n17    Von Damm_Ravelin #2_IGT  Von Damm     Ravelin #2        T0      IGT\n18    Von Damm_Ravelin #2_IGT  Von Damm     Ravelin #2        T0      IGT\n19 Von Damm_Mustard Stand_Bag  Von Damm  Mustard Stand        T0      Bag\n20 Von Damm_Mustard Stand_Bag  Von Damm  Mustard Stand        T0      Bag\n21 Von Damm_Mustard Stand_Bag  Von Damm  Mustard Stand        T0      Bag\n22   Von Damm_Shrimp Hole_Bag  Von Damm    Shrimp Hole        T0      Bag\n23   Von Damm_Shrimp Hole_Bag  Von Damm    Shrimp Hole        T0      Bag\n24   Von Damm_Shrimp Hole_Bag  Von Damm    Shrimp Hole        T0      Bag\n25          Piccard_Plume_Bag   Piccard          Plume        T0      Bag\n26          Piccard_Plume_Bag   Piccard          Plume        T0      Bag\n27          Piccard_Plume_Bag   Piccard          Plume        T0      Bag\n28 Piccard_Shrimpocalypse_Bag   Piccard Shrimpocalypse        T0      Bag\n29 Piccard_Shrimpocalypse_Bag   Piccard Shrimpocalypse        T0      Bag\n30 Piccard_Shrimpocalypse_Bag   Piccard Shrimpocalypse        T0      Bag\n31 Piccard_Shrimpocalypse_IGT   Piccard Shrimpocalypse        T0      IGT\n32 Piccard_Shrimpocalypse_IGT   Piccard Shrimpocalypse        T0      IGT\n33 Piccard_Shrimpocalypse_IGT   Piccard Shrimpocalypse        T0      IGT\n34 Piccard_Lots 'O Shrimp_Bag   Piccard Lots 'O Shrimp        T0      Bag\n35 Piccard_Lots 'O Shrimp_Bag   Piccard Lots 'O Shrimp        T0      Bag\n36 Piccard_Lots 'O Shrimp_Bag   Piccard Lots 'O Shrimp        T0      Bag\n    VARIABLE   avg_conc   SEM_conc\n1    eukCONC  91.837731  21.866127\n2  microCONC   0.000000   0.000000\n3   nanoCONC  91.837731  21.866127\n4    eukCONC 157.774683  67.098589\n5  microCONC  22.872439   8.878118\n6   nanoCONC 134.902245  58.794905\n7    eukCONC 314.872222 104.957407\n8  microCONC  41.982963  20.991481\n9   nanoCONC 272.889259  83.965926\n10   eukCONC 472.308333 122.450309\n11 microCONC 104.957407  34.985802\n12  nanoCONC 367.350926  87.464506\n13   eukCONC 409.333889  73.470185\n14 microCONC  10.495741  10.495741\n15  nanoCONC 398.838148  62.974444\n16   eukCONC 620.997994 123.177023\n17 microCONC  34.985802  14.282894\n18  nanoCONC 586.012191 131.196759\n19   eukCONC 259.769583  28.863287\n20 microCONC   0.000000   0.000000\n21  nanoCONC 259.769583  28.863287\n22   eukCONC 385.718472   7.871806\n23 microCONC  49.854769  28.863287\n24  nanoCONC 335.863704  20.991481\n25   eukCONC  79.301152  16.819081\n26 microCONC   9.329547   2.332387\n27  nanoCONC  69.971605  18.512747\n28   eukCONC 454.815432         NA\n29 microCONC  34.985802         NA\n30  nanoCONC 419.829630         NA\n31   eukCONC 454.815432  69.971605\n32 microCONC  34.985802  34.985802\n33  nanoCONC 419.829630  34.985802\n34   eukCONC 230.906296         NA\n35 microCONC   0.000000         NA\n36  nanoCONC 230.906296         NA\n\n\nCode\n# Factor\nplot_euk_format$Site_Order <- factor(plot_euk_format$SiteOrder, levels = site_fullname, labels = site_fullname)\n\n# View(plot_euk_format)\n# Isolate only total euk counts\neuk_plot <- ggplot((plot_euk_format %>% filter(VARIABLE == \"eukCONC\")), aes(x = NameOrder, y = avg_conc, fill = Site_Order)) +\n  geom_errorbar(aes(ymax = (avg_conc + SEM_conc), ymin = (avg_conc - SEM_conc)), width = 0.2) +\n  geom_point(aes(fill = Site_Order), color = \"black\", stat = \"identity\", size = 3, shape = 23) +\n  facet_grid(.~ Site_Order, space = \"free\", scales = \"free\") +\n  scale_fill_manual(values = site_color) +\n  theme_minimal() +\n    theme(panel.grid.major = element_line(), panel.grid.minor = element_blank(),\n           panel.background = element_blank(), \n           axis.line = element_line(colour = \"black\"), \n           axis.text.x = element_text(color=\"black\", size = 12, \n                                      angle = 45, hjust = 1, vjust = 1), \n           axis.text.y = element_text(color=\"black\", size = 12),\n           axis.title =element_text(color=\"black\", size = 12),\n           axis.ticks = element_line(),\n           strip.text =element_blank(), legend.title = element_blank()) +\n  labs(x = \"\", y = bquote(\"Eukaryote cells \"~mL^-1),\n       title = \"\")\n\neuk_plot\n\n\n\n\n\nPrint table of eukaryote cell count information to include in results section summary.\n\n\nCode\nplot_euk_format %>% \n  type.convert(as.is = TRUE) %>%\n  filter(VARIABLE == \"eukCONC\") %>% \n  mutate(SAMPLE_TYPE = case_when(\n    NameOrder == \"Background\" ~ \"Background\",\n    NameOrder == \"Plume\" ~ \"Plume\",\n    TRUE ~ SiteOrder\n  )) %>%\n  group_by(SAMPLE_TYPE) %>% \n  summarise(MEAN_cellml = format(mean(avg_conc), scientific = T),\n           min_cellml = format(min(avg_conc), scientific = T),\n           max_cellml = format(max(avg_conc), scientific = T),\n           num = n())\n\n\n# A tibble: 4 × 5\n  SAMPLE_TYPE MEAN_cellml  min_cellml   max_cellml     num\n  <chr>       <chr>        <chr>        <chr>        <int>\n1 Background  9.183773e+01 9.183773e+01 9.183773e+01     1\n2 Piccard     3.801791e+02 2.309063e+02 4.548154e+02     3\n3 Plume       1.185379e+02 7.930115e+01 1.577747e+02     2\n4 Von Damm    4.105001e+02 2.597696e+02 6.20998e+02      6\n\n\nCode\nplot_euk_format %>% \n  type.convert(as.is = TRUE) %>%\n  # filter(VARIABLE == \"eukCONC\") %>% \n  mutate(SAMPLE_TYPE = case_when(\n    NameOrder == \"Background\" ~ \"Background\",\n    NameOrder == \"Plume\" ~ \"Plume\",\n    TRUE ~ SiteOrder\n  )) %>%\n  group_by(SAMPLE_TYPE, VARIABLE) %>% \n  summarise(MEAN_cellml = format(mean(avg_conc), scientific = T),\n           min_cellml = format(min(avg_conc), scientific = T),\n           max_cellml = format(max(avg_conc), scientific = T),\n           num = n())\n\n\n`summarise()` has grouped output by 'SAMPLE_TYPE'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 12 × 6\n# Groups:   SAMPLE_TYPE [4]\n   SAMPLE_TYPE VARIABLE  MEAN_cellml  min_cellml   max_cellml     num\n   <chr>       <chr>     <chr>        <chr>        <chr>        <int>\n 1 Background  eukCONC   9.183773e+01 9.183773e+01 9.183773e+01     1\n 2 Background  microCONC 0e+00        0e+00        0e+00            1\n 3 Background  nanoCONC  9.183773e+01 9.183773e+01 9.183773e+01     1\n 4 Piccard     eukCONC   3.801791e+02 2.309063e+02 4.548154e+02     3\n 5 Piccard     microCONC 2.332387e+01 0e+00        3.49858e+01      3\n 6 Piccard     nanoCONC  3.568552e+02 2.309063e+02 4.198296e+02     3\n 7 Plume       eukCONC   1.185379e+02 7.930115e+01 1.577747e+02     2\n 8 Plume       microCONC 1.610099e+01 9.329547e+00 2.287244e+01     2\n 9 Plume       nanoCONC  1.024369e+02 6.99716e+01  1.349022e+02     2\n10 Von Damm    eukCONC   4.105001e+02 2.597696e+02 6.20998e+02      6\n11 Von Damm    microCONC 4.037945e+01 0e+00        1.049574e+02     6\n12 Von Damm    nanoCONC  3.701206e+02 2.597696e+02 5.860122e+02     6\n\n\nCode\n# unique(plot_euk_format$NameOrder)\nplot_euk_format %>% \n  mutate(SAMPLE_TYPE_BIN = case_when(\n    NameOrder == \"Background\" ~ \"Non-vent\",\n    NameOrder == \"Plume\" ~ \"Non-vent\",\n    TRUE ~ \"Vent\"\n  )) %>%\n  group_by(SAMPLE_TYPE_BIN, VARIABLE) %>% \n  summarise(MEAN_cellml = format(mean(avg_conc), scientific = T),\n           min_cellml = format(min(avg_conc), scientific = T),\n           max_cellml = format(max(avg_conc), scientific = T),\n           num = n())\n\n\n`summarise()` has grouped output by 'SAMPLE_TYPE_BIN'. You can override using\nthe `.groups` argument.\n\n\n# A tibble: 6 × 6\n# Groups:   SAMPLE_TYPE_BIN [2]\n  SAMPLE_TYPE_BIN VARIABLE  MEAN_cellml  min_cellml   max_cellml     num\n  <chr>           <chr>     <chr>        <chr>        <chr>        <int>\n1 Non-vent        eukCONC   1.096379e+02 7.930115e+01 1.577747e+02     3\n2 Non-vent        microCONC 1.0734e+01   0e+00        2.287244e+01     3\n3 Non-vent        nanoCONC  9.890386e+01 6.99716e+01  1.349022e+02     3\n4 Vent            eukCONC   4.003931e+02 2.309063e+02 6.20998e+02      9\n5 Vent            microCONC 3.469425e+01 0e+00        1.049574e+02     9\n6 Vent            nanoCONC  3.656988e+02 2.309063e+02 5.860122e+02     9\n\n\n\n\nCode\n# save(counts_cellsml_all, counts_cellsml_avg, counts_occur, file = \"output-data/MCR-cellcount-dfs\")"
  },
  {
    "objectID": "grazing.html#plot-eukaryote-cells-per-ml",
    "href": "grazing.html#plot-eukaryote-cells-per-ml",
    "title": "Protistan grazing analysis",
    "section": "2.1 Plot eukaryote cells per ml",
    "text": "2.1 Plot eukaryote cells per ml\nFigure 1 reports all eukaryote cells per ml counts from all grazing assay counts..\n\n\nCode\nconc_boxplot <- ggplot(plot_euk_conc, aes(x = NameOrder, \n                                          y = CONCENTRATION, \n                                          group = NameOrder,\n                                          fill = VARIABLE,\n                                          shape = EXP_TYPE)) +\n    geom_boxplot() + \n    # Do not color by time point\n    geom_jitter(color = \"black\", size = 2, aes(fill = VARIABLE,\n                                          shape = EXP_TYPE)) +\n    scale_shape_manual(values = c(21,24)) +\n    scale_fill_manual(values = c(\"#e7298a\", \"#fcbba1\", \"#c6dbef\")) +\n    coord_flip() +\n    scale_y_log10() +\n    # scale_y_log10(limits = c(10,1000), expand = c(0, 0)) +\n    facet_grid(SiteOrder ~ EXP_TYPE, space = \"free\", scale = \"free\") +\n    theme_bw() + \n  theme(axis.text.x = element_text(angle = 0, h = 1, vjust = 1),\n        strip.background = element_blank(),\n        legend.position = \"right\",\n        legend.title = element_blank()) +\n    labs(x = \"\", y = bquote(\"Eukaryote cells \"~mL^-1),\n         title = \"Distribution of all eukaryotic cell counts\")\n\nconc_boxplot\n\n\nWarning: Transformation introduced infinite values in continuous y-axis\nTransformation introduced infinite values in continuous y-axis\n\n\nWarning: Removed 39 rows containing non-finite values (`stat_boxplot()`).\n\n\nWarning: The following aesthetics were dropped during statistical transformation: fill\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: fill\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: fill\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: fill\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\nFigure 1: ?(caption)\n\n\n\n\nEukaryote cell concentration (cells/ml) are lower in the background and plume samples compared to vent sites. ~300 cells/ml in background and plume compared to ~1000 cells per ml at the vent sites. These values are also consistent between each vent site (Von Damm and Piccard) and between Bag and IGT samples.\n\nBoxplot represents the median (line in box) and the 1st and 3rd quartiles in the lower and upper hinges, respectively (25th and 75th percentiles). Black data points are outliers from the boxplot. Upper and lower whiskers represent the 1.5 * interquartile ranges. Pink data points are the values contributing to the boxplot (individial counts across replicates and time points.)\n\n\neukCONC is the sum of micro and nano. Because there was a discrepency between the micro and nano cell counts, we plan to combine for most of the analysis. Here we show that the cell concentration across replicate samples was similar throughout experiments. And that the bag versus IGT experiment results were within range of one another.\n\nPlot eukaryote cell concentration over time.\n\n\nCode\nvent_ids <- c(\"BSW\",\"Plume\", \"Shrimpocalypse\", \"LotsOShrimp\", \"X18\", \"OMT\", \"Rav2\", \"MustardStand\", \"ShrimpHole\")\nvent_fullname <- c(\"Background\",\"Plume\", \"Shrimpocalypse\", \"Lots 'O Shrimp\", \"X-18\", \"Old Man Tree\", \"Ravelin #2\", \"Mustard Stand\", \"Shrimp Hole\")\nsite_ids <- c(\"VD\", \"Piccard\")\nsite_fullname <- c(\"Von Damm\", \"Piccard\")\n\ncounts_cellsml_avg$SiteOrder <- factor(counts_cellsml_avg$Site, levels = site_ids, labels = site_fullname)\ncounts_cellsml_avg$NameOrder <- factor(counts_cellsml_avg$Name, levels = vent_ids, labels = vent_fullname)\n\n# Plot trend line of euk cell count for all experiments\ncounts_cellsml_avg %>%\n  filter(VARIABLE == \"eukCONC\") %>%\n  unite(\"Experiment\", NameOrder, IGT_REP, sep = \"-\", remove = FALSE) %>%\n  ggplot(aes(x = TimePoint, y = MEAN, shape = EXP_TYPE, fill = NameOrder)) +\n    geom_path(aes(group = Experiment)) +\n    # geom_errorbar(aes(ymax = (MEAN + SD), ymin = (MEAN - SD)), width = 0.2) +\n    geom_errorbar(aes(ymax = (MEAN + SEM), ymin = (MEAN - SEM)), width = 0.2) +\n    geom_point(stat = \"identity\", size = 2, aes(shape = EXP_TYPE)) +\n    scale_shape_manual(values = c(21, 24)) +\n    scale_fill_brewer(palette = \"Paired\") +\n    scale_y_log10() +\n    facet_wrap(SiteOrder ~ EXP_TYPE, scales = \"free\") +\n    theme_classic() + theme(strip.background = element_blank(), \n                            legend.title = element_blank(),\n                            title = element_text(size = 7, face = \"bold\"),\n                            axis.title = element_text(size = 9)) +\n    labs(title = \"Total euk cell counts for each experiment\", y = bquote(\"Average eukaryote cells \"~mL^-1), x = \"Time point\") +\n  guides(fill=guide_legend(override.aes=list(shape=21)))\n\n\n\n\n\n\nnote there is an overall drop in euk cells/ml in the final time point. Especially with the IGT samples. Take this into consideration"
  },
  {
    "objectID": "grazing.html#cells-per-ml-prok",
    "href": "grazing.html#cells-per-ml-prok",
    "title": "Protistan grazing analysis",
    "section": "3.1 Cells per ml (prok)",
    "text": "3.1 Cells per ml (prok)\nVisualize counts from proks. Get summary of prok counts, and incorporate into plot\n\n\nCode\n# head(insitu_proks)\n# insitu_proks$Name\ninsitu_proks %&gt;% filter(Name != \"Quakeplume\") %&gt;% \n  mutate(type = case_when(\n  Name == \"BSW\" ~ \"non-vent\",\n  Name == \"Plume\" ~ \"non-vent\",\n  TRUE ~ \"vent\"\n)) %&gt;% \n    # group_by(type) %&gt;% \n  group_by(type, Site) %&gt;% \n      summarize(mean = mean(MEAN),\n            min = min(MEAN),\n            max = max(MEAN))\n\n\n`summarise()` has grouped output by 'type'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 4 × 5\n# Groups:   type [2]\n  type     Site       mean    min     max\n  &lt;chr&gt;    &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1 non-vent Piccard  31645. 11860.  51429.\n2 non-vent VD       27184. 16478.  37890.\n3 vent     Piccard 109713. 53878. 238586.\n4 vent     VD       40907.  8816. 111430.\n\n\nFactor site names, etc.\n\n\nCode\n# Ordered by temperature\ninsitu_proks$Name_order &lt;- factor(insitu_proks$Name, levels = c(\"BSW\", \"Plume\",\n                                                                \"ShrimpHole\", \"X18\", \"MustardStand\", \n                                                                \"Rav2\", \"OMT\",\"Bartizan\",\"ArrowLoop\", \"Rav1\",\n                                                                \"Quakeplume\", \"LotsOShrimp\", \"SouthofHotChimlet\",\n                                                                \"SouthofLungSnack\", \"Shrimpocalypse\", \"ShrimpGulley\", \n                                                                \"HotChimlet1\"), \n                                  labels = c(\"Background\",\"Plume\", \n                                             \"Shrimp Hole\", \"X-18\",\"Mustard Stand\",\n                                             \"Ravelin #2\", \"Old Man Tree\", \"Bartizan\", \"Arrow Loop\", \"Ravelin #1\",\n                                          \n                                             \"Quakeplume\", \"Lots 'O Shrimp\", \"South of Hot Chimlet\", \n                                             \"South of LungSnack\", \"Shrimpocalypse\", \"Shrimp Gulley\", \"Hot Chimlet #1\"))\n\nsite_ids &lt;- c(\"VD\", \"Piccard\")\nsite_fullname &lt;- c(\"Von Damm\", \"Piccard\")\ninsitu_proks$Site_order &lt;- factor(insitu_proks$Site, levels = site_ids, labels = site_fullname)\nsite_color &lt;- c(\"#E76F51\", \"#264653\")\nsite_fill &lt;- c(\"#E76F51\", \"#264653\")\n# names(site_color) &lt;- site_fullname\n\n\nWrite function to output scientific notation in the plot with x 10^a\n\n\nCode\nlibrary(scales)\n\n\n\nAttaching package: 'scales'\n\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\nCode\nscientific_10 = function(x) {\n  ifelse(\n    x==0, \"0\",\n    parse(text = sub(\"e[+]?\", \" %*% 10^\", scales::scientific_format()(x)))\n  )\n} \n\n\n\n\nCode\nprok_plot &lt;- ggplot(insitu_proks, aes(x = Name_order, y = MEAN)) +\n  geom_errorbar(aes(ymax = (MEAN + SEM), ymin = (MEAN - SEM)), width = 0.2) +\n  geom_point(stat = \"identity\", shape = 21, stroke = 2, aes(fill = Site_order,\n                                                            color = Site_order), size = 3) +\n  facet_grid(.~ Site_order, space = \"free\", scales = \"free\") +\n  scale_fill_manual(values = c(\"#E76F51\", \"#264653\")) +\n  scale_color_manual(values = c(\"#E76F51\", \"#264653\")) +\n  labs(y = bquote(\"Prokaryote cells \"~mL^-1), x = \"\", title = \"\") +\n  scale_y_log10(label = scientific_10) +\n  # scale_y_log10(label=trans_format(\"log10\",math_format(10^.x))) +\n  # scale_y_continuous(label = scientific_10) +\n  theme_minimal() +\n    theme(panel.grid.major = element_line(), panel.grid.minor = element_blank(),\n           panel.background = element_blank(), \n           axis.line = element_line(colour = \"black\"), \n           axis.text.x = element_text(color=\"black\", size = 13, \n                                      angle = 45, hjust = 1, vjust = 1), \n           axis.text.y = element_text(color=\"black\", size = 13),\n           axis.title =element_text(color=\"black\", size = 13),\n           axis.ticks = element_line(),\n           strip.text =element_blank(), legend.title = element_blank())\nprok_plot\n\n\n\n\n\n\nEuk and prok counts\nCombined eukaryote and prokaryote cell counts ## Figure 1a-b\n\n\nCode\neuk_prok_ab &lt;- (euk_plot + theme(legend.position = \"top\")) + (prok_plot + theme(legend.position = \"top\")) + patchwork::plot_layout(ncol = 2) + patchwork::plot_annotation(tag_levels = \"a\")\neuk_prok_ab\n\n\n\n\n\n\n\nCombine with previous MCR cell counts\nCompare in situ prokaryote cell counts from 2020 to previous years\n\n\nCode\nprok_prev &lt;- read.csv(\"input-data/cellcount_previousyr.csv\")\n\nprok_prev_formatted &lt;- prok_prev %&gt;% \n  mutate(VENTSITE = case_when(\n    grepl(\"Piccard\", Site) ~ \"Piccard\",\n    grepl(\"Von Damm\", Site) ~ \"VD\"\n  )) %&gt;% \n  filter(!is.na(YEAR)) %&gt;% #QC of \n  # filter(cells_ml != \"NC\") %&gt;% \n  # filter(cells_ml != \"\") %&gt;% \n  # filter(cells_ml != \"no data\") %&gt;% \n  type.convert(as.is = TRUE, numerals = \"no.loss\") %&gt;%\n  select(YEAR, VENTSITE, NAME = Name, REP=Replicate, CELLML = cells_ml, ORIGSAMPLE = Orig_vent_site_ID, ID_number, Origin)\n\n\nRe-import 2020 data to compare.\n\n\nCode\n# Re-import 2020\nprok &lt;- read.delim(\"input-data/prokINSITU-counts-compiled.txt\")\n# View(prok)\nproks_allyrs &lt;- prok %&gt;% \n  separate(SAMPLE, c(\"VENTSITE\", \"NAME\"), sep = \"-\", remove = FALSE) %&gt;% \n  mutate(YEAR = 2020) %&gt;%\n  select(YEAR, VENTSITE, NAME, REP, CELLML, ORIGSAMPLE = BAC) %&gt;% \n  bind_rows(prok_prev_formatted %&gt;% select(-ID_number, -Origin)) %&gt;% \n  type.convert(as.is = TRUE) %&gt;%\n  # Remove not countable or not data samples:\n  filter(CELLML != \"NC\") %&gt;%\n  filter(CELLML != \"\") %&gt;%\n  filter(CELLML != \"no data\") %&gt;%\n  filter(CELLML != \"not countable\") %&gt;% \n  data.frame\n\n# View(proks_allyrs)\n# View(as.data.frame(unique(proks_allyrs$NAME)))\n\nvent_order &lt;- c(\"BSW\",\"Plume\",\"Quakeplume\",\"NearsummitBeebee\",\"MainOrifice\",\"NearMainOrifice\",\"Rav1\",\"HotChimlet1\",\"HotChimlet\",\"SouthofHotChimlet\",\"NearHotChimlet\",\"HotCracks1\",\"HotCracks2\",\"ShrimpHole\",\"ShrimpHole(X18)\",\"X18\",\"X19\",\"SouthofLungSnack\",\"TwinPeaks\",\"OMT\",\"WhiteCastle\",\"GingerCastle\",\"ArrowLoop\",\"Bartizan\",\"LotsOShrimp\",\"MustardStand\",\"ShrimpButtery\",\"ShrimpCanyon\",\"ShrimpGulley\",\"Shrimpocalypse\",\"ShrimpVegas\")\nvent_names &lt;- c(\"Background\",\"Plume\",\"Quakeplume\",\"Near summit Beebee Vents Mound\",\"Main Orifice\",\"Near Main Orifice\",\"Ravelin #1\",\"Hot Chimlet #1\",\"Hot Chimlet\",\"South of Hot Chimlet\",\"Near Hot Chimlet\",\"Hot Cracks #1\",\"Hot Cracks #2\",\"Shrimp Hole\",\"Shrimp Hole (X-18)\",\"X-18\",\"X-19\",\"South of Lung Snack\",\"Twin Peaks\",\"Old Man Tree\",\"White Castle\",\"Ginger Castle\",\"Arrow Loop\",\"Bartizan\",\"Lots O Shrimp\",\"Mustard Stand\",\"Shrimp Buttery\",\"Shrimp Canyon\",\"Shrimp Gulley\",\"Shrimpocalypse\",\"Shrimp Vegas\")\nproks_allyrs$NAME_ORDER &lt;- factor(proks_allyrs$NAME, levels = vent_order, labels = vent_names)\nproks_allyrs$VENTSITE_ORDER &lt;- factor(proks_allyrs$VENTSITE, levels = c(\"Piccard\", \"VD\"), labels = c(\"Piccard\", \"Von Damm\"))\n\n\nPlot by year.\n\n\nCode\n# pdf(\"compare-across-yr-cellcount-04052021.pdf\", h = 8, w = 7)\nggplot(proks_allyrs, aes(x = NAME_ORDER, y = as.numeric(CELLML), fill = factor(YEAR), shape = VENTSITE_ORDER)) +\n  geom_point(stat = \"identity\", aes(fill = factor(YEAR)), size = 3) +\n  scale_shape_manual(values = c(21,23)) +\n  coord_flip() +\n  facet_grid(VENTSITE_ORDER ~ ., space = \"free\", scales = \"free\") +\n  scale_y_log10() +\n  scale_fill_manual(values = c(\"#1c9099\", \"#ffeda0\", \"#fc4e2a\")) +\n  theme_linedraw() +\n  theme(axis.text = element_text(color = \"black\", size = 10),\n        strip.background = element_blank(),\n        strip.text.y = element_text(color = \"black\", size = 11, hjust = 0, vjust = 1),\n        legend.title = element_blank(),\n        legend.position = \"bottom\",\n        panel.grid.minor = element_blank(),\n        panel.grid.major = element_line(color = \"grey\")) +\n  labs(y = bquote(\"Cells \"~mL^-1), x = \"\") +\n  guides(fill=guide_legend(override.aes=list(shape=22)))\n\n\n\n\n\nCode\n# dev.off()\n\n\n\n\nCode\n# head(insitu_proks)\n# names(counts_cellsml_avg)\nprok_tojoin &lt;- insitu_proks %&gt;% \n  mutate(MEAN_SIG = signif(as.numeric(MEAN), digits = 5),\n         MIN_sig = signif(as.numeric(MIN), digits = 4),\n         MAX_sig = signif(as.numeric(MAX), digits = 4)) %&gt;% \n  unite(\"PROK_MinMax\", MIN_sig, MAX_sig, sep = \" / \") %&gt;%\n  select(Site, Name, PROK_ml = MEAN_SIG, PROK_MinMax, PROK_sem = SEM)\n# prok_tojoin"
  },
  {
    "objectID": "grazing.html#determine-flp-per-euk-cell",
    "href": "grazing.html#determine-flp-per-euk-cell",
    "title": "Protistan grazing analysis",
    "section": "4.1 Determine FLP per euk cell",
    "text": "4.1 Determine FLP per euk cell\nIsolate euk cell counts with FLPs (comma separated for counts). These need to be separated into rows, use counts_occur data frame from above.\n\n\nCode\n# Select nano and micro counts with FLPs\ncounts_sepflp &lt;- counts_occur %&gt;% \n  filter(!NOTES == \"Discard\") %&gt;% \n  filter(!(NOTES == \"DTAF stain prevented counts of FLP, Euks only\")) %&gt;%\n  select(DATE, SAMPLE, EXPID, VOL, MAG, FOV, nanoFLP, microFLP) %&gt;%\n  # Inputs that are comma separated will be split into a new row\n  separate_rows(microFLP, sep = \",\", convert = TRUE) %&gt;%\n  separate_rows(nanoFLP, sep = \",\", convert = TRUE) %&gt;%\n  # Replace NAs with zeroes\n  replace_na(list(microFLP = 0, nanoFLP = 0)) %&gt;% \n  data.frame\n\n\noptional gut check of data table modification\n\n\nCode\n## Check, see FOV 23, separated into rows.\n# View(counts_sepflp %&gt;%\n# filter(SAMPLE == \"VD-Rav2\" & EXPID == \"T10-Rep1\"))\n# View(counts_occur %&gt;%\n# filter(SAMPLE == \"VD-Rav2\" & EXPID == \"T10-Rep1\"))\n\n\nIsolate counts that are &gt;0, so only eukaryote cells that were observed to have FLPs are included. Then calculate FLP per euk cell by dividing by 1 (each row is a euk cell, based on data transformation above).\n\n\nCode\ncounts_flp &lt;- counts_sepflp %&gt;%\n  select(SAMPLE, EXPID, nano_size = nanoFLP, micro_size = microFLP) %&gt;%\n  pivot_longer(cols = ends_with(\"_size\"), names_to = \"SizeFrac\", values_to = \"num_of_FLP\") %&gt;%\n  filter(num_of_FLP &gt; 0) %&gt;%\n  separate(SAMPLE, c(\"Site\", \"Name\"), sep = \"-\", remove = FALSE) %&gt;%\n  separate(EXPID, c(\"TimePoint\", \"Replicate\"), sep = \"-\", remove = FALSE) %&gt;%\n  mutate(EXP_TYPE = case_when(\n    grepl(\"IGT\", Replicate) ~ \"IGT\",\n    grepl(\"Rep\", Replicate) ~ \"Bag\"\n  )) %&gt;%\n  mutate(IGT_REP = case_when(\n    EXP_TYPE == \"IGT\" ~ Replicate,\n    EXP_TYPE == \"Bag\" ~ \"Bag\")) %&gt;%\n  group_by(SAMPLE, EXPID, EXP_TYPE, IGT_REP, SizeFrac) %&gt;%\n  summarise(total_FLP = sum(num_of_FLP),\n            total_euks_wflp = n(),\n            .groups = \"rowwise\") %&gt;%\n  data.frame\n\nhead(counts_flp)\n\n\n               SAMPLE    EXPID EXP_TYPE IGT_REP   SizeFrac total_FLP\n1 Piccard-LotsOShrimp  T0-Rep3      Bag     Bag  nano_size         3\n2 Piccard-LotsOShrimp T15-Rep3      Bag     Bag micro_size         1\n3 Piccard-LotsOShrimp T15-Rep3      Bag     Bag  nano_size         3\n4 Piccard-LotsOShrimp T20-Rep3      Bag     Bag  nano_size         2\n5       Piccard-Plume  T0-Rep1      Bag     Bag micro_size         2\n6       Piccard-Plume  T0-Rep1      Bag     Bag  nano_size         4\n  total_euks_wflp\n1               2\n2               1\n3               2\n4               1\n5               1\n6               3\n\n\nOUTPUT COLUMNS: (1) total_FLP = sum of FLPs found inside a euk cell (2) total_euks_wflp = number of euks counted with ingested FLP\nRepeat above operation for euk cells without any FLP. Here, subset total number of observations where there was a euk cell without FLP. These need to be counted as euk cell without an FLP.\n\nBelow code repeats process and compiles with other FLP/euk cell data.\n\nRepeat above process for euk cells without FLPs (0 FLP per euk cell needs to be included in overall average).\n\n\nCode\ncounts_flp_compiled &lt;- counts_occur %&gt;% \n  filter(!(NOTES == \"Discard\")) %&gt;% #Discard bad counts\n  filter(!(NOTES == \"DTAF stain prevented counts of FLP, Euks only\")) %&gt;%\n  type.convert(as.is = TRUE) %&gt;% #modify str() for columns\n  select(SAMPLE, EXPID, nano_size = nanoNoFLP, micro_size = microNoFLP) %&gt;% #select non flp\n  pivot_longer(cols = ends_with(\"_size\"), names_to = \"SizeFrac\", values_to = \"num_of_euks\") %&gt;%\n  separate(SAMPLE, c(\"Site\", \"Name\"), sep = \"-\", remove = FALSE) %&gt;%\n  separate(EXPID, c(\"TimePoint\", \"Replicate\"), sep = \"-\", remove = FALSE) %&gt;%\n  mutate(EXP_TYPE = case_when(\n    grepl(\"IGT\", Replicate) ~ \"IGT\",\n    grepl(\"Rep\", Replicate) ~ \"Bag\"\n  )) %&gt;%\n  mutate(IGT_REP = case_when(\n    EXP_TYPE == \"IGT\" ~ Replicate,\n    EXP_TYPE == \"Bag\" ~ \"Bag\")) %&gt;% \n  # filter(num_of_euks &gt; 0) %&gt;% # Remove observed zero counts\n  group_by(SAMPLE, EXPID, EXP_TYPE, IGT_REP, SizeFrac) %&gt;%\n  summarise(total_euks_noFLP = sum(num_of_euks),\n            .groups = \"rowwise\") %&gt;%\n  # Join with FLP count information\n  ## SAMPLE, EXPID, EXPTYPE, IGTREP, and SizeFrac variables should match\n  left_join(counts_flp) %&gt;% # Join with the counts of FLP per euk cell\n  replace_na(list(total_FLP = 0, total_euks_wflp = 0)) %&gt;% #Replace NAs with zero\n  data.frame\n\n\nJoining with `by = join_by(SAMPLE, EXPID, EXP_TYPE, IGT_REP, SizeFrac)`\n\n\nExtract total eukaryote cell value by adding across nano and micro. Then combine the nano and micro cell counts.\n\n\nCode\ncounts_flp_compiled_all &lt;- counts_flp_compiled %&gt;% \n  # Exclude size fraction:\n  group_by(SAMPLE, EXPID, EXP_TYPE, IGT_REP) %&gt;%\n  summarise(total_euks_noFLP = sum(total_euks_noFLP),\n            total_FLP = sum(total_FLP), \n            total_euks_wflp = sum(total_euks_wflp),\n            .groups = \"rowwise\") %&gt;% \n  add_column(SizeFrac = \"total_euks\") %&gt;% #Add SizeFrac column\n  bind_rows(counts_flp_compiled) %&gt;% # Combine back with flp compiled list\n  data.frame"
  },
  {
    "objectID": "grazing.html#calculate-flp-per-euk-cell-calculation",
    "href": "grazing.html#calculate-flp-per-euk-cell-calculation",
    "title": "Protistan grazing analysis",
    "section": "4.2 Calculate FLP per euk cell calculation",
    "text": "4.2 Calculate FLP per euk cell calculation\nFirst need to import and compile with metadata to get exact timing of experiments.\n\n\nCode\nmetadata &lt;- read.delim(\"input-data/flp-exp-metadata-compiled.txt\")\nexp_metadata &lt;- read.csv(\"input-data/flp_exp_metadata.csv\")\n\n\nAdd metadata.\n\nConsider IGT replicates.\nIGT_#_ denotes a separate IGT experiment. Due to bottle effects and the need to look at how replicate experiments compared, lets keep these separate. For IGT experiments labeled “b”, this means the OTHER HALF of the filter was counted or re-counted as a way to confirm my euk counting was precise.\n\n\nCode\ncounts_flp_calcs_all &lt;- counts_flp_compiled_all %&gt;% \n  # Add in metadata\n  # IGTXb are replicate counts, use this to include them as replicates\n  separate(EXPID, c(\"TimePoint\", \"REP\"), sep = \"-\", remove = FALSE) %&gt;% \n  mutate(\n    REP = ifelse(grepl(\"IGT5b\", REP), \"IGT5\", REP),\n    REP = ifelse(grepl(\"IGT4b\", REP), \"IGT4\", REP),\n    REP = ifelse(grepl(\"Bag\", EXP_TYPE), \"Bag\", REP)) %&gt;% \n  left_join(metadata, by = c(\"SAMPLE\" = \"SAMPLE\", \"TimePoint\" = \"TimePoint\", \"REP\" = \"REP\")) %&gt;% \n  left_join(exp_metadata, by = c(\"SAMPLE\" = \"SAMPLE\", \"REP\" = \"REP\")) %&gt;% \n  separate(SAMPLE, c(\"Site\", \"Name\"), sep = \"-\", remove = FALSE) %&gt;%\n  separate(EXPID, c(\"TimePoint\", \"Replicate_ID\"), sep = \"-\", remove = FALSE) %&gt;%\n  ## Treat repeated IGT counts completely separate\n  group_by(SAMPLE, Site, Name, EXPID, TimePoint, Replicate_ID, EXP_TYPE, IGT_REP, SizeFrac) %&gt;%\n  ## Treat repeated IGT counts as replicates (e.g., IGT4b and IGT4 == IGT4)\n  # group_by(SAMPLE, Site, Name, EXPID, TimePoint, Replicate_ID, EXP_TYPE, REP, SizeFrac) %&gt;%\n  # FLPperEuk is the total FLP divided by the total number of euk cells counted\n  mutate(FLPperEuk = total_FLP/(sum(total_euks_noFLP, total_euks_wflp))) %&gt;%\n  unite(\"Experiment\", Name, REP, sep = \"-\", remove = FALSE) %&gt;%\n  data.frame\ncounts_flp_calcs_all\n\n\n                    SAMPLE    Site          Experiment           Name    EXPID\n1      Piccard-LotsOShrimp Piccard     LotsOShrimp-Bag    LotsOShrimp  T0-Rep3\n2      Piccard-LotsOShrimp Piccard     LotsOShrimp-Bag    LotsOShrimp T15-Rep3\n3      Piccard-LotsOShrimp Piccard     LotsOShrimp-Bag    LotsOShrimp T20-Rep3\n4      Piccard-LotsOShrimp Piccard     LotsOShrimp-Bag    LotsOShrimp T40-Rep3\n5            Piccard-Plume Piccard           Plume-Bag          Plume  T0-Rep1\n6            Piccard-Plume Piccard           Plume-Bag          Plume  T0-Rep2\n7            Piccard-Plume Piccard           Plume-Bag          Plume  T0-Rep3\n8            Piccard-Plume Piccard           Plume-Bag          Plume T10-Rep1\n9            Piccard-Plume Piccard           Plume-Bag          Plume T10-Rep2\n10           Piccard-Plume Piccard           Plume-Bag          Plume T10-Rep3\n11           Piccard-Plume Piccard           Plume-Bag          Plume T15-Rep1\n12           Piccard-Plume Piccard           Plume-Bag          Plume T15-Rep2\n13           Piccard-Plume Piccard           Plume-Bag          Plume T15-Rep3\n14           Piccard-Plume Piccard           Plume-Bag          Plume T20-Rep1\n15           Piccard-Plume Piccard           Plume-Bag          Plume T20-Rep2\n16           Piccard-Plume Piccard           Plume-Bag          Plume T20-Rep3\n17           Piccard-Plume Piccard           Plume-Bag          Plume T40-Rep1\n18           Piccard-Plume Piccard           Plume-Bag          Plume T40-Rep2\n19           Piccard-Plume Piccard           Plume-Bag          Plume T40-Rep3\n20  Piccard-Shrimpocalypse Piccard Shrimpocalypse-IGT3 Shrimpocalypse  T0-IGT3\n21  Piccard-Shrimpocalypse Piccard  Shrimpocalypse-Bag Shrimpocalypse  T0-Rep3\n22  Piccard-Shrimpocalypse Piccard Shrimpocalypse-IGT3 Shrimpocalypse  T1-IGT3\n23  Piccard-Shrimpocalypse Piccard  Shrimpocalypse-Bag Shrimpocalypse T10-Rep3\n24  Piccard-Shrimpocalypse Piccard  Shrimpocalypse-Bag Shrimpocalypse T15-Rep3\n25  Piccard-Shrimpocalypse Piccard Shrimpocalypse-IGT3 Shrimpocalypse  T2-IGT3\n26  Piccard-Shrimpocalypse Piccard  Shrimpocalypse-Bag Shrimpocalypse T20-Rep3\n27  Piccard-Shrimpocalypse Piccard Shrimpocalypse-IGT3 Shrimpocalypse  T3-IGT3\n28  Piccard-Shrimpocalypse Piccard  Shrimpocalypse-Bag Shrimpocalypse T40-Rep3\n29                  VD-BSW      VD             BSW-Bag            BSW  T0-Rep1\n30                  VD-BSW      VD             BSW-Bag            BSW  T0-Rep2\n31                  VD-BSW      VD             BSW-Bag            BSW T10-Rep2\n32                  VD-BSW      VD             BSW-Bag            BSW T10-Rep3\n33                  VD-BSW      VD             BSW-Bag            BSW T15-Rep1\n34                  VD-BSW      VD             BSW-Bag            BSW T15-Rep2\n35                  VD-BSW      VD             BSW-Bag            BSW T15-Rep3\n36                  VD-BSW      VD             BSW-Bag            BSW T20-Rep1\n37                  VD-BSW      VD             BSW-Bag            BSW T20-Rep2\n38                  VD-BSW      VD             BSW-Bag            BSW T20-Rep3\n39                  VD-BSW      VD             BSW-Bag            BSW T40-Rep1\n40                  VD-BSW      VD             BSW-Bag            BSW T40-Rep2\n41                  VD-BSW      VD             BSW-Bag            BSW T40-Rep3\n42         VD-MustardStand      VD    MustardStand-Bag   MustardStand  T0-Rep1\n43         VD-MustardStand      VD    MustardStand-Bag   MustardStand  T0-Rep2\n44         VD-MustardStand      VD    MustardStand-Bag   MustardStand T10-Rep1\n45         VD-MustardStand      VD    MustardStand-Bag   MustardStand T20-Rep2\n46         VD-MustardStand      VD    MustardStand-Bag   MustardStand T40-Rep1\n47         VD-MustardStand      VD    MustardStand-Bag   MustardStand T40-Rep2\n48                  VD-OMT      VD            OMT-IGT4            OMT  T0-IGT4\n49                  VD-OMT      VD            OMT-IGT4            OMT T0-IGT4b\n50                  VD-OMT      VD            OMT-IGT4            OMT  T1-IGT4\n51                  VD-OMT      VD            OMT-IGT4            OMT T1-IGT4b\n52                  VD-OMT      VD            OMT-IGT4            OMT  T2-IGT4\n53                  VD-OMT      VD            OMT-IGT4            OMT T2-IGT4b\n54                  VD-OMT      VD            OMT-IGT4            OMT  T3-IGT4\n55                  VD-OMT      VD            OMT-IGT4            OMT T3-IGT4b\n56                VD-Plume      VD           Plume-Bag          Plume  T0-Rep1\n57                VD-Plume      VD           Plume-Bag          Plume  T0-Rep2\n58                VD-Plume      VD           Plume-Bag          Plume  T0-Rep3\n59                VD-Plume      VD           Plume-Bag          Plume T10-Rep1\n60                VD-Plume      VD           Plume-Bag          Plume T10-Rep2\n61                VD-Plume      VD           Plume-Bag          Plume T10-Rep3\n62                VD-Plume      VD           Plume-Bag          Plume T15-Rep1\n63                VD-Plume      VD           Plume-Bag          Plume T15-Rep2\n64                VD-Plume      VD           Plume-Bag          Plume T15-Rep3\n65                VD-Plume      VD           Plume-Bag          Plume T20-Rep1\n66                VD-Plume      VD           Plume-Bag          Plume T20-Rep2\n67                VD-Plume      VD           Plume-Bag          Plume T20-Rep3\n68                VD-Plume      VD           Plume-Bag          Plume T40-Rep1\n69                VD-Plume      VD           Plume-Bag          Plume T40-Rep2\n70                VD-Plume      VD           Plume-Bag          Plume T40-Rep3\n71                 VD-Rav2      VD           Rav2-IGT4           Rav2  T0-IGT4\n72                 VD-Rav2      VD           Rav2-IGT4           Rav2 T0-IGT4b\n73                 VD-Rav2      VD           Rav2-IGT5           Rav2  T0-IGT5\n74                 VD-Rav2      VD           Rav2-IGT5           Rav2 T0-IGT5b\n75                 VD-Rav2      VD            Rav2-Bag           Rav2  T0-Rep1\n76                 VD-Rav2      VD            Rav2-Bag           Rav2  T0-Rep2\n77                 VD-Rav2      VD           Rav2-IGT4           Rav2  T1-IGT4\n78                 VD-Rav2      VD           Rav2-IGT5           Rav2  T1-IGT5\n79                 VD-Rav2      VD            Rav2-Bag           Rav2 T10-Rep1\n80                 VD-Rav2      VD            Rav2-Bag           Rav2 T10-Rep2\n81                 VD-Rav2      VD            Rav2-Bag           Rav2 T15-Rep1\n82                 VD-Rav2      VD            Rav2-Bag           Rav2 T15-Rep2\n83                 VD-Rav2      VD            Rav2-Bag           Rav2 T15-Rep3\n84                 VD-Rav2      VD           Rav2-IGT4           Rav2  T2-IGT4\n85                 VD-Rav2      VD           Rav2-IGT4           Rav2 T2-IGT4b\n86                 VD-Rav2      VD           Rav2-IGT5           Rav2  T2-IGT5\n87                 VD-Rav2      VD            Rav2-Bag           Rav2 T20-Rep1\n88                 VD-Rav2      VD            Rav2-Bag           Rav2 T20-Rep2\n89                 VD-Rav2      VD           Rav2-IGT4           Rav2  T3-IGT4\n90                 VD-Rav2      VD           Rav2-IGT4           Rav2 T3-IGT4b\n91                 VD-Rav2      VD           Rav2-IGT5           Rav2  T3-IGT5\n92                 VD-Rav2      VD           Rav2-IGT5           Rav2 T3-IGT5b\n93                 VD-Rav2      VD            Rav2-Bag           Rav2 T40-Rep1\n94                 VD-Rav2      VD            Rav2-Bag           Rav2 T40-Rep2\n95           VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole  T0-Rep1\n96           VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole  T0-Rep2\n97           VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T10-Rep1\n98           VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T10-Rep2\n99           VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T15-Rep1\n100          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T15-Rep2\n101          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T20-Rep1\n102          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T20-Rep2\n103          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T40-Rep1\n104          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T40-Rep2\n105                 VD-X18      VD             X18-Bag            X18  T0-Rep1\n106                 VD-X18      VD             X18-Bag            X18  T0-Rep2\n107                 VD-X18      VD             X18-Bag            X18 T15-Rep1\n108                 VD-X18      VD             X18-Bag            X18 T15-Rep2\n109                 VD-X18      VD             X18-Bag            X18 T20-Rep1\n110                 VD-X18      VD             X18-Bag            X18 T20-Rep2\n111                 VD-X18      VD             X18-Bag            X18 T40-Rep1\n112                 VD-X18      VD             X18-Bag            X18 T40-Rep2\n113    Piccard-LotsOShrimp Piccard     LotsOShrimp-Bag    LotsOShrimp  T0-Rep3\n114    Piccard-LotsOShrimp Piccard     LotsOShrimp-Bag    LotsOShrimp  T0-Rep3\n115    Piccard-LotsOShrimp Piccard     LotsOShrimp-Bag    LotsOShrimp T15-Rep3\n116    Piccard-LotsOShrimp Piccard     LotsOShrimp-Bag    LotsOShrimp T15-Rep3\n117    Piccard-LotsOShrimp Piccard     LotsOShrimp-Bag    LotsOShrimp T20-Rep3\n118    Piccard-LotsOShrimp Piccard     LotsOShrimp-Bag    LotsOShrimp T20-Rep3\n119    Piccard-LotsOShrimp Piccard     LotsOShrimp-Bag    LotsOShrimp T40-Rep3\n120    Piccard-LotsOShrimp Piccard     LotsOShrimp-Bag    LotsOShrimp T40-Rep3\n121          Piccard-Plume Piccard           Plume-Bag          Plume  T0-Rep1\n122          Piccard-Plume Piccard           Plume-Bag          Plume  T0-Rep1\n123          Piccard-Plume Piccard           Plume-Bag          Plume  T0-Rep2\n124          Piccard-Plume Piccard           Plume-Bag          Plume  T0-Rep2\n125          Piccard-Plume Piccard           Plume-Bag          Plume  T0-Rep3\n126          Piccard-Plume Piccard           Plume-Bag          Plume  T0-Rep3\n127          Piccard-Plume Piccard           Plume-Bag          Plume T10-Rep1\n128          Piccard-Plume Piccard           Plume-Bag          Plume T10-Rep1\n129          Piccard-Plume Piccard           Plume-Bag          Plume T10-Rep2\n130          Piccard-Plume Piccard           Plume-Bag          Plume T10-Rep2\n131          Piccard-Plume Piccard           Plume-Bag          Plume T10-Rep3\n132          Piccard-Plume Piccard           Plume-Bag          Plume T10-Rep3\n133          Piccard-Plume Piccard           Plume-Bag          Plume T15-Rep1\n134          Piccard-Plume Piccard           Plume-Bag          Plume T15-Rep1\n135          Piccard-Plume Piccard           Plume-Bag          Plume T15-Rep2\n136          Piccard-Plume Piccard           Plume-Bag          Plume T15-Rep2\n137          Piccard-Plume Piccard           Plume-Bag          Plume T15-Rep3\n138          Piccard-Plume Piccard           Plume-Bag          Plume T15-Rep3\n139          Piccard-Plume Piccard           Plume-Bag          Plume T20-Rep1\n140          Piccard-Plume Piccard           Plume-Bag          Plume T20-Rep1\n141          Piccard-Plume Piccard           Plume-Bag          Plume T20-Rep2\n142          Piccard-Plume Piccard           Plume-Bag          Plume T20-Rep2\n143          Piccard-Plume Piccard           Plume-Bag          Plume T20-Rep3\n144          Piccard-Plume Piccard           Plume-Bag          Plume T20-Rep3\n145          Piccard-Plume Piccard           Plume-Bag          Plume T40-Rep1\n146          Piccard-Plume Piccard           Plume-Bag          Plume T40-Rep1\n147          Piccard-Plume Piccard           Plume-Bag          Plume T40-Rep2\n148          Piccard-Plume Piccard           Plume-Bag          Plume T40-Rep2\n149          Piccard-Plume Piccard           Plume-Bag          Plume T40-Rep3\n150          Piccard-Plume Piccard           Plume-Bag          Plume T40-Rep3\n151 Piccard-Shrimpocalypse Piccard Shrimpocalypse-IGT3 Shrimpocalypse  T0-IGT3\n152 Piccard-Shrimpocalypse Piccard Shrimpocalypse-IGT3 Shrimpocalypse  T0-IGT3\n153 Piccard-Shrimpocalypse Piccard  Shrimpocalypse-Bag Shrimpocalypse  T0-Rep3\n154 Piccard-Shrimpocalypse Piccard  Shrimpocalypse-Bag Shrimpocalypse  T0-Rep3\n155 Piccard-Shrimpocalypse Piccard Shrimpocalypse-IGT3 Shrimpocalypse  T1-IGT3\n156 Piccard-Shrimpocalypse Piccard Shrimpocalypse-IGT3 Shrimpocalypse  T1-IGT3\n157 Piccard-Shrimpocalypse Piccard  Shrimpocalypse-Bag Shrimpocalypse T10-Rep3\n158 Piccard-Shrimpocalypse Piccard  Shrimpocalypse-Bag Shrimpocalypse T10-Rep3\n159 Piccard-Shrimpocalypse Piccard  Shrimpocalypse-Bag Shrimpocalypse T15-Rep3\n160 Piccard-Shrimpocalypse Piccard  Shrimpocalypse-Bag Shrimpocalypse T15-Rep3\n161 Piccard-Shrimpocalypse Piccard Shrimpocalypse-IGT3 Shrimpocalypse  T2-IGT3\n162 Piccard-Shrimpocalypse Piccard Shrimpocalypse-IGT3 Shrimpocalypse  T2-IGT3\n163 Piccard-Shrimpocalypse Piccard  Shrimpocalypse-Bag Shrimpocalypse T20-Rep3\n164 Piccard-Shrimpocalypse Piccard  Shrimpocalypse-Bag Shrimpocalypse T20-Rep3\n165 Piccard-Shrimpocalypse Piccard Shrimpocalypse-IGT3 Shrimpocalypse  T3-IGT3\n166 Piccard-Shrimpocalypse Piccard Shrimpocalypse-IGT3 Shrimpocalypse  T3-IGT3\n167 Piccard-Shrimpocalypse Piccard  Shrimpocalypse-Bag Shrimpocalypse T40-Rep3\n168 Piccard-Shrimpocalypse Piccard  Shrimpocalypse-Bag Shrimpocalypse T40-Rep3\n169                 VD-BSW      VD             BSW-Bag            BSW  T0-Rep1\n170                 VD-BSW      VD             BSW-Bag            BSW  T0-Rep1\n171                 VD-BSW      VD             BSW-Bag            BSW  T0-Rep2\n172                 VD-BSW      VD             BSW-Bag            BSW  T0-Rep2\n173                 VD-BSW      VD             BSW-Bag            BSW T10-Rep2\n174                 VD-BSW      VD             BSW-Bag            BSW T10-Rep2\n175                 VD-BSW      VD             BSW-Bag            BSW T10-Rep3\n176                 VD-BSW      VD             BSW-Bag            BSW T10-Rep3\n177                 VD-BSW      VD             BSW-Bag            BSW T15-Rep1\n178                 VD-BSW      VD             BSW-Bag            BSW T15-Rep1\n179                 VD-BSW      VD             BSW-Bag            BSW T15-Rep2\n180                 VD-BSW      VD             BSW-Bag            BSW T15-Rep2\n181                 VD-BSW      VD             BSW-Bag            BSW T15-Rep3\n182                 VD-BSW      VD             BSW-Bag            BSW T15-Rep3\n183                 VD-BSW      VD             BSW-Bag            BSW T20-Rep1\n184                 VD-BSW      VD             BSW-Bag            BSW T20-Rep1\n185                 VD-BSW      VD             BSW-Bag            BSW T20-Rep2\n186                 VD-BSW      VD             BSW-Bag            BSW T20-Rep2\n187                 VD-BSW      VD             BSW-Bag            BSW T20-Rep3\n188                 VD-BSW      VD             BSW-Bag            BSW T20-Rep3\n189                 VD-BSW      VD             BSW-Bag            BSW T40-Rep1\n190                 VD-BSW      VD             BSW-Bag            BSW T40-Rep1\n191                 VD-BSW      VD             BSW-Bag            BSW T40-Rep2\n192                 VD-BSW      VD             BSW-Bag            BSW T40-Rep2\n193                 VD-BSW      VD             BSW-Bag            BSW T40-Rep3\n194                 VD-BSW      VD             BSW-Bag            BSW T40-Rep3\n195        VD-MustardStand      VD    MustardStand-Bag   MustardStand  T0-Rep1\n196        VD-MustardStand      VD    MustardStand-Bag   MustardStand  T0-Rep1\n197        VD-MustardStand      VD    MustardStand-Bag   MustardStand  T0-Rep2\n198        VD-MustardStand      VD    MustardStand-Bag   MustardStand  T0-Rep2\n199        VD-MustardStand      VD    MustardStand-Bag   MustardStand T10-Rep1\n200        VD-MustardStand      VD    MustardStand-Bag   MustardStand T10-Rep1\n201        VD-MustardStand      VD    MustardStand-Bag   MustardStand T20-Rep2\n202        VD-MustardStand      VD    MustardStand-Bag   MustardStand T20-Rep2\n203        VD-MustardStand      VD    MustardStand-Bag   MustardStand T40-Rep1\n204        VD-MustardStand      VD    MustardStand-Bag   MustardStand T40-Rep1\n205        VD-MustardStand      VD    MustardStand-Bag   MustardStand T40-Rep2\n206        VD-MustardStand      VD    MustardStand-Bag   MustardStand T40-Rep2\n207                 VD-OMT      VD            OMT-IGT4            OMT  T0-IGT4\n208                 VD-OMT      VD            OMT-IGT4            OMT  T0-IGT4\n209                 VD-OMT      VD            OMT-IGT4            OMT T0-IGT4b\n210                 VD-OMT      VD            OMT-IGT4            OMT T0-IGT4b\n211                 VD-OMT      VD            OMT-IGT4            OMT  T1-IGT4\n212                 VD-OMT      VD            OMT-IGT4            OMT  T1-IGT4\n213                 VD-OMT      VD            OMT-IGT4            OMT T1-IGT4b\n214                 VD-OMT      VD            OMT-IGT4            OMT T1-IGT4b\n215                 VD-OMT      VD            OMT-IGT4            OMT  T2-IGT4\n216                 VD-OMT      VD            OMT-IGT4            OMT  T2-IGT4\n217                 VD-OMT      VD            OMT-IGT4            OMT T2-IGT4b\n218                 VD-OMT      VD            OMT-IGT4            OMT T2-IGT4b\n219                 VD-OMT      VD            OMT-IGT4            OMT  T3-IGT4\n220                 VD-OMT      VD            OMT-IGT4            OMT  T3-IGT4\n221                 VD-OMT      VD            OMT-IGT4            OMT T3-IGT4b\n222                 VD-OMT      VD            OMT-IGT4            OMT T3-IGT4b\n223               VD-Plume      VD           Plume-Bag          Plume  T0-Rep1\n224               VD-Plume      VD           Plume-Bag          Plume  T0-Rep1\n225               VD-Plume      VD           Plume-Bag          Plume  T0-Rep2\n226               VD-Plume      VD           Plume-Bag          Plume  T0-Rep2\n227               VD-Plume      VD           Plume-Bag          Plume  T0-Rep3\n228               VD-Plume      VD           Plume-Bag          Plume  T0-Rep3\n229               VD-Plume      VD           Plume-Bag          Plume T10-Rep1\n230               VD-Plume      VD           Plume-Bag          Plume T10-Rep1\n231               VD-Plume      VD           Plume-Bag          Plume T10-Rep2\n232               VD-Plume      VD           Plume-Bag          Plume T10-Rep2\n233               VD-Plume      VD           Plume-Bag          Plume T10-Rep3\n234               VD-Plume      VD           Plume-Bag          Plume T10-Rep3\n235               VD-Plume      VD           Plume-Bag          Plume T15-Rep1\n236               VD-Plume      VD           Plume-Bag          Plume T15-Rep1\n237               VD-Plume      VD           Plume-Bag          Plume T15-Rep2\n238               VD-Plume      VD           Plume-Bag          Plume T15-Rep2\n239               VD-Plume      VD           Plume-Bag          Plume T15-Rep3\n240               VD-Plume      VD           Plume-Bag          Plume T15-Rep3\n241               VD-Plume      VD           Plume-Bag          Plume T20-Rep1\n242               VD-Plume      VD           Plume-Bag          Plume T20-Rep1\n243               VD-Plume      VD           Plume-Bag          Plume T20-Rep2\n244               VD-Plume      VD           Plume-Bag          Plume T20-Rep2\n245               VD-Plume      VD           Plume-Bag          Plume T20-Rep3\n246               VD-Plume      VD           Plume-Bag          Plume T20-Rep3\n247               VD-Plume      VD           Plume-Bag          Plume T40-Rep1\n248               VD-Plume      VD           Plume-Bag          Plume T40-Rep1\n249               VD-Plume      VD           Plume-Bag          Plume T40-Rep2\n250               VD-Plume      VD           Plume-Bag          Plume T40-Rep2\n251               VD-Plume      VD           Plume-Bag          Plume T40-Rep3\n252               VD-Plume      VD           Plume-Bag          Plume T40-Rep3\n253                VD-Rav2      VD           Rav2-IGT4           Rav2  T0-IGT4\n254                VD-Rav2      VD           Rav2-IGT4           Rav2  T0-IGT4\n255                VD-Rav2      VD           Rav2-IGT4           Rav2 T0-IGT4b\n256                VD-Rav2      VD           Rav2-IGT4           Rav2 T0-IGT4b\n257                VD-Rav2      VD           Rav2-IGT5           Rav2  T0-IGT5\n258                VD-Rav2      VD           Rav2-IGT5           Rav2  T0-IGT5\n259                VD-Rav2      VD           Rav2-IGT5           Rav2 T0-IGT5b\n260                VD-Rav2      VD           Rav2-IGT5           Rav2 T0-IGT5b\n261                VD-Rav2      VD            Rav2-Bag           Rav2  T0-Rep1\n262                VD-Rav2      VD            Rav2-Bag           Rav2  T0-Rep1\n263                VD-Rav2      VD            Rav2-Bag           Rav2  T0-Rep2\n264                VD-Rav2      VD            Rav2-Bag           Rav2  T0-Rep2\n265                VD-Rav2      VD           Rav2-IGT4           Rav2  T1-IGT4\n266                VD-Rav2      VD           Rav2-IGT4           Rav2  T1-IGT4\n267                VD-Rav2      VD           Rav2-IGT5           Rav2  T1-IGT5\n268                VD-Rav2      VD           Rav2-IGT5           Rav2  T1-IGT5\n269                VD-Rav2      VD            Rav2-Bag           Rav2 T10-Rep1\n270                VD-Rav2      VD            Rav2-Bag           Rav2 T10-Rep1\n271                VD-Rav2      VD            Rav2-Bag           Rav2 T10-Rep2\n272                VD-Rav2      VD            Rav2-Bag           Rav2 T10-Rep2\n273                VD-Rav2      VD            Rav2-Bag           Rav2 T15-Rep1\n274                VD-Rav2      VD            Rav2-Bag           Rav2 T15-Rep1\n275                VD-Rav2      VD            Rav2-Bag           Rav2 T15-Rep2\n276                VD-Rav2      VD            Rav2-Bag           Rav2 T15-Rep2\n277                VD-Rav2      VD            Rav2-Bag           Rav2 T15-Rep3\n278                VD-Rav2      VD            Rav2-Bag           Rav2 T15-Rep3\n279                VD-Rav2      VD           Rav2-IGT4           Rav2  T2-IGT4\n280                VD-Rav2      VD           Rav2-IGT4           Rav2  T2-IGT4\n281                VD-Rav2      VD           Rav2-IGT4           Rav2 T2-IGT4b\n282                VD-Rav2      VD           Rav2-IGT4           Rav2 T2-IGT4b\n283                VD-Rav2      VD           Rav2-IGT5           Rav2  T2-IGT5\n284                VD-Rav2      VD           Rav2-IGT5           Rav2  T2-IGT5\n285                VD-Rav2      VD            Rav2-Bag           Rav2 T20-Rep1\n286                VD-Rav2      VD            Rav2-Bag           Rav2 T20-Rep1\n287                VD-Rav2      VD            Rav2-Bag           Rav2 T20-Rep2\n288                VD-Rav2      VD            Rav2-Bag           Rav2 T20-Rep2\n289                VD-Rav2      VD           Rav2-IGT4           Rav2  T3-IGT4\n290                VD-Rav2      VD           Rav2-IGT4           Rav2  T3-IGT4\n291                VD-Rav2      VD           Rav2-IGT4           Rav2 T3-IGT4b\n292                VD-Rav2      VD           Rav2-IGT4           Rav2 T3-IGT4b\n293                VD-Rav2      VD           Rav2-IGT5           Rav2  T3-IGT5\n294                VD-Rav2      VD           Rav2-IGT5           Rav2  T3-IGT5\n295                VD-Rav2      VD           Rav2-IGT5           Rav2 T3-IGT5b\n296                VD-Rav2      VD           Rav2-IGT5           Rav2 T3-IGT5b\n297                VD-Rav2      VD            Rav2-Bag           Rav2 T40-Rep1\n298                VD-Rav2      VD            Rav2-Bag           Rav2 T40-Rep1\n299                VD-Rav2      VD            Rav2-Bag           Rav2 T40-Rep2\n300                VD-Rav2      VD            Rav2-Bag           Rav2 T40-Rep2\n301          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole  T0-Rep1\n302          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole  T0-Rep1\n303          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole  T0-Rep2\n304          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole  T0-Rep2\n305          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T10-Rep1\n306          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T10-Rep1\n307          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T10-Rep2\n308          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T10-Rep2\n309          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T15-Rep1\n310          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T15-Rep1\n311          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T15-Rep2\n312          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T15-Rep2\n313          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T20-Rep1\n314          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T20-Rep1\n315          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T20-Rep2\n316          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T20-Rep2\n317          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T40-Rep1\n318          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T40-Rep1\n319          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T40-Rep2\n320          VD-ShrimpHole      VD      ShrimpHole-Bag     ShrimpHole T40-Rep2\n321                 VD-X18      VD             X18-Bag            X18  T0-Rep1\n322                 VD-X18      VD             X18-Bag            X18  T0-Rep1\n323                 VD-X18      VD             X18-Bag            X18  T0-Rep2\n324                 VD-X18      VD             X18-Bag            X18  T0-Rep2\n325                 VD-X18      VD             X18-Bag            X18 T15-Rep1\n326                 VD-X18      VD             X18-Bag            X18 T15-Rep1\n327                 VD-X18      VD             X18-Bag            X18 T15-Rep2\n328                 VD-X18      VD             X18-Bag            X18 T15-Rep2\n329                 VD-X18      VD             X18-Bag            X18 T20-Rep1\n330                 VD-X18      VD             X18-Bag            X18 T20-Rep1\n331                 VD-X18      VD             X18-Bag            X18 T20-Rep2\n332                 VD-X18      VD             X18-Bag            X18 T20-Rep2\n333                 VD-X18      VD             X18-Bag            X18 T40-Rep1\n334                 VD-X18      VD             X18-Bag            X18 T40-Rep1\n335                 VD-X18      VD             X18-Bag            X18 T40-Rep2\n336                 VD-X18      VD             X18-Bag            X18 T40-Rep2\n    TimePoint Replicate_ID  REP EXP_TYPE IGT_REP total_euks_noFLP total_FLP\n1          T0         Rep3  Bag      Bag     Bag                9         3\n2         T15         Rep3  Bag      Bag     Bag                8         4\n3         T20         Rep3  Bag      Bag     Bag                9         2\n4         T40         Rep3  Bag      Bag     Bag                5         0\n5          T0         Rep1  Bag      Bag     Bag                6         6\n6          T0         Rep2  Bag      Bag     Bag                5         5\n7          T0         Rep3  Bag      Bag     Bag               11         8\n8         T10         Rep1  Bag      Bag     Bag                8         6\n9         T10         Rep2  Bag      Bag     Bag                2         3\n10        T10         Rep3  Bag      Bag     Bag                9        12\n11        T15         Rep1  Bag      Bag     Bag               10         8\n12        T15         Rep2  Bag      Bag     Bag                1        11\n13        T15         Rep3  Bag      Bag     Bag                5        19\n14        T20         Rep1  Bag      Bag     Bag                5         5\n15        T20         Rep2  Bag      Bag     Bag                3         4\n16        T20         Rep3  Bag      Bag     Bag                7         9\n17        T40         Rep1  Bag      Bag     Bag                5        11\n18        T40         Rep2  Bag      Bag     Bag                1         2\n19        T40         Rep3  Bag      Bag     Bag                7         4\n20         T0         IGT3 IGT3      IGT    IGT3               10         1\n21         T0         Rep3  Bag      Bag     Bag                9         9\n22         T1         IGT3 IGT3      IGT    IGT3                9         1\n23        T10         Rep3  Bag      Bag     Bag               10         6\n24        T15         Rep3  Bag      Bag     Bag                8         8\n25         T2         IGT3 IGT3      IGT    IGT3                5         6\n26        T20         Rep3  Bag      Bag     Bag                1        13\n27         T3         IGT3 IGT3      IGT    IGT3                6         3\n28        T40         Rep3  Bag      Bag     Bag                2         5\n29         T0         Rep1  Bag      Bag     Bag               12         1\n30         T0         Rep2  Bag      Bag     Bag                9         1\n31        T10         Rep2  Bag      Bag     Bag               16        15\n32        T10         Rep3  Bag      Bag     Bag                7        13\n33        T15         Rep1  Bag      Bag     Bag               10         8\n34        T15         Rep2  Bag      Bag     Bag               14         5\n35        T15         Rep3  Bag      Bag     Bag                7         0\n36        T20         Rep1  Bag      Bag     Bag               12         2\n37        T20         Rep2  Bag      Bag     Bag               14        20\n38        T20         Rep3  Bag      Bag     Bag                9         2\n39        T40         Rep1  Bag      Bag     Bag               11         3\n40        T40         Rep2  Bag      Bag     Bag               11         8\n41        T40         Rep3  Bag      Bag     Bag               11         8\n42         T0         Rep1  Bag      Bag     Bag                8         6\n43         T0         Rep2  Bag      Bag     Bag                8         6\n44        T10         Rep1  Bag      Bag     Bag                8         5\n45        T20         Rep2  Bag      Bag     Bag                2         1\n46        T40         Rep1  Bag      Bag     Bag                7         2\n47        T40         Rep2  Bag      Bag     Bag               10         5\n48         T0         IGT4 IGT4      IGT    IGT4                8         3\n49         T0        IGT4b IGT4      IGT   IGT4b               14         4\n50         T1         IGT4 IGT4      IGT    IGT4                9         2\n51         T1        IGT4b IGT4      IGT   IGT4b                6         4\n52         T2         IGT4 IGT4      IGT    IGT4                9         5\n53         T2        IGT4b IGT4      IGT   IGT4b                4         7\n54         T3         IGT4 IGT4      IGT    IGT4                5        14\n55         T3        IGT4b IGT4      IGT   IGT4b                7        46\n56         T0         Rep1  Bag      Bag     Bag               35        17\n57         T0         Rep2  Bag      Bag     Bag               16         6\n58         T0         Rep3  Bag      Bag     Bag                5         7\n59        T10         Rep1  Bag      Bag     Bag               13         8\n60        T10         Rep2  Bag      Bag     Bag               14         8\n61        T10         Rep3  Bag      Bag     Bag               11        14\n62        T15         Rep1  Bag      Bag     Bag               10        11\n63        T15         Rep2  Bag      Bag     Bag               12         4\n64        T15         Rep3  Bag      Bag     Bag               14         5\n65        T20         Rep1  Bag      Bag     Bag               16         6\n66        T20         Rep2  Bag      Bag     Bag               10        11\n67        T20         Rep3  Bag      Bag     Bag               13        12\n68        T40         Rep1  Bag      Bag     Bag               19         9\n69        T40         Rep2  Bag      Bag     Bag               12        17\n70        T40         Rep3  Bag      Bag     Bag                6        13\n71         T0         IGT4 IGT4      IGT    IGT4               25         2\n72         T0        IGT4b IGT4      IGT   IGT4b               15         3\n73         T0         IGT5 IGT5      IGT    IGT5               15         8\n74         T0        IGT5b IGT5      IGT   IGT5b                9         1\n75         T0         Rep1  Bag      Bag     Bag               11        16\n76         T0         Rep2  Bag      Bag     Bag               19         6\n77         T1         IGT4 IGT4      IGT    IGT4               13         5\n78         T1         IGT5 IGT5      IGT    IGT5               14         5\n79        T10         Rep1  Bag      Bag     Bag                5        17\n80        T10         Rep2  Bag      Bag     Bag               15         4\n81        T15         Rep1  Bag      Bag     Bag                9        19\n82        T15         Rep2  Bag      Bag     Bag               18        11\n83        T15         Rep3  Bag      Bag     Bag                2        11\n84         T2         IGT4 IGT4      IGT    IGT4               10         8\n85         T2        IGT4b IGT4      IGT   IGT4b               15         8\n86         T2         IGT5 IGT5      IGT    IGT5               11         6\n87        T20         Rep1  Bag      Bag     Bag                7        38\n88        T20         Rep2  Bag      Bag     Bag               16         5\n89         T3         IGT4 IGT4      IGT    IGT4               19         8\n90         T3        IGT4b IGT4      IGT   IGT4b               16         4\n91         T3         IGT5 IGT5      IGT    IGT5                8         3\n92         T3        IGT5b IGT5      IGT   IGT5b                5         7\n93        T40         Rep1  Bag      Bag     Bag               17        25\n94        T40         Rep2  Bag      Bag     Bag               17        14\n95         T0         Rep1  Bag      Bag     Bag                8        18\n96         T0         Rep2  Bag      Bag     Bag                8        29\n97        T10         Rep1  Bag      Bag     Bag               11         4\n98        T10         Rep2  Bag      Bag     Bag               12        12\n99        T15         Rep1  Bag      Bag     Bag                8         9\n100       T15         Rep2  Bag      Bag     Bag                8        14\n101       T20         Rep1  Bag      Bag     Bag                4         1\n102       T20         Rep2  Bag      Bag     Bag               10         6\n103       T40         Rep1  Bag      Bag     Bag                7         5\n104       T40         Rep2  Bag      Bag     Bag                2        13\n105        T0         Rep1  Bag      Bag     Bag               10         0\n106        T0         Rep2  Bag      Bag     Bag               15         9\n107       T15         Rep1  Bag      Bag     Bag               14         2\n108       T15         Rep2  Bag      Bag     Bag               14        19\n109       T20         Rep1  Bag      Bag     Bag                7        11\n110       T20         Rep2  Bag      Bag     Bag               15        13\n111       T40         Rep1  Bag      Bag     Bag               10         3\n112       T40         Rep2  Bag      Bag     Bag               13         6\n113        T0         Rep3  Bag      Bag     Bag                0         0\n114        T0         Rep3  Bag      Bag     Bag                9         3\n115       T15         Rep3  Bag      Bag     Bag                1         1\n116       T15         Rep3  Bag      Bag     Bag                7         3\n117       T20         Rep3  Bag      Bag     Bag                0         0\n118       T20         Rep3  Bag      Bag     Bag                9         2\n119       T40         Rep3  Bag      Bag     Bag                0         0\n120       T40         Rep3  Bag      Bag     Bag                5         0\n121        T0         Rep1  Bag      Bag     Bag                0         2\n122        T0         Rep1  Bag      Bag     Bag                6         4\n123        T0         Rep2  Bag      Bag     Bag                0         3\n124        T0         Rep2  Bag      Bag     Bag                5         2\n125        T0         Rep3  Bag      Bag     Bag                1         0\n126        T0         Rep3  Bag      Bag     Bag               10         8\n127       T10         Rep1  Bag      Bag     Bag                0         0\n128       T10         Rep1  Bag      Bag     Bag                8         6\n129       T10         Rep2  Bag      Bag     Bag                0         0\n130       T10         Rep2  Bag      Bag     Bag                2         3\n131       T10         Rep3  Bag      Bag     Bag                1         3\n132       T10         Rep3  Bag      Bag     Bag                8         9\n133       T15         Rep1  Bag      Bag     Bag                0         1\n134       T15         Rep1  Bag      Bag     Bag               10         7\n135       T15         Rep2  Bag      Bag     Bag                0         4\n136       T15         Rep2  Bag      Bag     Bag                1         7\n137       T15         Rep3  Bag      Bag     Bag                0         8\n138       T15         Rep3  Bag      Bag     Bag                5        11\n139       T20         Rep1  Bag      Bag     Bag                0         1\n140       T20         Rep1  Bag      Bag     Bag                5         4\n141       T20         Rep2  Bag      Bag     Bag                0         2\n142       T20         Rep2  Bag      Bag     Bag                3         2\n143       T20         Rep3  Bag      Bag     Bag                1         0\n144       T20         Rep3  Bag      Bag     Bag                6         9\n145       T40         Rep1  Bag      Bag     Bag                0         0\n146       T40         Rep1  Bag      Bag     Bag                5        11\n147       T40         Rep2  Bag      Bag     Bag                0         0\n148       T40         Rep2  Bag      Bag     Bag                1         2\n149       T40         Rep3  Bag      Bag     Bag                1         0\n150       T40         Rep3  Bag      Bag     Bag                6         4\n151        T0         IGT3 IGT3      IGT    IGT3                0         0\n152        T0         IGT3 IGT3      IGT    IGT3               10         1\n153        T0         Rep3  Bag      Bag     Bag                1         0\n154        T0         Rep3  Bag      Bag     Bag                8         9\n155        T1         IGT3 IGT3      IGT    IGT3                2         0\n156        T1         IGT3 IGT3      IGT    IGT3                7         1\n157       T10         Rep3  Bag      Bag     Bag                0         1\n158       T10         Rep3  Bag      Bag     Bag               10         5\n159       T15         Rep3  Bag      Bag     Bag                0         5\n160       T15         Rep3  Bag      Bag     Bag                8         3\n161        T2         IGT3 IGT3      IGT    IGT3                1         1\n162        T2         IGT3 IGT3      IGT    IGT3                4         5\n163       T20         Rep3  Bag      Bag     Bag                0         2\n164       T20         Rep3  Bag      Bag     Bag                1        11\n165        T3         IGT3 IGT3      IGT    IGT3                0         2\n166        T3         IGT3 IGT3      IGT    IGT3                6         1\n167       T40         Rep3  Bag      Bag     Bag                1         0\n168       T40         Rep3  Bag      Bag     Bag                1         5\n169        T0         Rep1  Bag      Bag     Bag                0         0\n170        T0         Rep1  Bag      Bag     Bag               12         1\n171        T0         Rep2  Bag      Bag     Bag                0         0\n172        T0         Rep2  Bag      Bag     Bag                9         1\n173       T10         Rep2  Bag      Bag     Bag                2         4\n174       T10         Rep2  Bag      Bag     Bag               14        11\n175       T10         Rep3  Bag      Bag     Bag                1         3\n176       T10         Rep3  Bag      Bag     Bag                6        10\n177       T15         Rep1  Bag      Bag     Bag                0         2\n178       T15         Rep1  Bag      Bag     Bag               10         6\n179       T15         Rep2  Bag      Bag     Bag                1         1\n180       T15         Rep2  Bag      Bag     Bag               13         4\n181       T15         Rep3  Bag      Bag     Bag                0         0\n182       T15         Rep3  Bag      Bag     Bag                7         0\n183       T20         Rep1  Bag      Bag     Bag                1         0\n184       T20         Rep1  Bag      Bag     Bag               11         2\n185       T20         Rep2  Bag      Bag     Bag                4         5\n186       T20         Rep2  Bag      Bag     Bag               10        15\n187       T20         Rep3  Bag      Bag     Bag                1         2\n188       T20         Rep3  Bag      Bag     Bag                8         0\n189       T40         Rep1  Bag      Bag     Bag                1         2\n190       T40         Rep1  Bag      Bag     Bag               10         1\n191       T40         Rep2  Bag      Bag     Bag                3         3\n192       T40         Rep2  Bag      Bag     Bag                8         5\n193       T40         Rep3  Bag      Bag     Bag                2         0\n194       T40         Rep3  Bag      Bag     Bag                9         8\n195        T0         Rep1  Bag      Bag     Bag                0         0\n196        T0         Rep1  Bag      Bag     Bag                8         6\n197        T0         Rep2  Bag      Bag     Bag                0         0\n198        T0         Rep2  Bag      Bag     Bag                8         6\n199       T10         Rep1  Bag      Bag     Bag                0         0\n200       T10         Rep1  Bag      Bag     Bag                8         5\n201       T20         Rep2  Bag      Bag     Bag                0         0\n202       T20         Rep2  Bag      Bag     Bag                2         1\n203       T40         Rep1  Bag      Bag     Bag                1         0\n204       T40         Rep1  Bag      Bag     Bag                6         2\n205       T40         Rep2  Bag      Bag     Bag                0         0\n206       T40         Rep2  Bag      Bag     Bag               10         5\n207        T0         IGT4 IGT4      IGT    IGT4                1         1\n208        T0         IGT4 IGT4      IGT    IGT4                7         2\n209        T0        IGT4b IGT4      IGT   IGT4b                4         0\n210        T0        IGT4b IGT4      IGT   IGT4b               10         4\n211        T1         IGT4 IGT4      IGT    IGT4                0         0\n212        T1         IGT4 IGT4      IGT    IGT4                9         2\n213        T1        IGT4b IGT4      IGT   IGT4b                0         0\n214        T1        IGT4b IGT4      IGT   IGT4b                6         4\n215        T2         IGT4 IGT4      IGT    IGT4                0         0\n216        T2         IGT4 IGT4      IGT    IGT4                9         5\n217        T2        IGT4b IGT4      IGT   IGT4b                0         6\n218        T2        IGT4b IGT4      IGT   IGT4b                4         1\n219        T3         IGT4 IGT4      IGT    IGT4                0         0\n220        T3         IGT4 IGT4      IGT    IGT4                5        14\n221        T3        IGT4b IGT4      IGT   IGT4b                1        16\n222        T3        IGT4b IGT4      IGT   IGT4b                6        30\n223        T0         Rep1  Bag      Bag     Bag                4         8\n224        T0         Rep1  Bag      Bag     Bag               31         9\n225        T0         Rep2  Bag      Bag     Bag                1         4\n226        T0         Rep2  Bag      Bag     Bag               15         2\n227        T0         Rep3  Bag      Bag     Bag                2         0\n228        T0         Rep3  Bag      Bag     Bag                3         7\n229       T10         Rep1  Bag      Bag     Bag                0         1\n230       T10         Rep1  Bag      Bag     Bag               13         7\n231       T10         Rep2  Bag      Bag     Bag                0         4\n232       T10         Rep2  Bag      Bag     Bag               14         4\n233       T10         Rep3  Bag      Bag     Bag                1         2\n234       T10         Rep3  Bag      Bag     Bag               10        12\n235       T15         Rep1  Bag      Bag     Bag                3         0\n236       T15         Rep1  Bag      Bag     Bag                7        11\n237       T15         Rep2  Bag      Bag     Bag                0         0\n238       T15         Rep2  Bag      Bag     Bag               12         4\n239       T15         Rep3  Bag      Bag     Bag                2         2\n240       T15         Rep3  Bag      Bag     Bag               12         3\n241       T20         Rep1  Bag      Bag     Bag                1         0\n242       T20         Rep1  Bag      Bag     Bag               15         6\n243       T20         Rep2  Bag      Bag     Bag                0         5\n244       T20         Rep2  Bag      Bag     Bag               10         6\n245       T20         Rep3  Bag      Bag     Bag                1         0\n246       T20         Rep3  Bag      Bag     Bag               12        12\n247       T40         Rep1  Bag      Bag     Bag                9         8\n248       T40         Rep1  Bag      Bag     Bag               10         1\n249       T40         Rep2  Bag      Bag     Bag                0         0\n250       T40         Rep2  Bag      Bag     Bag               12        17\n251       T40         Rep3  Bag      Bag     Bag                0         4\n252       T40         Rep3  Bag      Bag     Bag                6         9\n253        T0         IGT4 IGT4      IGT    IGT4                0         0\n254        T0         IGT4 IGT4      IGT    IGT4               25         2\n255        T0        IGT4b IGT4      IGT   IGT4b                1         0\n256        T0        IGT4b IGT4      IGT   IGT4b               14         3\n257        T0         IGT5 IGT5      IGT    IGT5                1         4\n258        T0         IGT5 IGT5      IGT    IGT5               14         4\n259        T0        IGT5b IGT5      IGT   IGT5b                1         0\n260        T0        IGT5b IGT5      IGT   IGT5b                8         1\n261        T0         Rep1  Bag      Bag     Bag                0         0\n262        T0         Rep1  Bag      Bag     Bag               11        16\n263        T0         Rep2  Bag      Bag     Bag                1         0\n264        T0         Rep2  Bag      Bag     Bag               18         6\n265        T1         IGT4 IGT4      IGT    IGT4                0         0\n266        T1         IGT4 IGT4      IGT    IGT4               13         5\n267        T1         IGT5 IGT5      IGT    IGT5                0         0\n268        T1         IGT5 IGT5      IGT    IGT5               14         5\n269       T10         Rep1  Bag      Bag     Bag                1         0\n270       T10         Rep1  Bag      Bag     Bag                4        17\n271       T10         Rep2  Bag      Bag     Bag                0         0\n272       T10         Rep2  Bag      Bag     Bag               15         4\n273       T15         Rep1  Bag      Bag     Bag                0         0\n274       T15         Rep1  Bag      Bag     Bag                9        19\n275       T15         Rep2  Bag      Bag     Bag                0         4\n276       T15         Rep2  Bag      Bag     Bag               18         7\n277       T15         Rep3  Bag      Bag     Bag                1         5\n278       T15         Rep3  Bag      Bag     Bag                1         6\n279        T2         IGT4 IGT4      IGT    IGT4                0         1\n280        T2         IGT4 IGT4      IGT    IGT4               10         7\n281        T2        IGT4b IGT4      IGT   IGT4b                1         4\n282        T2        IGT4b IGT4      IGT   IGT4b               14         4\n283        T2         IGT5 IGT5      IGT    IGT5                0         0\n284        T2         IGT5 IGT5      IGT    IGT5               11         6\n285       T20         Rep1  Bag      Bag     Bag                0         9\n286       T20         Rep1  Bag      Bag     Bag                7        29\n287       T20         Rep2  Bag      Bag     Bag                0         0\n288       T20         Rep2  Bag      Bag     Bag               16         5\n289        T3         IGT4 IGT4      IGT    IGT4                0         0\n290        T3         IGT4 IGT4      IGT    IGT4               19         8\n291        T3        IGT4b IGT4      IGT   IGT4b                0         0\n292        T3        IGT4b IGT4      IGT   IGT4b               16         4\n293        T3         IGT5 IGT5      IGT    IGT5                0         0\n294        T3         IGT5 IGT5      IGT    IGT5                8         3\n295        T3        IGT5b IGT5      IGT   IGT5b                2         2\n296        T3        IGT5b IGT5      IGT   IGT5b                3         5\n297       T40         Rep1  Bag      Bag     Bag                0         0\n298       T40         Rep1  Bag      Bag     Bag               17        25\n299       T40         Rep2  Bag      Bag     Bag                0         0\n300       T40         Rep2  Bag      Bag     Bag               17        14\n301        T0         Rep1  Bag      Bag     Bag                2         2\n302        T0         Rep1  Bag      Bag     Bag                6        16\n303        T0         Rep2  Bag      Bag     Bag                0         7\n304        T0         Rep2  Bag      Bag     Bag                8        22\n305       T10         Rep1  Bag      Bag     Bag                3         0\n306       T10         Rep1  Bag      Bag     Bag                8         4\n307       T10         Rep2  Bag      Bag     Bag                2         0\n308       T10         Rep2  Bag      Bag     Bag               10        12\n309       T15         Rep1  Bag      Bag     Bag                1         1\n310       T15         Rep1  Bag      Bag     Bag                7         8\n311       T15         Rep2  Bag      Bag     Bag                5         0\n312       T15         Rep2  Bag      Bag     Bag                3        14\n313       T20         Rep1  Bag      Bag     Bag                0         0\n314       T20         Rep1  Bag      Bag     Bag                4         1\n315       T20         Rep2  Bag      Bag     Bag                2         0\n316       T20         Rep2  Bag      Bag     Bag                8         6\n317       T40         Rep1  Bag      Bag     Bag                0         0\n318       T40         Rep1  Bag      Bag     Bag                7         5\n319       T40         Rep2  Bag      Bag     Bag                1         0\n320       T40         Rep2  Bag      Bag     Bag                1        13\n321        T0         Rep1  Bag      Bag     Bag                1         0\n322        T0         Rep1  Bag      Bag     Bag                9         0\n323        T0         Rep2  Bag      Bag     Bag                1         4\n324        T0         Rep2  Bag      Bag     Bag               14         5\n325       T15         Rep1  Bag      Bag     Bag                1         0\n326       T15         Rep1  Bag      Bag     Bag               13         2\n327       T15         Rep2  Bag      Bag     Bag                0         4\n328       T15         Rep2  Bag      Bag     Bag               14        15\n329       T20         Rep1  Bag      Bag     Bag                1         4\n330       T20         Rep1  Bag      Bag     Bag                6         7\n331       T20         Rep2  Bag      Bag     Bag                1         4\n332       T20         Rep2  Bag      Bag     Bag               14         9\n333       T40         Rep1  Bag      Bag     Bag                0         0\n334       T40         Rep1  Bag      Bag     Bag               10         3\n335       T40         Rep2  Bag      Bag     Bag                0         2\n336       T40         Rep2  Bag      Bag     Bag               13         4\n    total_euks_wflp   SizeFrac Minutes SiteOrigin FLUID_ORIGIN CRUISE_SAMPLE\n1                 2 total_euks       0       Vent      J2-1241          LV24\n2                 3 total_euks      15       Vent      J2-1241          LV24\n3                 1 total_euks      20       Vent      J2-1241          LV24\n4                 0 total_euks      40       Vent      J2-1241          LV24\n5                 4 total_euks       0      Plume       CTD004     Niskin 10\n6                 3 total_euks       0      Plume       CTD004     Niskin 10\n7                 5 total_euks       0      Plume       CTD004     Niskin 10\n8                 5 total_euks      10      Plume       CTD004     Niskin 10\n9                 2 total_euks      10      Plume       CTD004     Niskin 10\n10                5 total_euks      10      Plume       CTD004     Niskin 10\n11                4 total_euks      15      Plume       CTD004     Niskin 10\n12                5 total_euks      15      Plume       CTD004     Niskin 10\n13                6 total_euks      15      Plume       CTD004     Niskin 10\n14                4 total_euks      20      Plume       CTD004     Niskin 10\n15                3 total_euks      20      Plume       CTD004     Niskin 10\n16                5 total_euks      20      Plume       CTD004     Niskin 10\n17                4 total_euks      40      Plume       CTD004     Niskin 10\n18                1 total_euks      40      Plume       CTD004     Niskin 10\n19                3 total_euks      40      Plume       CTD004     Niskin 10\n20                1 total_euks       0       Vent      J2-1240          IGT3\n21                4 total_euks       0       Vent      J2-1240          LV13\n22                1 total_euks      15       Vent      J2-1240          IGT3\n23                4 total_euks      10       Vent      J2-1240          LV13\n24                2 total_euks      14       Vent      J2-1240          LV13\n25                6 total_euks      25       Vent      J2-1240          IGT3\n26                5 total_euks      22       Vent      J2-1240          LV13\n27                2 total_euks      45       Vent      J2-1240          IGT3\n28                3 total_euks      42       Vent      J2-1240          LV13\n29                1 total_euks       0 Background       CTD002  Niskins 8-10\n30                1 total_euks       0 Background       CTD002  Niskins 8-10\n31                7 total_euks      10 Background       CTD002  Niskins 8-10\n32                7 total_euks      10 Background       CTD002  Niskins 8-10\n33                4 total_euks      15 Background       CTD002  Niskins 8-10\n34                4 total_euks      15 Background       CTD002  Niskins 8-10\n35                0 total_euks      15 Background       CTD002  Niskins 8-10\n36                2 total_euks      20 Background       CTD002  Niskins 8-10\n37                7 total_euks      20 Background       CTD002  Niskins 8-10\n38                1 total_euks      20 Background       CTD002  Niskins 8-10\n39                3 total_euks      40 Background       CTD002  Niskins 8-10\n40                6 total_euks      40 Background       CTD002  Niskins 8-10\n41                4 total_euks      40 Background       CTD002  Niskins 8-10\n42                3 total_euks       0       Vent      J2-1243          LV17\n43                3 total_euks       0       Vent      J2-1243          LV17\n44                2 total_euks      10       Vent      J2-1243          LV17\n45                1 total_euks      20       Vent      J2-1243          LV17\n46                1 total_euks      40       Vent      J2-1243          LV17\n47                2 total_euks      40       Vent      J2-1243          LV17\n48                2 total_euks       0       Vent      J2-1238          IGT4\n49                3 total_euks       0       Vent      J2-1238          IGT4\n50                2 total_euks       7       Vent      J2-1238          IGT4\n51                3 total_euks       7       Vent      J2-1238          IGT4\n52                5 total_euks      25       Vent      J2-1238          IGT4\n53                4 total_euks      25       Vent      J2-1238          IGT4\n54                9 total_euks      47       Vent      J2-1238          IGT4\n55               12 total_euks      47       Vent      J2-1238          IGT4\n56                7 total_euks       0      Plume       CTD001      Niskin 2\n57                3 total_euks       0      Plume       CTD001      Niskin 2\n58                3 total_euks       0      Plume       CTD001      Niskin 2\n59                6 total_euks      10      Plume       CTD001      Niskin 2\n60                5 total_euks      10      Plume       CTD001      Niskin 2\n61                7 total_euks      10      Plume       CTD001      Niskin 2\n62                7 total_euks      15      Plume       CTD001      Niskin 2\n63                3 total_euks      15      Plume       CTD001      Niskin 2\n64                3 total_euks      15      Plume       CTD001      Niskin 2\n65                4 total_euks      25      Plume       CTD001      Niskin 2\n66                4 total_euks      25      Plume       CTD001      Niskin 2\n67                5 total_euks      25      Plume       CTD001      Niskin 2\n68                5 total_euks      57      Plume       CTD001      Niskin 2\n69                9 total_euks      57      Plume       CTD001      Niskin 2\n70                5 total_euks      57      Plume       CTD001      Niskin 2\n71                2 total_euks       0       Vent      J2-1244          IGT4\n72                1 total_euks       0       Vent      J2-1244          IGT4\n73                3 total_euks       0       Vent      J2-1244          IGT5\n74                1 total_euks       0       Vent      J2-1244          IGT5\n75                5 total_euks       0       Vent      J2-1238         LV13a\n76                4 total_euks       0       Vent      J2-1238         LV13a\n77                4 total_euks      12       Vent      J2-1244          IGT4\n78                4 total_euks      35       Vent      J2-1244          IGT5\n79                5 total_euks      10       Vent      J2-1238         LV13a\n80                3 total_euks      10       Vent      J2-1238         LV13a\n81                7 total_euks      15       Vent      J2-1238         LV13a\n82                7 total_euks      15       Vent      J2-1238         LV13a\n83                3 total_euks      15       Vent      J2-1238         LV13a\n84                6 total_euks      20       Vent      J2-1244          IGT4\n85                6 total_euks      20       Vent      J2-1244          IGT4\n86                5 total_euks      40       Vent      J2-1244          IGT5\n87                9 total_euks      21       Vent      J2-1238         LV13a\n88                4 total_euks      21       Vent      J2-1238         LV13a\n89                3 total_euks      46       Vent      J2-1244          IGT4\n90                3 total_euks      46       Vent      J2-1244          IGT4\n91                2 total_euks      53       Vent      J2-1244          IGT5\n92                5 total_euks      53       Vent      J2-1244          IGT5\n93                9 total_euks      40       Vent      J2-1238         LV13a\n94                3 total_euks      40       Vent      J2-1238         LV13a\n95                7 total_euks       0       Vent      J2-1244          LV13\n96               10 total_euks       0       Vent      J2-1244          LV13\n97                2 total_euks      10       Vent      J2-1244          LV13\n98                4 total_euks      10       Vent      J2-1244          LV13\n99                5 total_euks      15       Vent      J2-1244          LV13\n100               5 total_euks      15       Vent      J2-1244          LV13\n101               1 total_euks      20       Vent      J2-1244          LV13\n102               2 total_euks      20       Vent      J2-1244          LV13\n103               4 total_euks      40       Vent      J2-1244          LV13\n104               5 total_euks      40       Vent      J2-1244          LV13\n105               0 total_euks       0       Vent      J2-1235   LV23 & Bio5\n106               5 total_euks       0       Vent      J2-1235   LV23 & Bio5\n107               1 total_euks      15       Vent      J2-1235   LV23 & Bio5\n108              11 total_euks      15       Vent      J2-1235   LV23 & Bio5\n109               6 total_euks      20       Vent      J2-1235   LV23 & Bio5\n110               6 total_euks      20       Vent      J2-1235   LV23 & Bio5\n111               2 total_euks      40       Vent      J2-1235   LV23 & Bio5\n112               4 total_euks      40       Vent      J2-1235   LV23 & Bio5\n113               0 micro_size       0       Vent      J2-1241          LV24\n114               2  nano_size       0       Vent      J2-1241          LV24\n115               1 micro_size      15       Vent      J2-1241          LV24\n116               2  nano_size      15       Vent      J2-1241          LV24\n117               0 micro_size      20       Vent      J2-1241          LV24\n118               1  nano_size      20       Vent      J2-1241          LV24\n119               0 micro_size      40       Vent      J2-1241          LV24\n120               0  nano_size      40       Vent      J2-1241          LV24\n121               1 micro_size       0      Plume       CTD004     Niskin 10\n122               3  nano_size       0      Plume       CTD004     Niskin 10\n123               2 micro_size       0      Plume       CTD004     Niskin 10\n124               1  nano_size       0      Plume       CTD004     Niskin 10\n125               0 micro_size       0      Plume       CTD004     Niskin 10\n126               5  nano_size       0      Plume       CTD004     Niskin 10\n127               0 micro_size      10      Plume       CTD004     Niskin 10\n128               5  nano_size      10      Plume       CTD004     Niskin 10\n129               0 micro_size      10      Plume       CTD004     Niskin 10\n130               2  nano_size      10      Plume       CTD004     Niskin 10\n131               1 micro_size      10      Plume       CTD004     Niskin 10\n132               4  nano_size      10      Plume       CTD004     Niskin 10\n133               1 micro_size      15      Plume       CTD004     Niskin 10\n134               3  nano_size      15      Plume       CTD004     Niskin 10\n135               1 micro_size      15      Plume       CTD004     Niskin 10\n136               4  nano_size      15      Plume       CTD004     Niskin 10\n137               2 micro_size      15      Plume       CTD004     Niskin 10\n138               4  nano_size      15      Plume       CTD004     Niskin 10\n139               1 micro_size      20      Plume       CTD004     Niskin 10\n140               3  nano_size      20      Plume       CTD004     Niskin 10\n141               1 micro_size      20      Plume       CTD004     Niskin 10\n142               2  nano_size      20      Plume       CTD004     Niskin 10\n143               0 micro_size      20      Plume       CTD004     Niskin 10\n144               5  nano_size      20      Plume       CTD004     Niskin 10\n145               0 micro_size      40      Plume       CTD004     Niskin 10\n146               4  nano_size      40      Plume       CTD004     Niskin 10\n147               0 micro_size      40      Plume       CTD004     Niskin 10\n148               1  nano_size      40      Plume       CTD004     Niskin 10\n149               0 micro_size      40      Plume       CTD004     Niskin 10\n150               3  nano_size      40      Plume       CTD004     Niskin 10\n151               0 micro_size       0       Vent      J2-1240          IGT3\n152               1  nano_size       0       Vent      J2-1240          IGT3\n153               0 micro_size       0       Vent      J2-1240          LV13\n154               4  nano_size       0       Vent      J2-1240          LV13\n155               0 micro_size      15       Vent      J2-1240          IGT3\n156               1  nano_size      15       Vent      J2-1240          IGT3\n157               1 micro_size      10       Vent      J2-1240          LV13\n158               3  nano_size      10       Vent      J2-1240          LV13\n159               1 micro_size      14       Vent      J2-1240          LV13\n160               1  nano_size      14       Vent      J2-1240          LV13\n161               1 micro_size      25       Vent      J2-1240          IGT3\n162               5  nano_size      25       Vent      J2-1240          IGT3\n163               1 micro_size      22       Vent      J2-1240          LV13\n164               4  nano_size      22       Vent      J2-1240          LV13\n165               1 micro_size      45       Vent      J2-1240          IGT3\n166               1  nano_size      45       Vent      J2-1240          IGT3\n167               0 micro_size      42       Vent      J2-1240          LV13\n168               3  nano_size      42       Vent      J2-1240          LV13\n169               0 micro_size       0 Background       CTD002  Niskins 8-10\n170               1  nano_size       0 Background       CTD002  Niskins 8-10\n171               0 micro_size       0 Background       CTD002  Niskins 8-10\n172               1  nano_size       0 Background       CTD002  Niskins 8-10\n173               2 micro_size      10 Background       CTD002  Niskins 8-10\n174               5  nano_size      10 Background       CTD002  Niskins 8-10\n175               1 micro_size      10 Background       CTD002  Niskins 8-10\n176               6  nano_size      10 Background       CTD002  Niskins 8-10\n177               1 micro_size      15 Background       CTD002  Niskins 8-10\n178               3  nano_size      15 Background       CTD002  Niskins 8-10\n179               1 micro_size      15 Background       CTD002  Niskins 8-10\n180               3  nano_size      15 Background       CTD002  Niskins 8-10\n181               0 micro_size      15 Background       CTD002  Niskins 8-10\n182               0  nano_size      15 Background       CTD002  Niskins 8-10\n183               0 micro_size      20 Background       CTD002  Niskins 8-10\n184               2  nano_size      20 Background       CTD002  Niskins 8-10\n185               1 micro_size      20 Background       CTD002  Niskins 8-10\n186               6  nano_size      20 Background       CTD002  Niskins 8-10\n187               1 micro_size      20 Background       CTD002  Niskins 8-10\n188               0  nano_size      20 Background       CTD002  Niskins 8-10\n189               2 micro_size      40 Background       CTD002  Niskins 8-10\n190               1  nano_size      40 Background       CTD002  Niskins 8-10\n191               2 micro_size      40 Background       CTD002  Niskins 8-10\n192               4  nano_size      40 Background       CTD002  Niskins 8-10\n193               0 micro_size      40 Background       CTD002  Niskins 8-10\n194               4  nano_size      40 Background       CTD002  Niskins 8-10\n195               0 micro_size       0       Vent      J2-1243          LV17\n196               3  nano_size       0       Vent      J2-1243          LV17\n197               0 micro_size       0       Vent      J2-1243          LV17\n198               3  nano_size       0       Vent      J2-1243          LV17\n199               0 micro_size      10       Vent      J2-1243          LV17\n200               2  nano_size      10       Vent      J2-1243          LV17\n201               0 micro_size      20       Vent      J2-1243          LV17\n202               1  nano_size      20       Vent      J2-1243          LV17\n203               0 micro_size      40       Vent      J2-1243          LV17\n204               1  nano_size      40       Vent      J2-1243          LV17\n205               0 micro_size      40       Vent      J2-1243          LV17\n206               2  nano_size      40       Vent      J2-1243          LV17\n207               1 micro_size       0       Vent      J2-1238          IGT4\n208               1  nano_size       0       Vent      J2-1238          IGT4\n209               0 micro_size       0       Vent      J2-1238          IGT4\n210               3  nano_size       0       Vent      J2-1238          IGT4\n211               0 micro_size       7       Vent      J2-1238          IGT4\n212               2  nano_size       7       Vent      J2-1238          IGT4\n213               0 micro_size       7       Vent      J2-1238          IGT4\n214               3  nano_size       7       Vent      J2-1238          IGT4\n215               0 micro_size      25       Vent      J2-1238          IGT4\n216               5  nano_size      25       Vent      J2-1238          IGT4\n217               3 micro_size      25       Vent      J2-1238          IGT4\n218               1  nano_size      25       Vent      J2-1238          IGT4\n219               0 micro_size      47       Vent      J2-1238          IGT4\n220               9  nano_size      47       Vent      J2-1238          IGT4\n221               4 micro_size      47       Vent      J2-1238          IGT4\n222               8  nano_size      47       Vent      J2-1238          IGT4\n223               2 micro_size       0      Plume       CTD001      Niskin 2\n224               5  nano_size       0      Plume       CTD001      Niskin 2\n225               1 micro_size       0      Plume       CTD001      Niskin 2\n226               2  nano_size       0      Plume       CTD001      Niskin 2\n227               0 micro_size       0      Plume       CTD001      Niskin 2\n228               3  nano_size       0      Plume       CTD001      Niskin 2\n229               1 micro_size      10      Plume       CTD001      Niskin 2\n230               5  nano_size      10      Plume       CTD001      Niskin 2\n231               2 micro_size      10      Plume       CTD001      Niskin 2\n232               3  nano_size      10      Plume       CTD001      Niskin 2\n233               1 micro_size      10      Plume       CTD001      Niskin 2\n234               6  nano_size      10      Plume       CTD001      Niskin 2\n235               0 micro_size      15      Plume       CTD001      Niskin 2\n236               7  nano_size      15      Plume       CTD001      Niskin 2\n237               0 micro_size      15      Plume       CTD001      Niskin 2\n238               3  nano_size      15      Plume       CTD001      Niskin 2\n239               1 micro_size      15      Plume       CTD001      Niskin 2\n240               2  nano_size      15      Plume       CTD001      Niskin 2\n241               0 micro_size      25      Plume       CTD001      Niskin 2\n242               4  nano_size      25      Plume       CTD001      Niskin 2\n243               2 micro_size      25      Plume       CTD001      Niskin 2\n244               2  nano_size      25      Plume       CTD001      Niskin 2\n245               0 micro_size      25      Plume       CTD001      Niskin 2\n246               5  nano_size      25      Plume       CTD001      Niskin 2\n247               4 micro_size      57      Plume       CTD001      Niskin 2\n248               1  nano_size      57      Plume       CTD001      Niskin 2\n249               0 micro_size      57      Plume       CTD001      Niskin 2\n250               9  nano_size      57      Plume       CTD001      Niskin 2\n251               1 micro_size      57      Plume       CTD001      Niskin 2\n252               4  nano_size      57      Plume       CTD001      Niskin 2\n253               0 micro_size       0       Vent      J2-1244          IGT4\n254               2  nano_size       0       Vent      J2-1244          IGT4\n255               0 micro_size       0       Vent      J2-1244          IGT4\n256               1  nano_size       0       Vent      J2-1244          IGT4\n257               1 micro_size       0       Vent      J2-1244          IGT5\n258               2  nano_size       0       Vent      J2-1244          IGT5\n259               0 micro_size       0       Vent      J2-1244          IGT5\n260               1  nano_size       0       Vent      J2-1244          IGT5\n261               0 micro_size       0       Vent      J2-1238         LV13a\n262               5  nano_size       0       Vent      J2-1238         LV13a\n263               0 micro_size       0       Vent      J2-1238         LV13a\n264               4  nano_size       0       Vent      J2-1238         LV13a\n265               0 micro_size      12       Vent      J2-1244          IGT4\n266               4  nano_size      12       Vent      J2-1244          IGT4\n267               0 micro_size      35       Vent      J2-1244          IGT5\n268               4  nano_size      35       Vent      J2-1244          IGT5\n269               0 micro_size      10       Vent      J2-1238         LV13a\n270               5  nano_size      10       Vent      J2-1238         LV13a\n271               0 micro_size      10       Vent      J2-1238         LV13a\n272               3  nano_size      10       Vent      J2-1238         LV13a\n273               0 micro_size      15       Vent      J2-1238         LV13a\n274               7  nano_size      15       Vent      J2-1238         LV13a\n275               1 micro_size      15       Vent      J2-1238         LV13a\n276               6  nano_size      15       Vent      J2-1238         LV13a\n277               1 micro_size      15       Vent      J2-1238         LV13a\n278               2  nano_size      15       Vent      J2-1238         LV13a\n279               1 micro_size      20       Vent      J2-1244          IGT4\n280               5  nano_size      20       Vent      J2-1244          IGT4\n281               3 micro_size      20       Vent      J2-1244          IGT4\n282               3  nano_size      20       Vent      J2-1244          IGT4\n283               0 micro_size      40       Vent      J2-1244          IGT5\n284               5  nano_size      40       Vent      J2-1244          IGT5\n285               1 micro_size      21       Vent      J2-1238         LV13a\n286               8  nano_size      21       Vent      J2-1238         LV13a\n287               0 micro_size      21       Vent      J2-1238         LV13a\n288               4  nano_size      21       Vent      J2-1238         LV13a\n289               0 micro_size      46       Vent      J2-1244          IGT4\n290               3  nano_size      46       Vent      J2-1244          IGT4\n291               0 micro_size      46       Vent      J2-1244          IGT4\n292               3  nano_size      46       Vent      J2-1244          IGT4\n293               0 micro_size      53       Vent      J2-1244          IGT5\n294               2  nano_size      53       Vent      J2-1244          IGT5\n295               1 micro_size      53       Vent      J2-1244          IGT5\n296               4  nano_size      53       Vent      J2-1244          IGT5\n297               0 micro_size      40       Vent      J2-1238         LV13a\n298               9  nano_size      40       Vent      J2-1238         LV13a\n299               0 micro_size      40       Vent      J2-1238         LV13a\n300               3  nano_size      40       Vent      J2-1238         LV13a\n301               1 micro_size       0       Vent      J2-1244          LV13\n302               6  nano_size       0       Vent      J2-1244          LV13\n303               1 micro_size       0       Vent      J2-1244          LV13\n304               9  nano_size       0       Vent      J2-1244          LV13\n305               0 micro_size      10       Vent      J2-1244          LV13\n306               2  nano_size      10       Vent      J2-1244          LV13\n307               0 micro_size      10       Vent      J2-1244          LV13\n308               4  nano_size      10       Vent      J2-1244          LV13\n309               1 micro_size      15       Vent      J2-1244          LV13\n310               4  nano_size      15       Vent      J2-1244          LV13\n311               0 micro_size      15       Vent      J2-1244          LV13\n312               5  nano_size      15       Vent      J2-1244          LV13\n313               0 micro_size      20       Vent      J2-1244          LV13\n314               1  nano_size      20       Vent      J2-1244          LV13\n315               0 micro_size      20       Vent      J2-1244          LV13\n316               2  nano_size      20       Vent      J2-1244          LV13\n317               0 micro_size      40       Vent      J2-1244          LV13\n318               4  nano_size      40       Vent      J2-1244          LV13\n319               0 micro_size      40       Vent      J2-1244          LV13\n320               5  nano_size      40       Vent      J2-1244          LV13\n321               0 micro_size       0       Vent      J2-1235   LV23 & Bio5\n322               0  nano_size       0       Vent      J2-1235   LV23 & Bio5\n323               2 micro_size       0       Vent      J2-1235   LV23 & Bio5\n324               3  nano_size       0       Vent      J2-1235   LV23 & Bio5\n325               0 micro_size      15       Vent      J2-1235   LV23 & Bio5\n326               1  nano_size      15       Vent      J2-1235   LV23 & Bio5\n327               2 micro_size      15       Vent      J2-1235   LV23 & Bio5\n328               9  nano_size      15       Vent      J2-1235   LV23 & Bio5\n329               2 micro_size      20       Vent      J2-1235   LV23 & Bio5\n330               4  nano_size      20       Vent      J2-1235   LV23 & Bio5\n331               1 micro_size      20       Vent      J2-1235   LV23 & Bio5\n332               5  nano_size      20       Vent      J2-1235   LV23 & Bio5\n333               0 micro_size      40       Vent      J2-1235   LV23 & Bio5\n334               2  nano_size      40       Vent      J2-1235   LV23 & Bio5\n335               1 micro_size      40       Vent      J2-1235   LV23 & Bio5\n336               3  nano_size      40       Vent      J2-1235   LV23 & Bio5\n    EXP_REPS EXP_VOL CTRL_REPS CTRL_VOL  FLPperEuk\n1          3    1.50         2      0.2 0.27272727\n2          3    1.50         2      0.2 0.36363636\n3          3    1.50         2      0.2 0.20000000\n4          3    1.50         2      0.2 0.00000000\n5          3    2.00         2      0.5 0.60000000\n6          3    2.00         2      0.5 0.62500000\n7          3    2.00         2      0.5 0.50000000\n8          3    2.00         2      0.5 0.46153846\n9          3    2.00         2      0.5 0.75000000\n10         3    2.00         2      0.5 0.85714286\n11         3    2.00         2      0.5 0.57142857\n12         3    2.00         2      0.5 1.83333333\n13         3    2.00         2      0.5 1.72727273\n14         3    2.00         2      0.5 0.55555556\n15         3    2.00         2      0.5 0.66666667\n16         3    2.00         2      0.5 0.75000000\n17         3    2.00         2      0.5 1.22222222\n18         3    2.00         2      0.5 1.00000000\n19         3    2.00         2      0.5 0.40000000\n20         1    0.15        NA       NA 0.09090909\n21         3    1.50         2      0.2 0.69230769\n22         1    0.15        NA       NA 0.10000000\n23         3    1.50         2      0.2 0.42857143\n24         3    1.50         2      0.2 0.80000000\n25         1    0.15        NA       NA 0.54545455\n26         3    1.50         2      0.2 2.16666667\n27         1    0.15        NA       NA 0.37500000\n28         3    1.50         2      0.2 1.00000000\n29         3    2.00         2      0.5 0.07692308\n30         3    2.00         2      0.5 0.10000000\n31         3    2.00         2      0.5 0.65217391\n32         3    2.00         2      0.5 0.92857143\n33         3    2.00         2      0.5 0.57142857\n34         3    2.00         2      0.5 0.27777778\n35         3    2.00         2      0.5 0.00000000\n36         3    2.00         2      0.5 0.14285714\n37         3    2.00         2      0.5 0.95238095\n38         3    2.00         2      0.5 0.20000000\n39         3    2.00         2      0.5 0.21428571\n40         3    2.00         2      0.5 0.47058824\n41         3    2.00         2      0.5 0.53333333\n42         2    1.50         2      0.2 0.54545455\n43         2    1.50         2      0.2 0.54545455\n44         2    1.50         2      0.2 0.50000000\n45         2    1.50         2      0.2 0.33333333\n46         2    1.50         2      0.2 0.25000000\n47         2    1.50         2      0.2 0.41666667\n48         1    0.15        NA       NA 0.30000000\n49         1    0.15        NA       NA 0.23529412\n50         1    0.15        NA       NA 0.18181818\n51         1    0.15        NA       NA 0.44444444\n52         1    0.15        NA       NA 0.35714286\n53         1    0.15        NA       NA 0.87500000\n54         1    0.15        NA       NA 1.00000000\n55         1    0.15        NA       NA 2.42105263\n56         3    2.00         2      1.0 0.40476190\n57         3    2.00         2      1.0 0.31578947\n58         3    2.00         2      1.0 0.87500000\n59         3    2.00         2      1.0 0.42105263\n60         3    2.00         2      1.0 0.42105263\n61         3    2.00         2      1.0 0.77777778\n62         3    2.00         2      1.0 0.64705882\n63         3    2.00         2      1.0 0.26666667\n64         3    2.00         2      1.0 0.29411765\n65         3    2.00         2      1.0 0.30000000\n66         3    2.00         2      1.0 0.78571429\n67         3    2.00         2      1.0 0.66666667\n68         3    2.00         2      1.0 0.37500000\n69         3    2.00         2      1.0 0.80952381\n70         3    2.00         2      1.0 1.18181818\n71         1    0.15        NA       NA 0.07407407\n72         1    0.15        NA       NA 0.18750000\n73         1    0.15        NA       NA 0.44444444\n74         1    0.15        NA       NA 0.10000000\n75         3    1.50         2      0.5 1.00000000\n76         3    1.50         2      0.5 0.26086957\n77         1    0.15        NA       NA 0.29411765\n78         1    0.15        NA       NA 0.27777778\n79         3    1.50         2      0.5 1.70000000\n80         3    1.50         2      0.5 0.22222222\n81         3    1.50         2      0.5 1.18750000\n82         3    1.50         2      0.5 0.44000000\n83         3    1.50         2      0.5 2.20000000\n84         1    0.15        NA       NA 0.50000000\n85         1    0.15        NA       NA 0.38095238\n86         1    0.15        NA       NA 0.37500000\n87         3    1.50         2      0.5 2.37500000\n88         3    1.50         2      0.5 0.25000000\n89         1    0.15        NA       NA 0.36363636\n90         1    0.15        NA       NA 0.21052632\n91         1    0.15        NA       NA 0.30000000\n92         1    0.15        NA       NA 0.70000000\n93         3    1.50         2      0.5 0.96153846\n94         3    1.50         2      0.5 0.70000000\n95         2    1.50         2      0.2 1.20000000\n96         2    1.50         2      0.2 1.61111111\n97         2    1.50         2      0.2 0.30769231\n98         2    1.50         2      0.2 0.75000000\n99         2    1.50         2      0.2 0.69230769\n100        2    1.50         2      0.2 1.07692308\n101        2    1.50         2      0.2 0.20000000\n102        2    1.50         2      0.2 0.50000000\n103        2    1.50         2      0.2 0.45454545\n104        2    1.50         2      0.2 1.85714286\n105        2    1.50         2      0.5 0.00000000\n106        2    1.50         2      0.5 0.45000000\n107        2    1.50         2      0.5 0.13333333\n108        2    1.50         2      0.5 0.76000000\n109        2    1.50         2      0.5 0.84615385\n110        2    1.50         2      0.5 0.61904762\n111        2    1.50         2      0.5 0.25000000\n112        2    1.50         2      0.5 0.35294118\n113        3    1.50         2      0.2        NaN\n114        3    1.50         2      0.2 0.27272727\n115        3    1.50         2      0.2 0.50000000\n116        3    1.50         2      0.2 0.33333333\n117        3    1.50         2      0.2        NaN\n118        3    1.50         2      0.2 0.20000000\n119        3    1.50         2      0.2        NaN\n120        3    1.50         2      0.2 0.00000000\n121        3    2.00         2      0.5 2.00000000\n122        3    2.00         2      0.5 0.44444444\n123        3    2.00         2      0.5 1.50000000\n124        3    2.00         2      0.5 0.33333333\n125        3    2.00         2      0.5 0.00000000\n126        3    2.00         2      0.5 0.53333333\n127        3    2.00         2      0.5        NaN\n128        3    2.00         2      0.5 0.46153846\n129        3    2.00         2      0.5        NaN\n130        3    2.00         2      0.5 0.75000000\n131        3    2.00         2      0.5 1.50000000\n132        3    2.00         2      0.5 0.75000000\n133        3    2.00         2      0.5 1.00000000\n134        3    2.00         2      0.5 0.53846154\n135        3    2.00         2      0.5 4.00000000\n136        3    2.00         2      0.5 1.40000000\n137        3    2.00         2      0.5 4.00000000\n138        3    2.00         2      0.5 1.22222222\n139        3    2.00         2      0.5 1.00000000\n140        3    2.00         2      0.5 0.50000000\n141        3    2.00         2      0.5 2.00000000\n142        3    2.00         2      0.5 0.40000000\n143        3    2.00         2      0.5 0.00000000\n144        3    2.00         2      0.5 0.81818182\n145        3    2.00         2      0.5        NaN\n146        3    2.00         2      0.5 1.22222222\n147        3    2.00         2      0.5        NaN\n148        3    2.00         2      0.5 1.00000000\n149        3    2.00         2      0.5 0.00000000\n150        3    2.00         2      0.5 0.44444444\n151        1    0.15        NA       NA        NaN\n152        1    0.15        NA       NA 0.09090909\n153        3    1.50         2      0.2 0.00000000\n154        3    1.50         2      0.2 0.75000000\n155        1    0.15        NA       NA 0.00000000\n156        1    0.15        NA       NA 0.12500000\n157        3    1.50         2      0.2 1.00000000\n158        3    1.50         2      0.2 0.38461538\n159        3    1.50         2      0.2 5.00000000\n160        3    1.50         2      0.2 0.33333333\n161        1    0.15        NA       NA 0.50000000\n162        1    0.15        NA       NA 0.55555556\n163        3    1.50         2      0.2 2.00000000\n164        3    1.50         2      0.2 2.20000000\n165        1    0.15        NA       NA 2.00000000\n166        1    0.15        NA       NA 0.14285714\n167        3    1.50         2      0.2 0.00000000\n168        3    1.50         2      0.2 1.25000000\n169        3    2.00         2      0.5        NaN\n170        3    2.00         2      0.5 0.07692308\n171        3    2.00         2      0.5        NaN\n172        3    2.00         2      0.5 0.10000000\n173        3    2.00         2      0.5 1.00000000\n174        3    2.00         2      0.5 0.57894737\n175        3    2.00         2      0.5 1.50000000\n176        3    2.00         2      0.5 0.83333333\n177        3    2.00         2      0.5 2.00000000\n178        3    2.00         2      0.5 0.46153846\n179        3    2.00         2      0.5 0.50000000\n180        3    2.00         2      0.5 0.25000000\n181        3    2.00         2      0.5        NaN\n182        3    2.00         2      0.5 0.00000000\n183        3    2.00         2      0.5 0.00000000\n184        3    2.00         2      0.5 0.15384615\n185        3    2.00         2      0.5 1.00000000\n186        3    2.00         2      0.5 0.93750000\n187        3    2.00         2      0.5 1.00000000\n188        3    2.00         2      0.5 0.00000000\n189        3    2.00         2      0.5 0.66666667\n190        3    2.00         2      0.5 0.09090909\n191        3    2.00         2      0.5 0.60000000\n192        3    2.00         2      0.5 0.41666667\n193        3    2.00         2      0.5 0.00000000\n194        3    2.00         2      0.5 0.61538462\n195        2    1.50         2      0.2        NaN\n196        2    1.50         2      0.2 0.54545455\n197        2    1.50         2      0.2        NaN\n198        2    1.50         2      0.2 0.54545455\n199        2    1.50         2      0.2        NaN\n200        2    1.50         2      0.2 0.50000000\n201        2    1.50         2      0.2        NaN\n202        2    1.50         2      0.2 0.33333333\n203        2    1.50         2      0.2 0.00000000\n204        2    1.50         2      0.2 0.28571429\n205        2    1.50         2      0.2        NaN\n206        2    1.50         2      0.2 0.41666667\n207        1    0.15        NA       NA 0.50000000\n208        1    0.15        NA       NA 0.25000000\n209        1    0.15        NA       NA 0.00000000\n210        1    0.15        NA       NA 0.30769231\n211        1    0.15        NA       NA        NaN\n212        1    0.15        NA       NA 0.18181818\n213        1    0.15        NA       NA        NaN\n214        1    0.15        NA       NA 0.44444444\n215        1    0.15        NA       NA        NaN\n216        1    0.15        NA       NA 0.35714286\n217        1    0.15        NA       NA 2.00000000\n218        1    0.15        NA       NA 0.20000000\n219        1    0.15        NA       NA        NaN\n220        1    0.15        NA       NA 1.00000000\n221        1    0.15        NA       NA 3.20000000\n222        1    0.15        NA       NA 2.14285714\n223        3    2.00         2      1.0 1.33333333\n224        3    2.00         2      1.0 0.25000000\n225        3    2.00         2      1.0 2.00000000\n226        3    2.00         2      1.0 0.11764706\n227        3    2.00         2      1.0 0.00000000\n228        3    2.00         2      1.0 1.16666667\n229        3    2.00         2      1.0 1.00000000\n230        3    2.00         2      1.0 0.38888889\n231        3    2.00         2      1.0 2.00000000\n232        3    2.00         2      1.0 0.23529412\n233        3    2.00         2      1.0 1.00000000\n234        3    2.00         2      1.0 0.75000000\n235        3    2.00         2      1.0 0.00000000\n236        3    2.00         2      1.0 0.78571429\n237        3    2.00         2      1.0        NaN\n238        3    2.00         2      1.0 0.26666667\n239        3    2.00         2      1.0 0.66666667\n240        3    2.00         2      1.0 0.21428571\n241        3    2.00         2      1.0 0.00000000\n242        3    2.00         2      1.0 0.31578947\n243        3    2.00         2      1.0 2.50000000\n244        3    2.00         2      1.0 0.50000000\n245        3    2.00         2      1.0 0.00000000\n246        3    2.00         2      1.0 0.70588235\n247        3    2.00         2      1.0 0.61538462\n248        3    2.00         2      1.0 0.09090909\n249        3    2.00         2      1.0        NaN\n250        3    2.00         2      1.0 0.80952381\n251        3    2.00         2      1.0 4.00000000\n252        3    2.00         2      1.0 0.90000000\n253        1    0.15        NA       NA        NaN\n254        1    0.15        NA       NA 0.07407407\n255        1    0.15        NA       NA 0.00000000\n256        1    0.15        NA       NA 0.20000000\n257        1    0.15        NA       NA 2.00000000\n258        1    0.15        NA       NA 0.25000000\n259        1    0.15        NA       NA 0.00000000\n260        1    0.15        NA       NA 0.11111111\n261        3    1.50         2      0.5        NaN\n262        3    1.50         2      0.5 1.00000000\n263        3    1.50         2      0.5 0.00000000\n264        3    1.50         2      0.5 0.27272727\n265        1    0.15        NA       NA        NaN\n266        1    0.15        NA       NA 0.29411765\n267        1    0.15        NA       NA        NaN\n268        1    0.15        NA       NA 0.27777778\n269        3    1.50         2      0.5 0.00000000\n270        3    1.50         2      0.5 1.88888889\n271        3    1.50         2      0.5        NaN\n272        3    1.50         2      0.5 0.22222222\n273        3    1.50         2      0.5        NaN\n274        3    1.50         2      0.5 1.18750000\n275        3    1.50         2      0.5 4.00000000\n276        3    1.50         2      0.5 0.29166667\n277        3    1.50         2      0.5 2.50000000\n278        3    1.50         2      0.5 2.00000000\n279        1    0.15        NA       NA 1.00000000\n280        1    0.15        NA       NA 0.46666667\n281        1    0.15        NA       NA 1.00000000\n282        1    0.15        NA       NA 0.23529412\n283        1    0.15        NA       NA        NaN\n284        1    0.15        NA       NA 0.37500000\n285        3    1.50         2      0.5 9.00000000\n286        3    1.50         2      0.5 1.93333333\n287        3    1.50         2      0.5        NaN\n288        3    1.50         2      0.5 0.25000000\n289        1    0.15        NA       NA        NaN\n290        1    0.15        NA       NA 0.36363636\n291        1    0.15        NA       NA        NaN\n292        1    0.15        NA       NA 0.21052632\n293        1    0.15        NA       NA        NaN\n294        1    0.15        NA       NA 0.30000000\n295        1    0.15        NA       NA 0.66666667\n296        1    0.15        NA       NA 0.71428571\n297        3    1.50         2      0.5        NaN\n298        3    1.50         2      0.5 0.96153846\n299        3    1.50         2      0.5        NaN\n300        3    1.50         2      0.5 0.70000000\n301        2    1.50         2      0.2 0.66666667\n302        2    1.50         2      0.2 1.33333333\n303        2    1.50         2      0.2 7.00000000\n304        2    1.50         2      0.2 1.29411765\n305        2    1.50         2      0.2 0.00000000\n306        2    1.50         2      0.2 0.40000000\n307        2    1.50         2      0.2 0.00000000\n308        2    1.50         2      0.2 0.85714286\n309        2    1.50         2      0.2 0.50000000\n310        2    1.50         2      0.2 0.72727273\n311        2    1.50         2      0.2 0.00000000\n312        2    1.50         2      0.2 1.75000000\n313        2    1.50         2      0.2        NaN\n314        2    1.50         2      0.2 0.20000000\n315        2    1.50         2      0.2 0.00000000\n316        2    1.50         2      0.2 0.60000000\n317        2    1.50         2      0.2        NaN\n318        2    1.50         2      0.2 0.45454545\n319        2    1.50         2      0.2 0.00000000\n320        2    1.50         2      0.2 2.16666667\n321        2    1.50         2      0.5 0.00000000\n322        2    1.50         2      0.5 0.00000000\n323        2    1.50         2      0.5 1.33333333\n324        2    1.50         2      0.5 0.29411765\n325        2    1.50         2      0.5 0.00000000\n326        2    1.50         2      0.5 0.14285714\n327        2    1.50         2      0.5 2.00000000\n328        2    1.50         2      0.5 0.65217391\n329        2    1.50         2      0.5 1.33333333\n330        2    1.50         2      0.5 0.70000000\n331        2    1.50         2      0.5 2.00000000\n332        2    1.50         2      0.5 0.47368421\n333        2    1.50         2      0.5        NaN\n334        2    1.50         2      0.5 0.25000000\n335        2    1.50         2      0.5 2.00000000\n336        2    1.50         2      0.5 0.25000000\n\n\n\nCOLS: Timepoint, Minutes = time point label, actual incubated minutes\n\n\nCOLS: Replicate_ID, REP, and IGT_REP = full replicate identified for IGTs and Bags, designation of biological replicates, and designation of technical replicates for IGT experiments"
  },
  {
    "objectID": "grazing.html#calculate-linear-regression-to-obtain-slope",
    "href": "grazing.html#calculate-linear-regression-to-obtain-slope",
    "title": "Protistan grazing analysis",
    "section": "4.3 Calculate linear regression to obtain slope",
    "text": "4.3 Calculate linear regression to obtain slope\nUse lm() function in R to calculate linear regression for each experiment. Slope equates to grazing rate. Function inputs the FLP per euk cell data, performs regression and then adds a column for slope and r-squared values.\nFunction to estimate slope. Uses broom and tidymodels, then extracts slope.\n\n\nCode\ncalculate_lm &lt;- function(df){\n  regression_1 &lt;- df %&gt;%\n  type.convert(as.is = TRUE) %&gt;%\n  ## Keep technical replicates separate for IGTs\n  group_by(SAMPLE, Site, Experiment, Name, IGT_REP, SizeFrac) %&gt;%\n  nest(-SAMPLE, -Site, -Experiment, -Name, -IGT_REP, -SizeFrac) %&gt;%\n  ## Combine technical replicates for IGTs\n  # group_by(SAMPLE, Site, Experiment, Name, REP, SizeFrac) %&gt;%\n  # nest(-SAMPLE, -Site, -Experiment, -Name, -REP, -SizeFrac) %&gt;%\n  mutate(lm_fit = map(data, ~lm(FLPperEuk ~ Minutes, data = .)),\n         tidied = map(lm_fit, tidy)) %&gt;% \n  unnest(tidied) %&gt;% \n  select(SAMPLE, Site, Experiment, Name, IGT_REP, SizeFrac, term, estimate) %&gt;%\n  # select(SAMPLE, Site, Experiment, Name, REP, SizeFrac, term, estimate) %&gt;% \n  pivot_wider(names_from = term, values_from = estimate) %&gt;% \n  data.frame\n  # Reset column names\n  colnames(regression_1) &lt;- c(\"SAMPLE\", \"Site\", \n                              \"Experiment\", \"Name\", \"IGT_REP\",\n                              \"SizeFrac\", \"INTERCEPT\", \"SLOPE\")\n  # Repeat broom model to get R2\n  out_regression &lt;- df %&gt;%\n  ## Keep technical replicates separate for IGTs\n  group_by(SAMPLE, Site, Experiment, Name, IGT_REP, SizeFrac) %&gt;%\n  nest(-SAMPLE, -Site, -Experiment, -Name, -IGT_REP, -SizeFrac) %&gt;%\n  # group_by(SAMPLE, Site, Experiment, Name, REP, SizeFrac) %&gt;%\n  # nest(-SAMPLE, -Site, -Experiment, -Name, -REP, -SizeFrac) %&gt;%\n  mutate(lm_fit = map(data, ~lm(FLPperEuk ~ Minutes, data = .)),\n         glanced = map(lm_fit, glance)) %&gt;% \n  unnest(glanced) %&gt;% \n    select(SAMPLE, Site, Experiment, Name, IGT_REP, SizeFrac, r.squared) %&gt;%\n    # select(SAMPLE, Site, Experiment, Name, REP, SizeFrac, r.squared) %&gt;% \n  right_join(regression_1) %&gt;% \n  right_join(df) %&gt;% \n  data.frame\n  out_regression$SITE &lt;- factor(out_regression$Site, levels = c(\"VD\", \"Piccard\"))\n  out_regression$TYPE &lt;- factor(out_regression$EXP_TYPE, levels = c(\"Bag\", \"IGT\"))\n  return(out_regression)\n}\n\n\n\nNote that an error may occur when running the below function. This is due to the fact that some experiments did not have replicates.\n\nApply to all data to obtain slope.\n\n\nCode\ncalcs_wslope_regression &lt;- calculate_lm(counts_flp_calcs_all)\n\n\nWarning: Supplying `...` without names was deprecated in tidyr 1.0.0.\nℹ Please specify a name for each selection.\nℹ Did you want `data = c(-SAMPLE, -Site, -Experiment, -Name, -IGT_REP,\n  -SizeFrac)`?\n\n\nWarning: Supplying `...` without names was deprecated in tidyr 1.0.0.\nℹ Please specify a name for each selection.\nℹ Did you want `data = c(-SAMPLE, -Site, -Experiment, -Name, -IGT_REP,\n  -SizeFrac)`?\n\n\nJoining with `by = join_by(SAMPLE, Site, Experiment, Name, IGT_REP, SizeFrac)`\nJoining with `by = join_by(SAMPLE, Site, Experiment, Name, IGT_REP, SizeFrac)`\n\n\ngut check linear regression work. Use below commands out to recalculate one linear regression. Above function uses the nest() capability of tidyverse. Below, one experiment is subset to check the value.\n\n\nCode\n# Extract only plume-bag experiment from VD\n# tmp_plume &lt;- filter(counts_flp_calcs_all, Experiment == \"Plume-Bag\") %&gt;% filter(Site == \"VD\") %&gt;% filter(SizeFrac == \"total_euks\")\n# tmp_plume # View\n# Perform linear regression\n# lm_out &lt;- lm(FLPperEuk ~ Minutes, data = tmp_plume)\n# # Check output\n# summary(lm_out)\n# lm_out$coefficients #Intercept=intercept #Minutes = SLOPE\n# # Compare with nested function output\n# filter(calcs_wslope_regression, Experiment == \"Plume-Bag\") %&gt;% filter(Site == \"VD\") %&gt;% filter(SizeFrac == \"total_euks\") %&gt;% head\n\n\n\nPlot linear regression trend\nPlot all shipboard experiments with estimated slope.\n\n\nCode\n# | fig-width: 7\n# | fig-height: 8\nshipboardregression &lt;- calcs_wslope_regression %&gt;% \n  mutate(EXP_CATEGORY = case_when(\n    EXP_TYPE == \"Bag\" ~ \"Shipboard\",\n    TRUE ~ \"IGT\"\n  )) %&gt;% \n  mutate(EXP_CATEGORY_WREP = case_when(\n    EXP_TYPE == \"Bag\" ~ \"Shipboard\",\n    TRUE ~ IGT_REP\n  )) %&gt;% \n  # Factor name order and label\n  mutate(SiteOrder = factor(Site, levels = site_ids, labels = site_fullname)) %&gt;% \n  mutate(NameOrder = factor(Name, levels = vent_ids, labels = vent_fullname)) %&gt;% \n  filter(SizeFrac == \"total_euks\") %&gt;%\n  ## Filter out IGT samples for now\n  filter(TYPE != \"IGT\") %&gt;%\n  unite(EXPERIMENT, NameOrder, EXP_CATEGORY, sep = \" \", remove = FALSE) %&gt;% \n    ggplot(aes(x = Minutes, y = FLPperEuk, \n               fill = SiteOrder, color = SiteOrder, shape = EXP_CATEGORY)) +\n    geom_abline(aes(slope = SLOPE, intercept = INTERCEPT), color = \"black\", linetype = \"dashed\", size = 1) +\n    geom_point(stat = \"identity\", \n               size = 2, aes(shape = EXP_CATEGORY, \n                             fill = SiteOrder, color = SiteOrder)) +\n    scale_shape_manual(values = c(21, 21)) +\n    scale_fill_manual(values = c(\"#E76F51\", \"#264653\")) +\n    scale_color_manual(values = c(\"#E76F51\", \"#264653\")) +\n  # scale_shape_manual(values = c(21, 21, 21, 21)) +\n  #   scale_fill_manual(values = c(\"white\", \"#264653\", \"white\", \"#E76F51\")) +\n  #   scale_color_manual(values = c(\"#264653\", \"#264653\", \"#E76F51\", \"#E76F51\")) +\n    labs(x = \"Minutes\", y = bquote(\"FLP\"~eukaryote^-1), title = \"\") +\n    facet_wrap(SiteOrder ~ EXPERIMENT) +\n    # Report r.squared\n    geom_text(aes(x = 42, y = max(FLPperEuk), label = paste(round(SLOPE, 4))), \n              vjust = 1, hjust = 0, size = 3, color = \"black\") +\n    theme_bw() + \n    theme(strip.background = element_blank(),\n          strip.text = element_text(color = \"black\", size = 7),\n                       legend.title = element_blank(),\n                       legend.position = \"right\")\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nCode\nshipboardregression\n\n\n\n\n\nData points represent the FLP per euk cells (based on total eukaryote cells counts). Y-axis represents the duration of incubation (in minutes). The dashed purple line reprents the slope and intercept of the experiment."
  },
  {
    "objectID": "grazing.html#remove-igt-tf-time-points.",
    "href": "grazing.html#remove-igt-tf-time-points.",
    "title": "Protistan grazing analysis",
    "section": "4.4 Remove IGT Tf time points.",
    "text": "4.4 Remove IGT Tf time points.\nIGT experiment results appear to have bottle effect, especially in the final time point. Additionally, due to the lack of biological replicates in the IGT experiments, technical replicates are treated as biological replicates in the regression below.\n\n\nCode\nIGT_lm_woTf &lt;- counts_flp_calcs_all %&gt;% \n  # Select only IGT experiments with total eukaryotes, remove Tf (T3)\n  filter(SizeFrac == \"total_euks\") %&gt;% \n  filter(EXP_TYPE == \"IGT\" & !(TimePoint == \"T3\")) %&gt;% \n  # Remove repeated counts. Use this in supplement\n  filter(!grepl(\"b\", Replicate_ID)) %&gt;% \n  add_column(IGT_cor = \"rm Tf\") %&gt;% \n  data.frame\n\n# Recalculate lm(), keep replicates separate\nigt_regression_noTf &lt;- calculate_lm(IGT_lm_woTf) # Recalculate\n\n\nWarning: Supplying `...` without names was deprecated in tidyr 1.0.0.\nℹ Please specify a name for each selection.\nℹ Did you want `data = c(-SAMPLE, -Site, -Experiment, -Name, -IGT_REP,\n  -SizeFrac)`?\n\n\nWarning: Supplying `...` without names was deprecated in tidyr 1.0.0.\nℹ Please specify a name for each selection.\nℹ Did you want `data = c(-SAMPLE, -Site, -Experiment, -Name, -IGT_REP,\n  -SizeFrac)`?\n\n\nJoining with `by = join_by(SAMPLE, Site, Experiment, Name, IGT_REP, SizeFrac)`\nJoining with `by = join_by(SAMPLE, Site, Experiment, Name, IGT_REP, SizeFrac)`\n\n\nPlot IGT grazing experiments with newly calculated grazing effect.\n\n\nCode\nigtregression &lt;- igt_regression_noTf %&gt;% \n  # filter(SizeFrac == \"total_euks\") %&gt;% \n  # filter(TYPE != \"IGT\") %&gt;% \n  mutate(SITE_ORDER = factor(SITE, levels = site_ids, labels = site_fullname)) %&gt;%\n  unite(EXPERIMENT, SITE, Experiment, sep = \" \", remove = FALSE) %&gt;% \n  ggplot(aes(x = Minutes, y = FLPperEuk, fill = SITE_ORDER, shape = TYPE, group = Experiment)) +\n  geom_abline(aes(slope = SLOPE, intercept = INTERCEPT), color = \"black\", linetype = \"dashed\", size = 1) +\n  geom_point(stat = \"identity\", fill = \"white\", \n             size = 3, stroke = 2, aes(shape = TYPE, color = SITE_ORDER)) +\n  scale_shape_manual(values = c(21, 21)) +\n  scale_color_manual(values = site_color) +\n  labs(x = \"Minutes\", y = bquote(\"FLP\"~eukaryote^-1), title = \"\") +\n  facet_wrap(. ~ EXPERIMENT) +\n  # Report r.squared\n  geom_text(aes(x = 5, y = max(FLPperEuk), label = paste(round(SLOPE, 4))), \n            vjust = 1, hjust = 0, size = 3) +\n  theme_bw() + \n  theme(strip.background = element_blank(),\n        strip.text = element_text(color = \"black\", size = 7),\n                     legend.title = element_blank(),\n                     legend.position = \"right\")\nigtregression\n\n\n\n\n\n\nResults are more consistent across experiments when we remove Tf from the IGT experiments\n\n\nFigure S4\n\n\nCode\n# svg(\"../../../Manuscripts_presentations_reviews/MCR-grazing-2023/svg-files-figures/figS3.svg\", h = 12, w = 7)\nshipboardregression + igtregression +\n  patchwork::plot_layout(ncol = 1, heights = c(1, 0.7)) + patchwork::plot_annotation(tag_levels = \"a\")\n\n\n\n\n\nCode\n# dev.off()\n\n\n\n\nRepeat, but include technical replicates\nAssess technical replicates for supplemental.\n\n\nCode\nIGT_lm_woTf_wb &lt;- counts_flp_calcs_all %&gt;% \n  # Select only IGT experiments with total eukaryotes, remove Tf (T3)\n  filter(SizeFrac == \"total_euks\") %&gt;% \n  filter(EXP_TYPE == \"IGT\" & !(TimePoint == \"T3\")) %&gt;% \n  # Remove repeated counts. Use this in supplement\n  # filter(!grepl(\"b\", Replicate_ID)) %&gt;% \n  add_column(IGT_cor = \"rm Tf\") %&gt;% \n  # mutate(EXP_TYPE = IGT_REP) %&gt;% \n  mutate(IGT_REP = Replicate_ID) %&gt;% \n  unite(\"Experiment\", Name, Replicate_ID, sep = \"-\", remove = FALSE) %&gt;% \n  select(-REP, everything()) %&gt;% \n  data.frame\n\n# Recalculate lm(), keep replicates separate\nigt_regression_noTf_wb &lt;- calculate_lm(IGT_lm_woTf_wb) # Recalculate\n\n\nWarning: Supplying `...` without names was deprecated in tidyr 1.0.0.\nℹ Please specify a name for each selection.\nℹ Did you want `data = c(-SAMPLE, -Site, -Experiment, -Name, -IGT_REP,\n  -SizeFrac)`?\n\n\nWarning: Supplying `...` without names was deprecated in tidyr 1.0.0.\nℹ Please specify a name for each selection.\nℹ Did you want `data = c(-SAMPLE, -Site, -Experiment, -Name, -IGT_REP,\n  -SizeFrac)`?\n\n\nJoining with `by = join_by(SAMPLE, Site, Experiment, Name, IGT_REP, SizeFrac)`\nJoining with `by = join_by(SAMPLE, Site, Experiment, Name, IGT_REP, SizeFrac)`\n\n\nPlot IGT grazing experiments with newly calculated grazing effect.\n\nFigure S9\n\n\nCode\n# svg(\"../../../Manuscripts_presentations_reviews/MCR-grazing-2023/svg-files-figures/figS9_new.svg\")\nigt_regression_noTf_wb %&gt;% \n  # filter(SizeFrac == \"total_euks\") %&gt;% \n  # filter(TYPE != \"IGT\") %&gt;% \n  # Only isolate IGT 4s, where the technical replicates were done\n  filter(grepl(\"IGT4\", IGT_REP)) %&gt;% \n  mutate(SITE_ORDER = factor(SITE, levels = site_ids, labels = site_fullname)) %&gt;%\n  unite(EXPERIMENT, SITE, Name, IGT_REP, sep = \" \", remove = FALSE) %&gt;% \n  ggplot(aes(x = Minutes, y = FLPperEuk, fill = SITE_ORDER, shape = TYPE, group = Experiment)) +\n  geom_abline(aes(slope = SLOPE, intercept = INTERCEPT), color = \"black\", linetype = \"dashed\", size = 1) +\n  geom_point(stat = \"identity\", fill = \"white\", \n             size = 3, stroke = 2, aes(shape = TYPE, color = SITE_ORDER)) +\n  scale_shape_manual(values = c(21, 21)) +\n  scale_color_manual(values = site_color) +\n  labs(x = \"Minutes\", y = bquote(\"FLP\"~eukaryote^-1), title = \"Grazing experiment regression\") +\n  facet_wrap(. ~ EXPERIMENT) +\n  # Report r.squared\n  geom_text(aes(x = 5, y = max(FLPperEuk), label = paste(round(SLOPE, 4))), \n            vjust = 1, hjust = 0, size = 3) +\n  theme_bw() + \n  theme(strip.background = element_blank(),\n        strip.text = element_text(color = \"black\", size = 7),\n                     legend.title = element_blank(),\n                     legend.position = \"right\")\n\n\n\n\n\nCode\n# dev.off()"
  },
  {
    "objectID": "grazing.html#compile-and-save-grazing-experiment-results",
    "href": "grazing.html#compile-and-save-grazing-experiment-results",
    "title": "Protistan grazing analysis",
    "section": "4.5 Compile and save grazing experiment results",
    "text": "4.5 Compile and save grazing experiment results\n\n\nCode\ncalcs_wslope_regression_update &lt;- calcs_wslope_regression %&gt;% \n  filter(TYPE != \"IGT\") %&gt;% \n  bind_rows(igt_regression_noTf %&gt;% select(-IGT_cor)) %&gt;% \n  data.frame\n\n# Factor\nvent_ids &lt;- c(\"BSW\",\"Plume\", \"LotsOShrimp\", \"Shrimpocalypse\", \n              \"ShrimpHole\", \"X18\", \"Rav2\", \"MustardStand\", \"OMT\")\nvent_fullname &lt;- c(\"Background\",\"Plume\", \"Lots 'O Shrimp\", \"Shrimpocalypse\",  \n                   \"Shrimp Hole\", \"X-18\", \"Ravelin #2\", \"Mustard Stand\", \"Old Man Tree\")\nsite_ids &lt;- c(\"VD\", \"Piccard\")\nsite_fullname &lt;- c(\"Von Damm\", \"Piccard\")\n# Factor for shipboard\ncalcs_wslope_regression_update$SiteOrder &lt;- factor(calcs_wslope_regression_update$Site, levels = site_ids, labels = site_fullname)\ncalcs_wslope_regression_update$NameOrder &lt;- factor(calcs_wslope_regression_update$Name, levels = vent_ids, labels = vent_fullname)\n\n# View(calcs_wslope_regression_update)\ncalcs_wslope_regression_update %&gt;%\n  select(SiteOrigin, SiteOrder, NameOrder, Experiment, SizeFrac, r.squared, INTERCEPT, SLOPE) %&gt;% distinct()\n\n\n   SiteOrigin SiteOrder      NameOrder          Experiment   SizeFrac\n1        Vent   Piccard Lots 'O Shrimp     LotsOShrimp-Bag total_euks\n2       Plume   Piccard          Plume           Plume-Bag total_euks\n3        Vent   Piccard Shrimpocalypse  Shrimpocalypse-Bag total_euks\n4  Background  Von Damm     Background             BSW-Bag total_euks\n5        Vent  Von Damm  Mustard Stand    MustardStand-Bag total_euks\n6       Plume  Von Damm          Plume           Plume-Bag total_euks\n7        Vent  Von Damm     Ravelin #2            Rav2-Bag total_euks\n8        Vent  Von Damm    Shrimp Hole      ShrimpHole-Bag total_euks\n9        Vent  Von Damm           X-18             X18-Bag total_euks\n10       Vent   Piccard Lots 'O Shrimp     LotsOShrimp-Bag micro_size\n11       Vent   Piccard Lots 'O Shrimp     LotsOShrimp-Bag  nano_size\n12      Plume   Piccard          Plume           Plume-Bag micro_size\n13      Plume   Piccard          Plume           Plume-Bag  nano_size\n14       Vent   Piccard Shrimpocalypse  Shrimpocalypse-Bag micro_size\n15       Vent   Piccard Shrimpocalypse  Shrimpocalypse-Bag  nano_size\n16 Background  Von Damm     Background             BSW-Bag micro_size\n17 Background  Von Damm     Background             BSW-Bag  nano_size\n18       Vent  Von Damm  Mustard Stand    MustardStand-Bag micro_size\n19       Vent  Von Damm  Mustard Stand    MustardStand-Bag  nano_size\n20      Plume  Von Damm          Plume           Plume-Bag micro_size\n21      Plume  Von Damm          Plume           Plume-Bag  nano_size\n22       Vent  Von Damm     Ravelin #2            Rav2-Bag micro_size\n23       Vent  Von Damm     Ravelin #2            Rav2-Bag  nano_size\n24       Vent  Von Damm    Shrimp Hole      ShrimpHole-Bag micro_size\n25       Vent  Von Damm    Shrimp Hole      ShrimpHole-Bag  nano_size\n26       Vent  Von Damm           X-18             X18-Bag micro_size\n27       Vent  Von Damm           X-18             X18-Bag  nano_size\n28       Vent   Piccard Shrimpocalypse Shrimpocalypse-IGT3 total_euks\n29       Vent  Von Damm   Old Man Tree            OMT-IGT4 total_euks\n30       Vent  Von Damm     Ravelin #2           Rav2-IGT4 total_euks\n31       Vent  Von Damm     Ravelin #2           Rav2-IGT5 total_euks\n     r.squared   INTERCEPT        SLOPE\n1  0.660252577  0.35170021 -0.007605829\n2  0.028109981  0.74350881  0.005362856\n3  0.134500775  0.74142021  0.015686872\n4  0.016339803  0.33810711  0.002958889\n5  0.679501856  0.53165317 -0.005445545\n6  0.152459998  0.45659816  0.005274231\n7  0.003588551  0.96801815  0.003470217\n8  0.002436342  0.89841555 -0.001967253\n9  0.007917377  0.39372646  0.001744429\n10 0.000000000  0.50000000           NA\n11 0.723950257  0.34152209 -0.007467037\n12 0.031027392  1.84477124 -0.021241830\n13 0.134388231  0.56572102  0.009146535\n14 0.016488447  1.89710611 -0.016881029\n15 0.219942841  0.57936763  0.022967165\n16 0.289513467  1.45183824 -0.027181373\n17 0.015152403  0.29347056  0.002856863\n18 0.000000000  0.00000000           NA\n19 0.679997859  0.52917792 -0.004985856\n20 0.098467998  0.78410898  0.019766939\n21 0.019373495  0.45137023  0.002263909\n22 0.696359782 -1.71474878  0.394651540\n23 0.001444937  0.93924980  0.002011385\n24 0.233424455  2.28754579 -0.092124542\n25 0.002819273  0.93709575  0.002424242\n26 0.302757291  0.67091295  0.036093418\n27 0.018916716  0.30417816  0.002196051\n28 0.661389551  0.02153110  0.016794258\n29 0.294853437  0.23949718  0.003764672\n30 0.990856592  0.06472882  0.021062665\n31 0.550820859  0.43701267 -0.002850877\n\n\nCode\n# write.csv(calcs_wslope_regression_update, file = \"output-data/estimated-slopes-grazingexp.csv\")"
  },
  {
    "objectID": "grazing.html#bag-grazing-experiment-controls",
    "href": "grazing.html#bag-grazing-experiment-controls",
    "title": "Protistan grazing analysis",
    "section": "5.1 Bag grazing experiment controls",
    "text": "5.1 Bag grazing experiment controls\nOption to plot averages. However, consistency between Replicate 1 and 2 was not always great. So plotting individually is best to show that the FLP do not disappear due to anomalous reasons.\n\n\nCode\n# bag_ctrls &lt;- dtaf_avg %&gt;% \n#   filter(Site != \"IGT\") %&gt;% \n#   ggplot(aes(x = TimePoint, y = Avg_cellsperml, fill = Name, shape = Site)) +\n#   geom_errorbar(aes(ymin = MIN, ymax = MAX), width = 0.1) +\n#   geom_rect(data = filter(dtaf_avg, TimePoint == \"T0\", Site != \"IGT\"), aes(\n#                                            ymin = (Avg_cellsperml-(0.15*Avg_cellsperml)),\n#                                            ymax = (Avg_cellsperml+(0.15*Avg_cellsperml))), color = NA, alpha = 0.4, xmin = 0, xmax = 6, fill = \"black\") +\n#   geom_line(aes(group = Name)) +\n#   geom_point(stat = \"identity\", aes(shape = Site, fill = Name), size = 2) +\n#   # scale_fill_manual(values = c(\"black\",\"#9970ab\", \"#5aae61\")) +\n#   facet_wrap(Name ~ Site) +\n#   scale_y_log10(labels = scientific_10) +\n#   theme_bw() + theme(strip.background = element_blank(), \n#                           legend.title = element_blank(),\n#                      axis.text = element_text(size = 10, color = \"black\"),\n#                           title = element_text(size = 10, face = \"bold\"),\n#                           axis.title = element_text(size = 9)) +\n#   labs(title = \"FLP counts for controls\", y = bquote(\"Log FLP \"~mL^-1), x = \"Time point\")\n# bag_ctrls\n\n\n\n\nCode\n# View(dtaf)\nship_ctrls_reps &lt;- dtaf %&gt;% \n  filter(Site != \"IGT\") %&gt;% \n  ggplot(aes(x = TimePoint, y = Cells.ml, fill = Name, shape = Replicate)) +\n  geom_rect(data = filter(dtaf, TimePoint == \"T0\", Site != \"IGT\"), aes(\n                                           ymin = (Cells.ml-(0.15*Cells.ml)),\n                                           ymax = (Cells.ml+(0.15*Cells.ml))), color = NA, alpha = 0.4, xmin = 0, xmax = 6, fill = \"black\") +\n  geom_line(aes(group = Replicate)) +\n  geom_point(stat = \"identity\", aes(shape = Replicate), size = 2) +\n  # scale_fill_manual(values = c(\"black\",\"#9970ab\", \"#5aae61\")) +\n  facet_wrap(Name ~ Site) +\n  scale_y_log10(labels = scientific_10) +\n  theme_bw() + theme(strip.background = element_blank(), \n                          legend.title = element_blank(),\n                     axis.text = element_text(size = 10, color = \"black\"),\n                          title = element_text(size = 10, face = \"bold\"),\n                          axis.title = element_text(size = 9)) +\n  labs(title = \"FLP counts for controls\", y = bquote(\"Log FLP \"~mL^-1), x = \"Time point\")\nship_ctrls_reps"
  },
  {
    "objectID": "grazing.html#igt-experiment-controls",
    "href": "grazing.html#igt-experiment-controls",
    "title": "Protistan grazing analysis",
    "section": "5.2 IGT experiment controls",
    "text": "5.2 IGT experiment controls\nRepeat for IGT experiments.\n\n\nCode\nigt_ctrl_reps &lt;- dtaf %&gt;% \n  filter(Site == \"IGT\") %&gt;% \n  ggplot(aes(x = TimePoint, y = Cells.ml, shape = Replicate)) +\n    geom_rect(data = filter(dtaf, TimePoint == \"T0\", Site == \"IGT\"), aes(\n                                           ymin = (Cells.ml-(0.15*Cells.ml)),\n                                           ymax = (Cells.ml+(0.15*Cells.ml))), color = NA, alpha = 0.4, xmin = 0, xmax = 6, fill = \"black\") +\n  geom_line(aes(group = Replicate)) +\n  geom_point(stat = \"identity\", aes(shape = Replicate), size = 2) +\n  facet_wrap(Name ~ ORIG_ID) +\n  scale_y_log10(labels = scientific_10) +\n  theme_bw() + theme(strip.background = element_blank(), \n                          legend.title = element_blank(),\n                     axis.text = element_text(size = 10, color = \"black\"),\n                          title = element_text(size = 10, face = \"bold\"),\n                          axis.title = element_text(size = 9)) +\n  labs(title = \"FLP counts for controls\", y = bquote(\"Log FLP \"~mL^-1), x = \"Time point\")\nigt_ctrl_reps\n\n\n\n\n\n\nFigure S6\n\n\nCode\n# svg(\"../../../Manuscripts_presentations_reviews/MCR-grazing-2023/svg-files-figures/figS6_1.svg\", w = 9, h = 7)\nship_ctrls_reps\n\n\n\n\n\nCode\n# dev.off()\n\n# svg(\"../../../Manuscripts_presentations_reviews/MCR-grazing-2023/svg-files-figures/figS6_2.svg\", w = 7, h = 5)\nigt_ctrl_reps\n\n\n\n\n\nCode\n# dev.off()"
  },
  {
    "objectID": "grazing.html#plot-flpgrazer-minute",
    "href": "grazing.html#plot-flpgrazer-minute",
    "title": "Protistan grazing analysis",
    "section": "6.1 Plot FLP/grazer /minute",
    "text": "6.1 Plot FLP/grazer /minute\n\n\nCode\n# svg(\"\", h =, w = )\ngrazing_min_plot &lt;- table_grazerate_wflp %&gt;% \n  mutate(EXP_CATEGORY = case_when(\n    EXP_TYPE == \"Bag\" ~ \"Shipboard\",\n    TRUE ~ \"IGT\"\n  )) %&gt;% \n  mutate(EXP_CATEGORY_WREP = case_when(\n    EXP_TYPE == \"Bag\" ~ \"Shipboard\",\n    TRUE ~ IGT_REP\n  )) %&gt;% \n  unite(\"SITE_TYPE\", FIELD, EXP_CATEGORY, sep = \"-\", remove = FALSE) %&gt;%\n  ggplot(aes(y = GRAZE_RATE, x = VENTORDER, shape = SITE_TYPE, \n             fill = SITE_TYPE, color = SITE_TYPE)) +\n  geom_jitter(stat = \"identity\", aes(shape = SITE_TYPE, \n                                     fill = SITE_TYPE, color = SITE_TYPE),\n              stroke = 2, size = 3, width = 0.25) +\n    scale_shape_manual(values = c(21, 21, 21, 21)) +\n    scale_fill_manual(values = c(\"white\", \"#264653\", \"white\", \"#E76F51\")) +\n    scale_color_manual(values = c(\"#264653\", \"#264653\", \"#E76F51\", \"#E76F51\")) +\n  facet_grid(.~FIELDORDER, space = \"free\", scales = \"free\") +\n  # coord_flip() +\n    theme_minimal() +\n    theme(panel.grid.major = element_line(), panel.grid.minor = element_blank(),\n           panel.background = element_blank(), \n           axis.line = element_line(colour = \"black\"), \n           axis.text.x = element_text(color=\"black\", size = 13, \n                                      angle = 45, hjust = 1, vjust = 1), \n           axis.text.y = element_text(color=\"black\", size = 13),\n           axis.title =element_text(color=\"black\", size = 13),\n           axis.ticks = element_line(),\n           strip.text =element_blank(), legend.title = element_blank(),\n          legend.position = \"top\") +\n    labs(x = \"\", y = bquote(\"Average FLP \" ~grazer^-1 ~min^-1))\n# dev.off()\ngrazing_min_plot\n\n\n\n\n\n\nTable 1\nCreate table with all base experiment results. Including, grazing rate derived from slope (and corrected), number of experiments, replicates, and prok and euk counts.\nFor IGT experiments, or experiments where in situ prok counts were not obtained, the average in situ prok count was used.\n\n\nCode\n# Subset the average in situ prok cells/ml for non-background samples\ntmp &lt;- filter(insitu_proks, Name != \"BSW\", Name != \"Plume\") %&gt;% select(MEAN)\navg_insitu &lt;- mean(tmp$MEAN)\n\n# View(table_grazerate_wflp)\n# View(euk_prok_counts)\n\ntable_grazerate_wflp_wprok_weuk &lt;- table_grazerate_wflp %&gt;% \n  select(Experiment_rep, FIELD, Name, SiteOrder, NameOrder, FLUID_ORIGIN, CRUISE_SAMPLE, RATE, RATE_minute = GRAZE_RATE, FLP_ml, TimePoints, EXP_REPS, EXP_VOL, CTRL_REPS, CTRL_VOL) %&gt;% \n  full_join(euk_prok_counts, join_by(Experiment_rep == Experiment_rep, Name == Name, FIELD == Site)) %&gt;% \n  mutate(PROK_ml = ifelse(is.na(PROK_ml), avg_insitu, PROK_ml))\n\n# table_grazerate_wflp_wprok_weuk\n# names(table_grazerate_wflp_wprok_weuk)\n\n\nDescription of variables above:\n\nFIELD - vent location\nNAME - name of vent site, or plume/background\nEXP - experiment type, bag or IGT\nSAMPLE - vent site\nRATE_minute = GRAZE_RATE - FLPs per grazer per minute (SLOPE of best fitline)\nFLP_ml - FLP concentration at T0\nProk_ml, sem - concentration and standard mean error of concentration of prokaryotes\nEuk_ml, sem - concentration and standard mean error of concentration of eukaryotes."
  },
  {
    "objectID": "grazing.html#carbon-biomass",
    "href": "grazing.html#carbon-biomass",
    "title": "Protistan grazing analysis",
    "section": "7.1 Carbon biomass",
    "text": "7.1 Carbon biomass\nReferences for estimating biovolume Pernice, M.C., Forn, I., Gomes, A., Lara, E., Alonso-Sáez, L., Arrieta, J.M., et al. (2015) Global abundance of planktonic heterotrophic protists in the deep ocean. ISME J 9: 782–792.\n\n\nCode\n# Import manual biovolume measurements\nbiov <- read.delim(\"input-data/biovol-euk-12-10-2020.txt\")\nhead(biov)\n\n\n  EXP VENT_BSW      h      d\n1 IGT     vent 30.077 25.764\n2 IGT     vent 89.582 10.000\n3 Bag      BSW 14.595  8.036\n4 Bag      BSW 12.480  8.982\n5 Bag     vent  9.218  3.120\n6 IGT     vent 17.255  9.986\n\n\nCode\n# Calculate volume\nbiov_calc <- biov %>% \n  mutate(SizeFrac = case_when(\n    h >= 20 ~ \"micro\",\n    TRUE ~ \"nano\")) %>% \n  mutate(Volume = ((pi/6) * (d^2) * d)) %>% # Calculate volume (um cubed) # Hillebrand et al. 1999\n  mutate(pgC_cell = (0.216 * (Volume^0.939))) %>% # Calculate Cell biomass in pg C per cell # Menden-Deuer and Lessard 2000\n  data.frame\n# View(biov_calc)\nbiov_calc\n\n\n   EXP VENT_BSW      h      d SizeFrac     Volume     pgC_cell\n1  IGT     vent 30.077 25.764    micro 8954.44130 1110.2426245\n2  IGT     vent 89.582 10.000    micro  523.59878   77.1957618\n3  Bag      BSW 14.595  8.036     nano  271.71800   41.6956679\n4  Bag      BSW 12.480  8.982     nano  379.41786   57.0486460\n5  Bag     vent  9.218  3.120     nano   15.90239    2.9015292\n6  IGT     vent 17.255  9.986     nano  521.40274   76.8917043\n7  Bag     vent 41.153 21.000    micro 4849.04826  624.1445904\n8  IGT     vent 10.282  4.136     nano   37.04591    6.4194942\n9  IGT     vent 29.776 25.852    micro 9046.50993 1120.9583343\n10 IGT     vent 10.991  4.000     nano   33.51032    5.8424695\n11 Bag     vent 14.333  2.000     nano    4.18879    0.8290772\n12 Bag     vent 36.164  3.000    micro   14.13717    2.5980292\n13 Bag      BSW 16.206 14.924     nano 1740.42111  238.4669404\n14 Bag      BSW  7.000  7.000     nano  179.59438   28.2640658\n15 Bag     vent 10.069  5.000     nano   65.44985   10.9544849\n\n\nCode\nmin(biov_calc$Volume)\n\n\n[1] 4.18879\n\n\nCode\nmax(biov_calc$Volume)\n\n\n[1] 9046.51\n\n\nCode\nmean((biov_calc %>% filter(SizeFrac == \"nano\"))$Volume)\n\n\n[1] 324.8651\n\n\nCode\nmean((biov_calc %>% filter(SizeFrac == \"micro\"))$Volume)\n\n\n[1] 4677.547\n\n\nCode\nmean((biov_calc %>% filter(SizeFrac == \"nano\"))$pgC_cell)\n\n\n[1] 46.93141\n\n\nCode\nmean((biov_calc %>% filter(SizeFrac == \"micro\"))$pgC_cell)\n\n\n[1] 587.0279\n\n\n\nVolume is reported as um^3\n\n\n\nCode\n# Volume by experiment type\nbiov_calc %>% \n  group_by(EXP) %>% summarise(VOL = mean(Volume), C = mean(pgC_cell))\n\n\n# A tibble: 2 × 3\n  EXP     VOL     C\n  <chr> <dbl> <dbl>\n1 Bag    836.  112.\n2 IGT   3186.  400.\n\n\nCode\n# Volume by euk size\nbiov_calc %>% \n  group_by(SizeFrac) %>% summarise(VOL = mean(Volume), C = mean(pgC_cell))\n\n\n# A tibble: 2 × 3\n  SizeFrac   VOL     C\n  <chr>    <dbl> <dbl>\n1 micro    4678. 587. \n2 nano      325.  46.9\n\n\nCode\n# Volume by site\nbiov_calc %>% \n  group_by(VENT_BSW) %>% summarise(VOL = mean(Volume), C = mean(pgC_cell))\n\n\n# A tibble: 2 × 3\n  VENT_BSW   VOL     C\n  <chr>    <dbl> <dbl>\n1 BSW       643.  91.4\n2 vent     2188. 276. \n\n\nCode\n# head(biov_calc)\neuk_vol <- mean(biov_calc$Volume);euk_vol # in um^3\n\n\n[1] 1775.759\n\n\nCode\neuk_carbon <- mean(biov_calc$pgC_cell); euk_carbon # in pg C per cell\n\n\n[1] 226.9636\n\n\nCode\neuk_carbon_min <- min(biov_calc$pgC_cell); euk_carbon_min\n\n\n[1] 0.8290772\n\n\nCode\neuk_carbon_max <- max(biov_calc$pgC_cell); euk_carbon_max\n\n\n[1] 1120.958\n\n\nCode\n# euk_carbon\n\n\nAvg euk biomass pg C per individual cell == {r}euk_carbon"
  },
  {
    "objectID": "grazing.html#compare-carbon-biomass-with-literature",
    "href": "grazing.html#compare-carbon-biomass-with-literature",
    "title": "Protistan grazing analysis",
    "section": "7.2 Compare carbon biomass with literature",
    "text": "7.2 Compare carbon biomass with literature\nLIKELY REMOVE ALL OF THIS - THIS IS CIRCULAR MATH!\nCompare with Menden-Deuer and Lessard 2000, Table 2 - using only the heterotrophic species measured. Based on Table 2, the min volume was 4745 and the maximum was 1.2 x10^7 µm^3. Carbon content was measured at pg per cell, this was 469.48-35,339 pg per cell.\nImport the heterotroph species volume and carbon content to compare to my measured values.\n\n\nCode\n# Hu-measured\nrange(biov_calc$Volume)\n\n\n[1]    4.18879 9046.50993\n\n\nCode\nrange(biov_calc$pgC_cell)\n\n\n[1]    0.8290772 1120.9583343\n\n\nCode\nc_prev <- read.delim(\"input-data/md-lessard-2000.txt\") # Table 2, heterotrophs only\n# c_prev\n# combine and plot\ncarbon_compare <- c_prev %>% \n  add_column(source = \"Menden-Deuer Lessard\") %>% \n  select(source, Volume = vol, pgC_cell) %>% \n  rbind(biov_calc %>% add_column(source = \"MCR\") %>% select(source, Volume, pgC_cell)) %>% \n    ggplot(aes(x = Volume, y = pgC_cell, fill = source)) +\n      geom_point(aes(fill = source), shape = 23, color = \"black\", size = 3) +\n      scale_y_log10() + scale_x_log10() +\n      labs(title = \"Compare literature to measured cell volume & C content\",\n           x = bquote(\"Volume\" ~µm^-3),\n           y = bquote(\"pg C\" ~cell^-1)) +\n      theme_bw() + theme(legend.title = element_blank(),\n                         axis.title = element_text(size = 14),\n                         axis.text = element_text(size = 14),\n                         legend.text = element_text(size = 14))\n\ncarbon_compare\n\n\n\n\n\nCode\neuk_carbon_lit_mean <- mean(c_prev$pgC_cell)\neuk_carbon_lit_min <- min(c_prev$pgC_cell)\neuk_carbon_lit_max <- max(c_prev$pgC_cell)\n\n\nUpon comparison, the measured carbon content was much lower from the grazing experiments. This makes sense, as I am looking at preserved specimen and a smaller total number of cells. AND the deep-sea protist cell sizes may be smaller overall.\nFind lowest estimates or protist carbon, benthic estimates, and others? How does it compare to my measurements?\n\nCarbon biomass for prokaryotes\nBelow adding in biomass estimates from prokaryotes and protists.\n\n\nCode\nbac_carbon_ug <- (86)*(1.00E-9) # From Derived from Morono et al. 2011 \n# bac_carbon_ug\nbac_carbon_ug_2 <- (173)*(1.00E-9) # Derived from McNichol et al. 2018; LOFERER-KRO ̈ ßBACHER, J. KLIMA & R. PSENNER 1998\n# table_wcalcs\n\n\nAmend all to table Incorporate calculations that include biomass of population and ug C consumed. For rate measurements, only incorporate the Morono et al. 2011 biomass for prokaryotes. This way it is on the lower end and is comparable to Gorda Ridge work.\n\n\nCode\nbsw <- c(\"Plume\", \"Background\")\n\ntable_wcalcs_biomass <- table_wcalcs %>% \n  add_column(euk_C_ug_Hu = (euk_carbon / (1.00E+06))) %>% # Convert to ug from pg\n  add_column(euk_C_ug_lit = (euk_carbon_lit_mean / (1.00E+06))) %>% # literature\n  add_column(bac_C_ug = bac_carbon_ug) %>% \n  add_column(bac_C_ug_2 = bac_carbon_ug_2) %>%\n  # Grazing rate in ug C per bac per day\n  mutate(RATE_ugCbac_pergrazer_perday = (RATE_hr * 24 * bac_C_ug), # Grazing rate as ug C per grazer per day\n         # % of cell carbon per day\n         SPEC_INGESTION_RATE = (RATE_ugCbac_pergrazer_perday / euk_C_ug_Hu),\n         SPEC_INGESTION_RATE_lit = (RATE_ugCbac_pergrazer_perday / euk_C_ug_lit),\n         Prok_biomass = PROK_ml * bac_carbon_ug,\n         Euk_biomass_Hu = EUK_ml * euk_C_ug_Hu,\n         Euk_biomass_lit = EUK_ml * euk_C_ug_lit,\n         Prok_biomass_L = PROK_ml * bac_carbon_ug * 1000,\n         Euk_biomass_Hu_L = EUK_ml * euk_C_ug_Hu * 1000,\n         Euk_biomass_lit_L = EUK_ml * euk_C_ug_lit * 1000,\n         # Repeat with SEM values\n         Prok_biomass_sem = PROK_sem * bac_carbon_ug,\n         Euk_biomass_Hu_sem = EUK_sem * euk_C_ug_Hu,\n         Euk_biomass_lit_sem = EUK_sem * euk_C_ug_lit,\n         Prok_biomass_sem_L = PROK_sem * (bac_carbon_ug* 1000),\n         Euk_biomass_Hu_sem_L = EUK_sem * (euk_C_ug_Hu * 1000),\n         Euk_biomass_lit_sem_L = EUK_sem * (euk_C_ug_lit * 1000)) %>% \n  type.convert(as.is = TRUE) %>%\n  mutate(detected = case_when(\n    RATE_min < 0 ~ \"Not detected\",\n    TRUE ~ \"Detected\")) %>% \n  mutate(type = case_when(\n    NAME %in% bsw ~ NAME,\n    TRUE ~ paste(\"Vent\", EXP, sep=\"-\")\n  )) %>% \n  mutate(GRAZE_RATE = case_when(\n    RATE_min < 0 ~ 0,\n    TRUE ~ RATE_min\n  )) %>% \n  mutate(type_site = case_when(\n    NAME %in% bsw ~ NAME,\n    TRUE ~ \"Vent\"\n  )) %>%\n  data.frame\n# View(table_wcalcs_biomass)\n\n\n\nVolume is reported as um^3\n\n\nGrazing rate column == FLP per minute consumed\nGrazing effect hr == cells per ml per hr"
  },
  {
    "objectID": "grazing.html#amend-table-with-bounded-carbon-estimates",
    "href": "grazing.html#amend-table-with-bounded-carbon-estimates",
    "title": "Protistan grazing analysis",
    "section": "7.3 Amend table with ‘bounded’ carbon estimates",
    "text": "7.3 Amend table with ‘bounded’ carbon estimates\nAlso make a “bounded” table that demonstrates the ug C consumed in the context of McNichol et al.\n\n\nCode\n# G = number of cells grazed during experiment duration\ntable_wcalcs_biomass_bounded <- table_wcalcs_biomass %>% \n  add_column(fgC_cell = 86) %>% # Add in Morono et al. 2011 value\n  mutate(\n    # cells_consumed_perday = (G / 1), # Rate of cells consumed * in situ prok, per day\n    fgC_ml_perday = (GRAZING_EFFECT_day * fgC_cell), # Convert cell amount to fg C\n    ugC_L_perday = (fgC_ml_perday * (1e-09) * 1000), # Convert to ug C per L\n    lower_mcnichol = 100*(ugC_L_perday / 17.3),\n    upper_mcnichol = 100*(ugC_L_perday / 321.4)\n  ) %>% \n  data.frame\n\n\n\n\nCode\n# head(table_wcalcs_biomass_bounded)\n# View(table_wcalcs_biomass_bounded)\n# write_delim(table_wcalcs_biomass_bounded, file = \"output-data/table-wcalc.txt\", delim = \"\\t\")"
  },
  {
    "objectID": "grazing.html#function-to-plot-grazing-results",
    "href": "grazing.html#function-to-plot-grazing-results",
    "title": "Protistan grazing analysis",
    "section": "12.1 Function to plot grazing results",
    "text": "12.1 Function to plot grazing results\n\n\nCode\nconc_rate_plot_mcr <- function(df, var, sem){\n  df %>%\n    filter(Variable == var) %>%\n    filter(SEM_variable == sem) %>%\n    ggplot(aes(y = Value, x = NAME_ORDER, shape = EXP, fill = FIELD)) +\n    geom_errorbar(aes(ymax = (Value + SEM), ymin = (Value - SEM)),\n                  width = 0.2, position = position_dodge(width = 0.4)) +\n    geom_point(stat = \"identity\", aes(shape = EXP, fill = FIELD),\n               color = \"black\", size = 3, position = position_dodge(width = 0.4)) +\n    scale_shape_manual(values = c(21, 23)) +\n    scale_fill_manual(values = c(\"#de2d26\", \"#1c9099\")) +\n    facet_wrap(VARIABLE_ORDER ~ ., scales = \"free\",\n               strip.position = c(\"left\"), labeller = label_parsed) +\n    scale_y_log10() +\n    # scale_y_log10(labels = function(x) format(x, scientific = TRUE)) +\n    theme_minimal() +\n    theme(panel.grid.major = element_line(), panel.grid.minor = element_blank(),\n          panel.background = element_blank(),\n          axis.line = element_line(colour = \"black\"),\n          axis.text.x = element_text(color=\"black\", size = 11,\n                                     angle = 45, hjust = 1, vjust = 1),\n          axis.text.y = element_text(color=\"black\", size = 11),\n          axis.title =element_text(color=\"black\", size = 14),\n          axis.ticks = element_line(),\n          legend.title = element_blank(),\n          strip.placement = \"outside\",\n          strip.text.y = element_text(color=\"black\", size = 11),\n          strip.text.x = element_blank())+\n    guides(fill = guide_legend(override.aes = list(shape = c(21))),\n           shape = guide_legend(override.aes = list(fill = \"black\"))) +\n    labs(x = \"\", y = \"\")\n}\n\n\n\n\nCode\n# conc_rate_plot_mcr(biomass_rate_plot, \"PROK_ml\", \"PROK_sem\")\n\n# conc_rate_plot_mcr(biomass_rate_plot, \"EUK_ml\", \"EUK_sem\")\n\n# conc_rate_plot_mcr(biomass_rate_plot, \"Prok_biomass_L\", \"Prok_biomass_sem_L\")\n\n# conc_rate_plot_mcr(biomass_rate_plot, \"Euk_biomass_Hu_L\", \"Euk_biomass_Hu_sem_L\")\n\n\n\n\nCode\nbiomass_rate_plot %>% \n    filter(Variable == \"GRAZING_EFFECT_hr\") %>%\n    filter(SEM_variable == \"GRAZING_EFFECT_hr_min\" | SEM_variable == \"GRAZING_EFFECT_hr_max\") %>% \n    pivot_wider(names_from = SEM_variable, values_from = SEM) %>%\n    mutate(NAME_ORDER = factor(NAME, levels = vent_fullname)) %>% \n    mutate(FIELD_ORDER = factor(FIELD, levels = site_fullname)) %>% head\n\n\n# A tibble: 6 × 12\n  FIELD  NAME  EXP   SAMPLE type  Varia…¹  Value NAME_…² VARIA…³ GRAZI…⁴ GRAZI…⁵\n  <chr>  <chr> <chr> <chr>  <chr> <chr>    <dbl> <fct>   <fct>     <dbl>   <dbl>\n1 Von D… Back… Bag   VD-BSW Back… GRAZIN… 1.27e2 Backgr… Cells~…   157.     96.8\n2 Von D… Plume Bag   VD-Pl… Plume GRAZIN… 2.40e1 Plume   Cells~…    34.2    13.8\n3 Picca… Plume Bag   Picca… Plume GRAZIN… 4.43e1 Plume   Cells~…    53.6    34.9\n4 Picca… Shri… Bag   Picca… Vent… GRAZIN… 6.01e3 Shrimp… Cells~…    NA      NA  \n5 Picca… Shri… IGT   Picca… Vent… GRAZIN… 2.04e4 Shrimp… Cells~… 23570.  17285. \n6 Picca… Lots… Bag   Picca… Vent… GRAZIN… 0      Lots '… Cells~…    NA      NA  \n# … with 1 more variable: FIELD_ORDER <fct>, and abbreviated variable names\n#   ¹​Variable, ²​NAME_ORDER, ³​VARIABLE_ORDER, ⁴​GRAZING_EFFECT_hr_max,\n#   ⁵​GRAZING_EFFECT_hr_min\n\n\n\n\nCode\n# scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +\n# head(biomass_rate_plot)\n# unique(biomass_rate_plot$FIELD)\ngrazing_rate <- biomass_rate_plot %>% \n  type.convert(as.is = TRUE) %>%\n    filter(Variable == \"GRAZING_EFFECT_hr\") %>%\n    filter(SEM_variable == \"GRAZING_EFFECT_hr_min\" | SEM_variable == \"GRAZING_EFFECT_hr_max\") %>% \n    pivot_wider(names_from = SEM_variable, values_from = SEM) %>%\n    mutate(NAME_ORDER = factor(NAME, levels = vent_fullname)) %>% \n    mutate(FIELD_ORDER = factor(FIELD, levels = site_fullname)) %>% \n    ggplot(aes(y = Value, x = NAME_ORDER, shape = EXP, fill = FIELD_ORDER)) +\n    geom_errorbar(aes(ymax = (GRAZING_EFFECT_hr_max), ymin = (GRAZING_EFFECT_hr_min)), \n                  width = 0.2, position = position_dodge(width = 0.4)) +\n    geom_point(stat = \"identity\", aes(shape = EXP, fill = FIELD_ORDER),\n               color = \"black\", size = 3, position = position_dodge(width = 0.4)) +\n    scale_shape_manual(values = c(21, 24)) +\n    scale_fill_manual(values = site_color) +\n    facet_grid(.~FIELD_ORDER, space = \"free\", scales = \"free\") +\n    # facet_wrap(. ~ FIELD_ORDER, scales = \"free\", \n    #            labeller = label_parsed) +\n    theme_minimal() + \n    # coord_flip() +\n    theme(panel.grid.major = element_line(), panel.grid.minor = element_blank(),\n          panel.background = element_blank(), \n          axis.line = element_line(colour = \"black\"), \n          axis.text.x = element_text(color=\"black\", size = 12, \n                                     angle = 45, hjust = 1, vjust = 1), \n          axis.text.y = element_text(color=\"black\", size = 12),\n          axis.title =element_text(color=\"black\", size = 12),\n          axis.ticks = element_line(),\n          legend.title = element_blank(),\n          strip.placement = \"outside\",\n          strip.text.y = element_text(color=\"black\", size = 12),\n          strip.text.x = element_blank()) +\n    guides(fill = guide_legend(override.aes = list(shape = c(21))),\n           shape = guide_legend(override.aes = list(fill = \"black\"))) +\n    labs(x = \"\", y = bquote(\"Cells consumed \" ~ml^-1 ~hr^-1))\n##\ngrazing_rate + scale_y_log10(limits = c(1,1e4))\n\n\nWarning: Transformation introduced infinite values in continuous y-axis\nTransformation introduced infinite values in continuous y-axis\nTransformation introduced infinite values in continuous y-axis\nTransformation introduced infinite values in continuous y-axis\n\n\nWarning: Removed 1 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "grazing.html#log-scale-y-axis",
    "href": "grazing.html#log-scale-y-axis",
    "title": "Protistan grazing analysis",
    "section": "10.2 Log scale y axis",
    "text": "10.2 Log scale y axis"
  },
  {
    "objectID": "grazing.html#combine-gr-and-mcr-data",
    "href": "grazing.html#combine-gr-and-mcr-data",
    "title": "Protistan grazing analysis",
    "section": "14.1 Combine GR and MCR data",
    "text": "14.1 Combine GR and MCR data\n\n\nCode\nall_vents &lt;- mcr_graze %&gt;%\n  type.convert(as.is = TRUE) %&gt;%\n  select(FIELD, NAME, SAMPLE, EXP, PROK_ml, EUK_ml, GRAZING_EFFECT_hr, GRAZING_EFFECT_hr_min, GRAZING_EFFECT_hr_max, BAC_TURNOVER_PERC) %&gt;% \n  rbind(gr %&gt;%\n          add_column(FIELD = \"Gorda Ridge\") %&gt;% \n          add_column(EUK_ml = NA) %&gt;% \n          separate(SAMPLE, c(\"SAMPLE\", \"NAME\"), sep = \"-\") %&gt;% \n          select(FIELD, NAME, SAMPLE, EXP = Bottle, PROK_ml = prok_avg, EUK_ml, GRAZING_EFFECT_hr = GrazingRate_hr, GRAZING_EFFECT_hr_min = GrazingRate_hr_min, GRAZING_EFFECT_hr_max = GrazingRate_hr_max, BAC_TURNOVER_PERC = Prok_turnover)) %&gt;% \n  left_join(temps) %&gt;% \n  mutate(SAMPLE_TYPE = case_when(\n    grepl(\"BSW\", NAME) ~ \"Background\",\n    grepl(\"Near vent BW\", NAME) ~ \"Background\",\n    grepl(\"Background\", NAME) ~ \"Background\", \n    grepl(\"Plume\", NAME) ~ \"Background\",\n    TRUE ~ \"Vent\"\n  ))\n\n\nJoining with `by = join_by(NAME, SAMPLE)`\n\n\nWarning in left_join(., temps): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 5 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nCode\n# View(all_vents)\n# all_vents\n# write_delim(all_vents, file = \"output-data/grazing-cellcounts-GR_MCR.txt\", delim = \"\\t\")"
  },
  {
    "objectID": "grazing.html#plot-combined-results",
    "href": "grazing.html#plot-combined-results",
    "title": "Protistan grazing analysis",
    "section": "14.2 Plot combined results",
    "text": "14.2 Plot combined results\n\n\nCode\n# head(all_vents)\nallrates &lt;- all_vents %&gt;% \n  mutate(EXPERIMENTTYPE = case_when(\n    EXP == \"IGT\" ~ \"IGT\",\n    TRUE ~ \"Shipboard\"\n  )) %&gt;% \n  select(EXPERIMENTTYPE, FIELD, NAME, SAMPLE, EXP, SAMPLE_TYPE, starts_with(\"GRAZING_EFFECT_\")) %&gt;% \n  distinct() %&gt;% \n    ggplot(aes(y = GRAZING_EFFECT_hr, x = NAME, color = FIELD, shape = EXPERIMENTTYPE)) +\n    geom_errorbar(aes(ymax = (GRAZING_EFFECT_hr_max), ymin = (GRAZING_EFFECT_hr_min)), \n                  width = 0.2, position = position_dodge(width = 0.4), color = \"black\") +\n    geom_point(stat = \"identity\", aes(color = FIELD, shape = EXPERIMENTTYPE),\n               size = 3, stroke = 2, position = position_dodge(width = 0.4)) +\n    scale_shape_manual(values = c(1, 19)) +\n    scale_color_manual(values = c(\"#addd8e\", \"#264653\", \"#E76F51\")) +\n    facet_grid(. ~ SAMPLE_TYPE, scales = \"free\", space = \"free\") +\n    theme_minimal() +\n    theme(panel.grid.major = element_line(), panel.grid.minor = element_blank(),\n          panel.background = element_blank(), \n          axis.line = element_line(colour = \"black\"), \n          axis.text.x = element_text(color=\"black\", size = 12, \n                                     angle = 45, hjust = 1, vjust = 1), \n          axis.text.y = element_text(color=\"black\", size = 12),\n          axis.title =element_text(color=\"black\", size = 12),\n          axis.ticks = element_line(),\n          legend.title = element_blank(),\n          strip.placement = \"outside\",\n          strip.text.y = element_text(color=\"black\", size = 12),\n          strip.text.x = element_blank())+\n    guides(fill = guide_legend(override.aes = list(shape = c(21))),\n           shape = guide_legend(override.aes = list(fill = \"black\"))) +\n    labs(x = \"\", y = bquote(\"cells\"~ml^-1~hr^-1))\n#\n # scale_fill_manual(values = c(\"#E76F51\", \"#264653\")) +\n  # scale_color_manual(values = c(\"#E76F51\", \"#264653\")) +\n\n\nAdd Gorda Ridge comparison to supplementary?\n\nFigure S8\n\n\nCode\n# allrates\n# svg(\"../../../Manuscripts_presentations_reviews/MCR-grazing-2023/svg-files-figures/figS7.svg\", h = 4, w = 6)\nallrates + scale_y_log10()\n\n\nWarning: Transformation introduced infinite values in continuous y-axis\nTransformation introduced infinite values in continuous y-axis\nTransformation introduced infinite values in continuous y-axis\nTransformation introduced infinite values in continuous y-axis\n\n\n\n\n\nCode\n# dev.off()\n# allrates + scale_y_continuous(limits = c(0,1000))\n\n\n\n\nRemove undetected grazing rate\nRepeat grazing rate plot, but removed undetectable\n\n\nCode\n# unique(all_vents$GRAZING_EFFECT_hr)\nallrates_nonzero &lt;- all_vents %&gt;% \n  filter(GRAZING_EFFECT_hr &gt; 0) %&gt;% \n  select(FIELD, NAME, SAMPLE, EXP, SAMPLE_TYPE, starts_with(\"GRAZING_EFFECT_\")) %&gt;% \n  distinct() %&gt;% \n    ggplot(aes(y = GRAZING_EFFECT_hr, x = NAME, fill = FIELD, shape = SAMPLE_TYPE)) +\n    geom_errorbar(aes(ymax = (GRAZING_EFFECT_hr_max), ymin = (GRAZING_EFFECT_hr_min)), \n                  width = 0.2, position = position_dodge(width = 0.4)) +\n    geom_point(stat = \"identity\", aes(fill = FIELD, shape = SAMPLE_TYPE),\n               color = \"black\", size = 3, position = position_dodge(width = 0.4)) +\n    scale_shape_manual(values = c(21, 24)) +\n    scale_fill_manual(values = c(\"#de2d26\", \"#1c9099\", \"#addd8e\")) +\n    facet_grid(. ~ SAMPLE_TYPE, scales = \"free\", space = \"free\") +\n    theme_minimal() +\n    theme(panel.grid.major = element_line(), panel.grid.minor = element_blank(),\n          panel.background = element_blank(), \n          axis.line = element_line(colour = \"black\"), \n          axis.text.x = element_text(color=\"black\", size = 11, \n                                     angle = 45, hjust = 1, vjust = 1), \n          axis.text.y = element_text(color=\"black\", size = 11),\n          axis.title =element_text(color=\"black\", size = 11),\n          axis.ticks = element_line(),\n          legend.title = element_blank(),\n          strip.placement = \"outside\",\n          strip.text.y = element_text(color=\"black\", size = 11),\n          strip.text.x = element_blank())+\n    guides(fill = guide_legend(override.aes = list(shape = c(21))),\n           shape = guide_legend(override.aes = list(fill = \"black\"))) +\n    labs(x = \"\", y = bquote(\"cells\"~ml^-1~hr^-1))\n\n\n\n\nCode\n# svg(\"compare-all-rates-color-nonZero.svg\", h = 4, w = 7)\nallrates_nonzero + scale_y_log10()\n\n\n\n\n\nCode\n# dev.off()"
  },
  {
    "objectID": "asv.html#sequence-stats",
    "href": "asv.html#sequence-stats",
    "title": "18S survey",
    "section": "Sequence stats",
    "text": "Sequence stats\nTotal ASVs and sequences for each sample.\n\nasv_wtax_qc %>% \n  filter(value > 0) %>% \n  group_by(SAMPLE, VENT, SITE) %>% \n  summarise(SUM_stats = sum(value),\n            ASV_stats = n_distinct(FeatureID)) %>% \n  pivot_longer(cols = ends_with(\"_stats\")) %>% \n  ggplot(aes(x = SAMPLE, y = value)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  # geom_hline(yintercept=10000, linetype=\"dashed\", color = \"green\") +\n  facet_grid(. ~ name, scales = \"free\") +\n  theme_linedraw()\n\n`summarise()` has grouped output by 'SAMPLE', 'VENT'. You can override using\nthe `.groups` argument.\n\n\n\n\n\nCreate supplementary table with ASV and sequence stats.\n\ntable_supp_seqstats <- asv_wtax_qc %>% \n  filter(value > 0) %>% \n  group_by(SAMPLE, VENT, SITE) %>% \n  summarise(SUM_stats = sum(value),\n            ASV_stats = n_distinct(FeatureID))\n\n`summarise()` has grouped output by 'SAMPLE', 'VENT'. You can override using\nthe `.groups` argument.\n\n# write.csv(table_supp_seqstats, file = \"output-data/supp-table-sequencestats.csv\")"
  },
  {
    "objectID": "asv.html#cluster-analysis",
    "href": "asv.html#cluster-analysis",
    "title": "18S survey",
    "section": "3.1 Cluster analysis",
    "text": "3.1 Cluster analysis\nOrdination analysis and methods to look at whole protistan communities at MCR.\n\n\nCode\n# | message: false\nlibrary(vegan); library(ggdendro); library(compositions)\n\n\nLoading required package: permute\n\n\nLoading required package: lattice\n\n\nThis is vegan 2.6-2\n\n\nWelcome to compositions, a package for compositional data analysis.\nFind an intro with \"? compositions\"\n\n\n\nAttaching package: 'compositions'\n\n\nThe following object is masked from 'package:ape':\n\n    balance\n\n\nThe following objects are masked from 'package:stats':\n\n    anova, cor, cov, dist, var\n\n\nThe following objects are masked from 'package:base':\n\n    %*%, norm, scale, scale.default"
  },
  {
    "objectID": "asv.html#cluster-analysis-with-grazing-assays",
    "href": "asv.html#cluster-analysis-with-grazing-assays",
    "title": "18S survey",
    "section": "3.2 Cluster analysis with grazing assays",
    "text": "3.2 Cluster analysis with grazing assays\n\n\nCode\n# head(asv_wtax_qc)\nasv_mcr_numeric <- asv_wtax_qc %>% \n  filter(value > 0) %>% \n  group_by(FeatureID, SAMPLENAME) %>% \n  summarise(MEAN_ACROSS_REPS = mean(value)) %>% \n  select(FeatureID, SAMPLENAME, MEAN_ACROSS_REPS) %>% \n  pivot_wider(names_from = SAMPLENAME, values_from = MEAN_ACROSS_REPS, values_fill = 0) %>% \n  column_to_rownames(var = \"FeatureID\")\n\n\n`summarise()` has grouped output by 'FeatureID'. You can override using the\n`.groups` argument.\n\n\nTransform compositional data, center log ratio.\n\n\nCode\nlogratio_mcr <- data.frame(compositions::clr(t(asv_mcr_numeric)))\n# dim(logratio_mcr)\n# ?alr()\n# ?ilr()\n\npca_logratio <- prcomp(logratio_mcr)\n\nvariance_logratio <- (pca_logratio$sdev^2)/sum(pca_logratio$sdev^2)\n\nbarplot(variance_logratio, main = \"Log-Ratio PCA Screeplot\", xlab = \"PC Axis\", ylab = \"% Variance\", \n    cex.names = 1.5, cex.axis = 1.5, cex.lab = 1.5, cex.main = 1.5)\n\n\n\n\n\n\n\nCode\n# Extract PCA points\nmcr_pca_pts <- data.frame(pca_logratio$x, SAMPLE = rownames(pca_logratio$x)) %>% \n  rownames_to_column(var = \"SAMPLENAME\") %>% \n  separate(SAMPLENAME, c(\"SITE\", \"SAMPLETYPE\", \"YEAR\", \"VENT\"), \" \", \n        remove = FALSE) \n\n\nWarning: Expected 4 pieces. Additional pieces discarded in 21 rows [1, 2, 3, 4,\n5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\n\n\nPCoA with all samples\n\n\nCode\n# unique(mcr_pca_pts$VENT)\n# vent_ids\n# site_fullname\nmcr_pca_pts %>% \n  mutate(VENT_ORDER = factor(VENT, levels = vent_ids, labels = vent_fullname),\n         SITE_ORDER = factor(SITE, levels = c(\"VonDamm\", \"Piccard\"), labels = site_fullname)) %>% \n  mutate(TYPE = case_when(\n    SAMPLETYPE == \"Incubation\" ~ \"Incubation\",\n    TRUE ~ \"in situ\"\n  )) %>% \n  ggplot(aes(x = PC1, y = PC2)) +\n  geom_point(color = \"black\", stroke = 1.3, size = 5, aes(shape = SITE_ORDER, fill = VENT_ORDER, alpha = TYPE)) +\n  scale_shape_manual(values = c(21, 24)) +\n  scale_alpha_manual(values = c(1,0.5)) +\n  scale_fill_manual(values = vent_colors) +\n  theme_linedraw() +\n  guides(fill = guide_legend(override.aes = list(shape = c(22)))) +\n  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)\n\n\n\n\n\nDendrogram analysis\n\n\nCode\n# ?decostand()\n# Relative abundance\nrel_abun <- decostand(asv_mcr_numeric, MARGIN = 2, method = \"total\")\n# Cluster dendrogram (average hierarchical clustering)\ncluster_mcr <- hclust(dist(t(rel_abun)), method = \"average\")\ndendro <- as.dendrogram(cluster_mcr)\nmcr_dendro <- dendro_data(dendro, type = \"rectangle\")\n\n\n\n\nCode\nmcr_dendro_plot <- ggplot(segment(mcr_dendro)) +\n  geom_segment(aes(x = x, y = y, xend = xend, \n    yend = yend)) + \n  coord_flip() + \n  scale_y_reverse(expand = c(0.2, 0.5), breaks = c(0, 0.2, 0.4, 0.6, 0.8)) +\n  geom_text(aes(x = x, y = y, label = label, angle = 0, hjust = 0), data = label(mcr_dendro)) +\n  theme_dendro() + labs(y = \"Dissimilarity\") +\n    theme(axis.text.x = element_text(color = \"black\", size = 14), axis.line.x = element_line(color = \"#252525\"), \n        axis.ticks.x = element_line(), axis.title.x = element_text(color = \"black\", \n            size = 14))\n# svg('figs/SUPPLEMENTARY-dendrogram-wreps.svg', w = 10, h = 8)\nmcr_dendro_plot\n\n\n\n\n\n\n\nPCoA with in situ only\n\n\nCode\nasv_mcr_numeric_insitu <- asv_wtax_qc %>% \n  filter(value > 0) %>% \n  filter(SAMPLETYPE != \"Incubation\") %>% \n  group_by(FeatureID, SAMPLENAME) %>% \n  summarise(MEAN_ACROSS_REPS = mean(value)) %>% \n  select(FeatureID, SAMPLENAME, MEAN_ACROSS_REPS) %>% \n  pivot_wider(names_from = SAMPLENAME, values_from = MEAN_ACROSS_REPS, values_fill = 0) %>% \n  column_to_rownames(var = \"FeatureID\")\n\n\n`summarise()` has grouped output by 'FeatureID'. You can override using the\n`.groups` argument.\n\n\nCode\ninsitu_logratio_mcr <- data.frame(compositions::clr(t(asv_mcr_numeric_insitu)))\n\ninsitu_pca_logratio <- prcomp(insitu_logratio_mcr)\n\ninsitu_variance_logratio <- (insitu_pca_logratio$sdev^2)/sum(insitu_pca_logratio$sdev^2)\n\nbarplot(insitu_variance_logratio, main = \"Log-Ratio PCA Screeplot\", xlab = \"PC Axis\", ylab = \"% Variance\", \n    cex.names = 1.5, cex.axis = 1.5, cex.lab = 1.5, cex.main = 1.5)\n\n\n\n\n\n\n\nCode\n# Extract PCA points for only insitu samples\ninsitu_mcr_pca_pts <- data.frame(insitu_pca_logratio$x, SAMPLE = rownames(insitu_pca_logratio$x)) %>% \n  rownames_to_column(var = \"SAMPLENAME\") %>% \n  separate(SAMPLENAME, c(\"SITE\", \"SAMPLETYPE\", \"YEAR\", \"VENT\"), \" \", \n        remove = FALSE) \n\n\nWarning: Expected 4 pieces. Additional pieces discarded in 13 rows [1, 2, 3, 4,\n5, 6, 7, 8, 9, 10, 11, 12, 13].\n\n\n\n\nCode\ninsitu_mcr_pca_pts %>% \n  mutate(TYPE = case_when(\n    SAMPLETYPE == \"Incubation\" ~ \"Incubation\",\n    TRUE ~ \"in situ\"\n  )) %>% \n  ggplot(aes(x = PC1, y = PC2)) +\n  geom_point(color = \"black\", size = 4, aes(shape = SITE, fill = VENT, alpha = TYPE)) +\n  scale_shape_manual(values = c(21, 24)) +\n  scale_alpha_manual(values = c(1,0.4)) +\n  theme_linedraw() +\n  guides(fill = guide_legend(override.aes = list(shape = c(22)))) +\n  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)\n\n\n\n\n\nCode\n# Keep same sample colors to compare to cluster analysis with in situ and Tf samples."
  },
  {
    "objectID": "asv.html#shared-asvs",
    "href": "asv.html#shared-asvs",
    "title": "18S survey",
    "section": "3.4 Shared ASVs",
    "text": "3.4 Shared ASVs\n\n\nCode\nload(\"input-data/MCR-amplicon-data.RData\", verbose=TRUE)\n\n\nLoading objects:\n  phylo_obj\n  samplenames\n  physeq_wnames\n  metadata_mcr\n  asv_wtax_qc\n  TAX\n  tax_matrix\n  physeq_mcr\n\n\nCode\n# unique(asv_wtax_qc$SITE)\nhead(asv_wtax_qc)\n\n\n# A tibble: 6 × 22\n  FeatureID SAMPLE value Taxon Conse…¹ SAMPL…² VENT  SITE  SAMPL…³ DEPTH SAMPL…⁴\n  <chr>     <chr>  <dbl> <chr>   <dbl> <chr>   <chr> <chr> <chr>   <chr> <chr>  \n1 00056209… 52_MC…     0 Euka…     0.8 \"Picca… Lots… Picc… \"\"      \"\"    Incuba…\n2 00056209… 53_MC…     0 Euka…     0.8 \"Picca… Lots… Picc… \"\"      \"\"    Incuba…\n3 00056209… 54_MC…     0 Euka…     0.8 \"VonDa… Must… VonD… \"\"      \"\"    Incuba…\n4 00056209… 55_MC…     0 Euka…     0.8 \"VonDa… Shri… VonD… \"\"      \"\"    Incuba…\n5 00056209… 57_MC…     0 Euka…     0.8 \"Picca… Shri… Picc… \"\"      \"\"    Incuba…\n6 00056209… 58_MC…     0 Euka…     0.8 \"VonDa… Plume VonD… \"\"      \"\"    Incuba…\n# … with 11 more variables: SAMPLETYPE_BIN <chr>, YEAR <chr>, TEMP <chr>,\n#   pH <chr>, PercSeawater <chr>, Mg <chr>, H2 <chr>, H2S <chr>, CH4 <chr>,\n#   ProkConc <chr>, Sample_or_Control <chr>, and abbreviated variable names\n#   ¹​Consensus, ²​SAMPLENAME, ³​SAMPLEID, ⁴​SAMPLETYPE\n\n\nCode\n# head(TAX)\n\n\nFunction to generate upsetR plot with varied taxonomic levels.\nQuestions:\n\nHow many ASVs are shared among vent sites within Von Damm and Piccard?\nWhat about shared ASVs across each vent field?\nIs there a taxonomic level that drives site-to-site or field-to-field community dissimilarity?\n\n\n\nCode\n# options for taxa: SupergroupPhylum, Supergroup, Phylum, Class, Order, Family, Genus, Species\nalv <- c(\"Alveolata-Ellobiopsidae\", \"Alveolata-Perkinsea\", \"Alveolata-Unknown\", \"Alveolata-Chrompodellids\", \"Alveolata-Apicomplexa\")\n\nall_taxa_color = c(\"#fa9fb5\", \"#c51b8a\", \"#67000d\", \"#ef3b2c\", \"#ffffcc\", \"#feb24c\", \"#c7e9b4\", \"#1d91c0\", \"#deebf7\", \"#253494\", \"#9e9ac8\", \"#238b45\", \"#54278f\", \"#bdbdbd\", \"#252525\", \"#fa9fb5\", \"#c51b8a\", \"#67000d\", \"#ef3b2c\", \"#ffffcc\", \"#feb24c\", \"#c7e9b4\", \"#1d91c0\", \"#253494\", \"#9e9ac8\", \"#238b45\", \"#54278f\", \"#bdbdbd\", \"#252525\")\n\nasv_wtax_qc %>% \n  filter(value > 0) %>% \n  filter(SAMPLETYPE != \"Incubation\") %>% \n  separate(Taxon, c(\"Domain\", \"Supergroup\", \n                  \"Phylum\", \"Class\", \"Order\",\n                  \"Family\", \"Genus\", \"Species\"), sep = \";\") %>%\n  filter(Domain == \"Eukaryota\") %>% #select eukaryotes only\n  filter(Supergroup != \"Opisthokonta\") %>% # remove multicellular metazoa\n  mutate(Supergroup = ifelse(is.na(Supergroup), \"Unknown Eukaryota\", Supergroup),\n         Phylum = ifelse(is.na(Phylum), \"Unknown\", Phylum),\n         Phylum = ifelse(Phylum == \"Alveolata_X\", \"Ellobiopsidae\", Phylum),\n         Supergroup = ifelse(Supergroup == \"Alveolata\", paste(Supergroup, Phylum, sep = \"-\"), Supergroup)) %>% \n  mutate(SUPERGROUP = case_when(\n    Supergroup %in% alv ~ \"Other Alveolata\",\n    Supergroup == \"Eukaryota_X\" ~ \"Unknown Eukaryota\",\n    Phylum == \"Cercozoa\" ~ \"Rhizaria-Cercozoa\",\n    Phylum == \"Radiolaria\" ~ \"Rhizaria-Radiolaria\",\n    Phylum == \"Ochrophyta\" ~ \"Stramenopiles-Ochrophyta\",\n    Phylum == \"Opalozoa\" ~ \"Stramenopiles-Opalozoa\",\n    Phylum == \"Sagenista\" ~ \"Stramenopiles-Sagenista\",\n    TRUE ~ Supergroup\n  )) %>% \n  # Taxa to supergroup\n  mutate(SupergroupPhylum = SUPERGROUP) %>% #add modified \"supergroup-phylum category\"\n  # Average across replicates\n    group_by(FeatureID, SAMPLENAME, VENT, SupergroupPhylum) %>% \n    summarise(AVG = mean(value)) %>% \n  ungroup() %>% \n  separate(SAMPLENAME, c(\"SITE\", \"SAMPLETYPE\", \"YEAR\", \"Sample_tmp\"), remove = TRUE) %>%\n  mutate(REGION = \"Mid-Cayman Rise\") %>%  \n  mutate(VENTNAME = paste(SITE, VENT, sep = \" \")) %>% \n    select(-Sample_tmp) %>% \n  unite(SAMPLE, SITE, SAMPLETYPE, VENT, sep = \" \", remove = FALSE) %>% \n  \n  group_by(SupergroupPhylum, SAMPLE) %>% \n    summarise(SUM = sum(AVG)) %>%\n  ungroup() %>%\n  distinct(SupergroupPhylum, SUM, SAMPLE, .keep_all = TRUE) %>% \n  group_by(SupergroupPhylum) %>% \n  summarise(SAMPLE = list(SAMPLE)) %>% \n  ggplot(aes(x = SAMPLE)) +\n    geom_bar(color = \"black\", width = 0.7, aes(fill = SupergroupPhylum)) +\n    scale_x_upset(n_intersections = 25) +\n  scale_y_continuous(expand = c(0,0)) +\n  labs(x = \"\", y = \"Shared at taxonomic level\") +\n  theme_linedraw() +\n  theme(axis.text.y = element_text(color=\"black\", size=14, face = \"bold\"),\n        axis.text.x = element_text(color=\"black\", size=14, face = \"bold\"),\n        axis.title = element_text(color=\"black\", size=14, face = \"bold\"),\n        legend.text = element_text(color = \"black\", size = 12, face = \"bold\"),\n        legend.title = element_blank(),\n        panel.grid.minor = element_blank(),\n        plot.margin = margin(1, 1, 1, 5, \"cm\")) + \n  scale_fill_manual(values = all_taxa_color)\n\n\nWarning: Expected 8 pieces. Additional pieces discarded in 5926 rows [5, 6, 7,\n8, 9, 10, 11, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 28, 29, 30, ...].\n\n\nWarning: Expected 8 pieces. Missing pieces filled with `NA` in 3451 rows [1, 2,\n3, 4, 12, 13, 18, 19, 23, 27, 35, 44, 45, 46, 48, 49, 53, 54, 55, 56, ...].\n\n\n`summarise()` has grouped output by 'FeatureID', 'SAMPLENAME', 'VENT'. You can\noverride using the `.groups` argument.\n\n\nWarning: Expected 4 pieces. Additional pieces discarded in 7678 rows [1, 2, 3,\n4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\n\n`summarise()` has grouped output by 'SupergroupPhylum'. You can override using\nthe `.groups` argument.\n\n\n\n\n\nCode\n# Filter data to reduce noise and show sample type to vent ecosystem variability.\n# \n\n\n\n\nCode\nasv_wtax_qc %>% \n  filter(value > 0) %>% \n  filter(SAMPLETYPE != \"Incubation\") %>% \n  separate(Taxon, c(\"Domain\", \"Supergroup\", \n                  \"Phylum\", \"Class\", \"Order\",\n                  \"Family\", \"Genus\", \"Species\"), sep = \";\", remove = FALSE) %>%\n  filter(Domain == \"Eukaryota\") %>% #select eukaryotes only\n  filter(Supergroup != \"Opisthokonta\") %>% # remove multicellular metazoa\n  mutate(Supergroup = ifelse(is.na(Supergroup), \"Unknown Eukaryota\", Supergroup),\n         Phylum = ifelse(is.na(Phylum), \"Unknown\", Phylum),\n         Phylum = ifelse(Phylum == \"Alveolata_X\", \"Ellobiopsidae\", Phylum),\n         Supergroup = ifelse(Supergroup == \"Alveolata\", paste(Supergroup, Phylum, sep = \"-\"), Supergroup)) %>% \n  mutate(SUPERGROUP = case_when(\n    Supergroup %in% alv ~ \"Other Alveolata\",\n    Supergroup == \"Eukaryota_X\" ~ \"Unknown Eukaryota\",\n    Phylum == \"Cercozoa\" ~ \"Rhizaria-Cercozoa\",\n    Phylum == \"Radiolaria\" ~ \"Rhizaria-Radiolaria\",\n    Phylum == \"Ochrophyta\" ~ \"Stramenopiles-Ochrophyta\",\n    Phylum == \"Opalozoa\" ~ \"Stramenopiles-Opalozoa\",\n    Phylum == \"Sagenista\" ~ \"Stramenopiles-Sagenista\",\n    TRUE ~ Supergroup\n  )) %>% \n  # Taxa to supergroup\n  mutate(SupergroupPhylum = SUPERGROUP) %>% #add modified \"supergroup-phylum category\"\n  # Average across replicates\n    group_by(FeatureID, SAMPLENAME, VENT, SupergroupPhylum, Taxon) %>% \n    summarise(AVG = mean(value)) %>% \n  ungroup() %>% \n  separate(SAMPLENAME, c(\"SITE\", \"SAMPLETYPE\", \"YEAR\", \"Sample_tmp\"), remove = TRUE) %>%\n  mutate(REGION = \"Mid-Cayman Rise\") %>%  \n  mutate(VENTNAME = paste(SITE, VENT, sep = \" \")) %>% \n    select(-Sample_tmp) %>% \n  unite(SAMPLE, SITE, SAMPLETYPE, VENT, sep = \" \", remove = FALSE) %>% \n  group_by(SupergroupPhylum, Taxon, SAMPLE) %>% \n    summarise(SUM = sum(AVG)) %>%\n  ungroup() %>%\n  distinct(Taxon, SupergroupPhylum, SUM, SAMPLE, .keep_all = TRUE) %>% \n  group_by(SupergroupPhylum, Taxon) %>% \n  summarise(SAMPLE = list(SAMPLE)) %>% \n  ggplot(aes(x = SAMPLE)) +\n    geom_bar(color = \"black\", width = 0.7, aes(fill = SupergroupPhylum)) +\n    scale_x_upset(n_intersections = 25) +\n  scale_y_continuous(expand = c(0,0)) +\n  labs(x = \"\", y = \"Shared at taxonomic level\") +\n  theme_linedraw() +\n  theme(axis.text.y = element_text(color=\"black\", size=14, face = \"bold\"),\n        axis.text.x = element_text(color=\"black\", size=14, face = \"bold\"),\n        axis.title = element_text(color=\"black\", size=14, face = \"bold\"),\n        legend.text = element_text(color = \"black\", size = 12, face = \"bold\"),\n        legend.title = element_blank(),\n        panel.grid.minor = element_blank(),\n        plot.margin = margin(1, 1, 1, 5, \"cm\")) + \n  scale_fill_manual(values = all_taxa_color)\n\n\nWarning: Expected 8 pieces. Additional pieces discarded in 5926 rows [5, 6, 7,\n8, 9, 10, 11, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 28, 29, 30, ...].\n\n\nWarning: Expected 8 pieces. Missing pieces filled with `NA` in 3451 rows [1, 2,\n3, 4, 12, 13, 18, 19, 23, 27, 35, 44, 45, 46, 48, 49, 53, 54, 55, 56, ...].\n\n\n`summarise()` has grouped output by 'FeatureID', 'SAMPLENAME', 'VENT',\n'SupergroupPhylum'. You can override using the `.groups` argument.\n\n\nWarning: Expected 4 pieces. Additional pieces discarded in 7678 rows [1, 2, 3,\n4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\n\n`summarise()` has grouped output by 'SupergroupPhylum', 'Taxon'. You can\noverride using the `.groups` argument.\n`summarise()` has grouped output by 'SupergroupPhylum'. You can override using\nthe `.groups` argument.\n\n\nWarning: Removed 300 rows containing non-finite values (stat_count).\n\n\n\n\n\nExample comparisons of shared taxonomic levels. Explanation: At ASV level, most ASVs are not shared across samples. So at other taxonomic categories, are these taxa also present or are there whole classes not present?\n\n\nCode\n# | fig-width: 10\n# | fig-height: 15\n# SupergroupPhylum, Supergroup, Phylum, Class, Order, Family, Genus, Species\n\n# make_upset_plot(asv_wtax_qc, SupergroupPhylum)\n\n# library(plotly)\n# ggplotly(tmp)\n# make_upset_plot(asv_wtax_qc, Class) + theme(legend.position = \"none\")\n# make_upset_plot(asv_wtax_qc, Supergroup) + theme(legend.position = \"none\")\n\n\nA better visualization may be a presence/absence across samples with a tile plot.\n\n\nCode\nalv <- c(\"Alveolata-Ellobiopsidae\", \"Alveolata-Perkinsea\", \"Alveolata-Unknown\", \"Alveolata-Chrompodellids\", \"Alveolata-Apicomplexa\")\n\nmake_tile_plot_pa <- function(df, taxa_level, level0){ \n  taxa_select <- enquo(taxa_level)\n  taxa_select_higher <- enquo(level0)\n  df %>% \n  filter(value > 0) %>% \n  filter(SAMPLETYPE != \"Incubation\") %>% \n  separate(Taxon, c(\"Domain\", \"Supergroup\", \n                  \"Phylum\", \"Class\", \"Order\",\n                  \"Family\", \"Genus\", \"Species\"), sep = \";\") %>%\n  filter(Domain == \"Eukaryota\") %>% #select eukaryotes only\n  filter(Supergroup != \"Opisthokonta\") %>% # remove multicellular metazoa\n  mutate(Supergroup = ifelse(is.na(Supergroup), \"Unknown Eukaryota\", Supergroup),\n         Phylum = ifelse(is.na(Phylum), \"Unknown\", Phylum),\n         Phylum = ifelse(Phylum == \"Alveolata_X\", \"Ellobiopsidae\", Phylum),\n         Supergroup = ifelse(Supergroup == \"Alveolata\", paste(Supergroup, Phylum, sep = \"-\"), Supergroup)) %>% \n  mutate(SUPERGROUP = case_when(\n    Supergroup %in% alv ~ \"Other Alveolata\",\n    Supergroup == \"Eukaryota_X\" ~ \"Unknown Eukaryota\",\n    Phylum == \"Cercozoa\" ~ \"Rhizaria-Cercozoa\",\n    Phylum == \"Radiolaria\" ~ \"Rhizaria-Radiolaria\",\n    Phylum == \"Ochrophyta\" ~ \"Stramenopiles-Ochrophyta\",\n    Phylum == \"Opalozoa\" ~ \"Stramenopiles-Opalozoa\",\n    Phylum == \"Sagenista\" ~ \"Stramenopiles-Sagenista\",\n    TRUE ~ Supergroup\n  )) %>% \n  # Taxa to supergroup\n  mutate(SupergroupPhylum = SUPERGROUP) %>% #add modified \"supergroup-phylum category\"\n  # Average across replicates\n    group_by(FeatureID, SAMPLENAME, VENT, !!taxa_select_higher, !!taxa_select) %>% \n    summarise(AVG = mean(value)) %>% \n  ungroup() %>% \n  separate(SAMPLENAME, c(\"SITE\", \"SAMPLETYPE\", \"YEAR\", \"Sample_tmp\"), remove = TRUE) %>%\n  mutate(REGION = \"Mid-Cayman Rise\") %>%  \n  mutate(VENTNAME = paste(SITE, VENT, sep = \" \")) %>% \n    select(-Sample_tmp) %>% \n  unite(SAMPLE, SITE, SAMPLETYPE, VENT, sep = \" \", remove = FALSE) %>% \n  group_by(SITE, !!taxa_select_higher, !!taxa_select, SAMPLE) %>% \n    summarise(SUM = sum(AVG)) %>%\n  ungroup() %>%\n    add_column(PRESENT = 1) %>% \n    drop_na() %>% # remove NAs in taxa categories\n  ggplot(aes(x = SAMPLE, y = !!taxa_select)) +\n    geom_tile(color = \"white\", fill = \"black\", aes(fill = PRESENT)) +\n      facet_grid(SupergroupPhylum ~ SITE, space = \"free\", scales = \"free\") +\n  theme_linedraw() +\n  labs(x= \"\", y = \"\") +\n  theme(axis.text.y = element_text(color=\"black\", size=11),\n        axis.text.x = element_text(color=\"black\", size=11, angle = 90, vjust = 0.5, hjust = 1),\n        axis.title = element_text(color=\"black\", size=11),\n        legend.text = element_text(color = \"black\", size = 11),\n        legend.title = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.grid.major = element_blank(),\n        plot.margin = margin(1, 1, 1, 5, \"cm\"))\n}\n\n\n\n\nCode\n# | fig-width: 10\n# | fig-height: 20\n# make_tile_plot_pa(asv_wtax_qc, \"Class\", \"SupergroupPhylum\")\n\n\n\nAbove plot addresses presence/absence of the families within major protistan supergroups across the Von Damm and Piccard vent, plume, and background samples."
  },
  {
    "objectID": "asv.html#richness-by-site",
    "href": "asv.html#richness-by-site",
    "title": "18S survey",
    "section": "Richness by site",
    "text": "Richness by site"
  },
  {
    "objectID": "asv.html#corncob",
    "href": "asv.html#corncob",
    "title": "18S survey",
    "section": "3.5 Corncob",
    "text": "3.5 Corncob\nCorncob analysis can be used to identify specific ASVs that may be enriched when we compare non-vent to vent samples.\nQuestions:\n\nFor vent vs. non-vent ASVs, what ASVs are enriched at Piccard?\nFor vent vs. non-vent ASVs, what ASVs are enriched at Von Damm?\nFor vent vs. non-vent ASVs, what ASVs are enriched at both sites?\n\n\n\nCode\n# | message: false\n# devtools::install_github(\"bryandmartin/corncob\")\nlibrary(corncob); library(phyloseq)\n\n\n\n\nCode\nload(\"input-data/MCR-amplicon-data.RData\", verbose = TRUE)\n\n\nLoading objects:\n  phylo_obj\n  samplenames\n  physeq_wnames\n  metadata_mcr\n  asv_wtax_qc\n  TAX\n  tax_matrix\n  physeq_mcr\n\n\nExplore data input for corncob\n\n\nCode\n# otu_table(physeq_mcr)[1:10, 1:3]\n# sample_data(physeq_mcr)\n# tax_table(physeq_mcr)[1:3, ]\n\n# Designated vent vs. non-vent\nunique(sample_data(physeq_mcr)$SAMPLETYPE_BIN)\n\n\n[1] \"non-vent\" \"vent\"    \n\n\nCode\n#Designats Piccard vs. vondamm.\nunique(sample_data(physeq_mcr)$SITE)\n\n\n[1] \"Piccard\" \"VonDamm\"\n\n\nStart by removing incubation samples for now. Subset to eukaryotes only and use phyloseq’s tax glom to summarize to Supergroup, Phylum, Class, Order, Genus, & species.\n\n\nCode\nhead(tax_table(physeq_mcr))\n\n\nTaxonomy Table:     [6 taxa by 8 taxonomic ranks]:\n                                 Domain      Supergroup     Phylum            \n0c7bdd7d35a3559db857584cecc4f5c9 \"Eukaryota\" \"Opisthokonta\" \"Choanoflagellida\"\n7b0dd4c34fe16642ff23b7effa1bf1bd \"Eukaryota\" \"Alveolata\"    \"Ciliophora\"      \ndc268dc3fdd431dc0de1fcc60de681f0 \"Eukaryota\" \"Rhizaria\"     \"Cercozoa\"        \n08586d1dca4dda0f128d142b85379e0b \"Eukaryota\" \"Apusozoa\"     \"Apusomonadidae\"  \ne3bed7480f3f3c95f0f4db2e03cee011 \"Eukaryota\" \"Rhizaria\"     \"Radiolaria\"      \n44dcf603d76f712038c8b797beb1282f \"Eukaryota\" \"Alveolata\"    \"Dinoflagellata\"  \n                                 Class                   \n0c7bdd7d35a3559db857584cecc4f5c9 \"Choanoflagellatea\"     \n7b0dd4c34fe16642ff23b7effa1bf1bd \"CONThreeP\"             \ndc268dc3fdd431dc0de1fcc60de681f0 \"Filosa-Thecofilosea\"   \n08586d1dca4dda0f128d142b85379e0b \"Apusomonadidae_Group-1\"\ne3bed7480f3f3c95f0f4db2e03cee011 \"Acantharea\"            \n44dcf603d76f712038c8b797beb1282f \"Syndiniales\"           \n                                 Order                     \n0c7bdd7d35a3559db857584cecc4f5c9 \"Acanthoecida\"            \n7b0dd4c34fe16642ff23b7effa1bf1bd \"CONThreeP_X\"             \ndc268dc3fdd431dc0de1fcc60de681f0 \"Ventricleftida\"          \n08586d1dca4dda0f128d142b85379e0b \"Apusomonadidae_Group-1_X\"\ne3bed7480f3f3c95f0f4db2e03cee011 \"Acantharea_1\"            \n44dcf603d76f712038c8b797beb1282f \"Dino-Group-IV\"           \n                                 Family                            \n0c7bdd7d35a3559db857584cecc4f5c9 \"Stephanoecidae_Group_D\"          \n7b0dd4c34fe16642ff23b7effa1bf1bd \"CONThreeP_XX\"                    \ndc268dc3fdd431dc0de1fcc60de681f0 NA                                \n08586d1dca4dda0f128d142b85379e0b \"Apusomonadidae_Group-1_XX\"       \ne3bed7480f3f3c95f0f4db2e03cee011 \"Acantharea_1_X\"                  \n44dcf603d76f712038c8b797beb1282f \"Dino-Group-IV-Hematodinium-Group\"\n                                 Genus                     \n0c7bdd7d35a3559db857584cecc4f5c9 \"Stephanoecidae_Group_D_X\"\n7b0dd4c34fe16642ff23b7effa1bf1bd NA                        \ndc268dc3fdd431dc0de1fcc60de681f0 NA                        \n08586d1dca4dda0f128d142b85379e0b NA                        \ne3bed7480f3f3c95f0f4db2e03cee011 \"Acantharea_1_XX\"         \n44dcf603d76f712038c8b797beb1282f \"Hematodinium\"            \n                                 Species                       \n0c7bdd7d35a3559db857584cecc4f5c9 \"Stephanoecidae_Group_D_X_sp.\"\n7b0dd4c34fe16642ff23b7effa1bf1bd NA                            \ndc268dc3fdd431dc0de1fcc60de681f0 NA                            \n08586d1dca4dda0f128d142b85379e0b NA                            \ne3bed7480f3f3c95f0f4db2e03cee011 \"Acantharea_1_XX_sp.\"         \n44dcf603d76f712038c8b797beb1282f \"Hematodinium_sp.\"            \n\n\nCode\nmcr_super <- physeq_mcr %>%\n  phyloseq::subset_samples(SAMPLETYPE %in% c(\"Background\", \"Plume\", \"Vent\")) %>%\n  phyloseq::subset_taxa(Domain == \"Eukaryota\") %>%\n  tax_glom(\"Supergroup\")\n\nmcr_phy <- physeq_mcr %>% \n  phyloseq::subset_samples(SAMPLETYPE %in% c(\"Background\", \"Plume\", \"Vent\")) %>% \n  phyloseq::subset_taxa(Domain == \"Eukaryota\") %>% \n  tax_glom(\"Phylum\")\n\nmcr_class <- physeq_mcr %>% \n  phyloseq::subset_samples(SAMPLETYPE %in% c(\"Background\", \"Plume\", \"Vent\")) %>% \n  phyloseq::subset_taxa(Domain == \"Eukaryota\") %>% \n  tax_glom(\"Class\")\n\nmcr_order <- physeq_mcr %>% \n  phyloseq::subset_samples(SAMPLETYPE %in% c(\"Background\", \"Plume\", \"Vent\")) %>% \n  phyloseq::subset_taxa(Domain == \"Eukaryota\") %>% \n  tax_glom(\"Order\")\n\nmcr_fam <- physeq_mcr %>% \n  phyloseq::subset_samples(SAMPLETYPE %in% c(\"Background\", \"Plume\", \"Vent\")) %>% \n  phyloseq::subset_taxa(Domain == \"Eukaryota\") %>% \n  tax_glom(\"Family\")\n\nmcr_genera <- physeq_mcr %>% \n  phyloseq::subset_samples(SAMPLETYPE %in% c(\"Background\", \"Plume\", \"Vent\")) %>% \n  phyloseq::subset_taxa(Domain == \"Eukaryota\") %>% \n  tax_glom(\"Genus\")\n\nmcr_spp <- physeq_mcr %>% \n  phyloseq::subset_samples(SAMPLETYPE %in% c(\"Background\", \"Plume\", \"Vent\")) %>% \n  phyloseq::subset_taxa(Domain == \"Eukaryota\") %>% \n  tax_glom(\"Species\")\n\n# sample_data(mcr_order)\n\n\nDifferential tests in corncob\nThese tests work to see if taxa are differentially-abundant or variable across a given variable. In this study we have different taxonomic levels, are there more general or species-specific trends? We also have across sample types and site Below set up differential tests across sample types and site (and either or) at different taxonomic levels.\nFunction to perform specific differential tests across vent fields. Below use SITE_PICK parameter to choose between vent fields. Then use the df, to specify the taxonomic level.\n\n\nCode\ncorncob_mcr <- function(df_in){\n  # da_analysis_output <- differentialTest(formula = ~ SAMPLETYPE + SITE,\n  #                               phi.formula = ~ SAMPLETYPE+ SITE,\n  #                               formula_null = ~ 1,\n  #                               phi.formula_null = ~ SAMPLETYPE + SITE,\n  #                               test = \"Wald\", boot = FALSE,\n  #                               data = df_in,\n  #                               fdr_cutoff = 0.05)\n  ## SAMPLETYPE_BIN specifically compares vent to non-vent.\n  da_analysis_output <- differentialTest(formula = ~ SAMPLETYPE_BIN,\n                                phi.formula = ~ SAMPLETYPE_BIN,\n                                formula_null = ~ 1,\n                                phi.formula_null = ~ SAMPLETYPE_BIN,\n                                test = \"Wald\", boot = FALSE,\n                                data = df_in,\n                                fdr_cutoff = 0.05)\n  # da_analysis_output <- differentialTest(formula = ~ SITE,\n  #                               phi.formula = ~ SITE,\n  #                               formula_null = ~ 1,\n  #                               phi.formula_null = ~ SITE,\n  #                               test = \"Wald\", boot = FALSE,\n  #                               data = df_in,\n  #                               fdr_cutoff = 0.05)\n  #\n  list_ofsig <- as.character(da_analysis_output$significant_taxa)\n  total_number <- length(list_ofsig)[1]\n  #\n  sig_taxa_names <- as.data.frame(tax_table(df_in)) %>% \n    rownames_to_column(var = \"FEATURE\") %>% \n    filter(FEATURE %in% list_ofsig) %>% \n    rownames_to_column(var = \"NUMBER\")\n  #\n  for(var in 1:total_number){\n    out_0 <- data.frame(da_analysis_output$significant_models[[var]]$coefficients) %>% \n      add_column(NUMBER = as.character(var))\n    cat(\"extracted # \",var, \"\\n\")\n  if (!exists(\"extracted_coef\")){\n        extracted_coef <- out_0 # create the final count table\n    } else {\n        extracted_coef <- rbind(extracted_coef, out_0)\n    }\n    rm(out_0) # remove excess df\n  }\n  output_full <- extracted_coef %>% \n    rownames_to_column(var = \"variable\") %>%\n    filter(grepl(\"mu.\", variable)) %>% \n    left_join(sig_taxa_names, by = c(\"NUMBER\" = \"NUMBER\")) %>% \n      mutate(VARIABLE = str_remove(variable, \"[:digit:]+\")) %>% select(-variable) #%>% \n    # pivot_wider(names_from = VARIABLE, names_glue = \"{VARIABLE}_{.value}\", values_from = c(Estimate, Std..Error, t.value, Pr...t..))\n  rm(extracted_coef)\n  return(output_full)}\n\n\nDefine SITE_PICK\n\n\nCode\nmcr <- c(\"Piccard\", \"VonDamm\")\npicc <- c(\"Piccard\")\nvd <- c(\"VonDamm\")\n\n\nFunction to visualize output from corncob\n\n\nCode\nplot_corn <- function(cob_out, LEVEL, TITLE){\n  level <- enquo(LEVEL)\n  cob_out %>%\n  filter(VARIABLE != \"mu.(Intercept)\") %>% \n  ggplot(aes(y = level, x = Estimate)) +\n    geom_vline(xintercept = 0, alpha = 0.2) +\n    geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +\n    geom_point(aes(fill = level), shape = 21, color = \"black\") +\n  facet_grid(. ~ VARIABLE, space = \"free\", scales = \"free\") +\n  theme(legend.position = element_blank(),\n        axis.text.y = element_text(color = \"black\")) +\n  theme_minimal() +\n  labs(x = \"Coefficient\", y = \"\", title = TITLE)\n}\n\n\n\nSupergroup corncob\nWhat main supergroups are enriched at MCR?\n\n\nCode\n# # vd\n# analysis_super_vd <- corncob_mcr(mcr_super %>% \n#                                 phyloseq::subset_samples(SITE %in% vd))\n# \n# analysis_super_picc <- corncob_mcr(mcr_super %>% \n#                                 phyloseq::subset_samples(SITE %in% picc))\n\nanalysis_super_all <- corncob_mcr(mcr_super %>% \n                                phyloseq::subset_samples(SITE %in% mcr))\n\n\nextracted #  1 \nextracted #  2 \nextracted #  3 \nextracted #  4 \nextracted #  5 \n\n\nCode\n# analysis_super_vd %>%\n#   filter(VARIABLE != \"mu.(Intercept)\") %>% \n#   ggplot(aes(y = Supergroup, x = Estimate)) +\n#     geom_vline(xintercept = 0, alpha = 0.2) +\n#     geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +\n#     geom_point(aes(fill = Supergroup), shape = 21, color = \"black\") +\n#   facet_grid(. ~ VARIABLE, space = \"free\", scales = \"free\") +\n#   theme(legend.position = element_blank(),\n#         axis.text.y = element_text(color = \"black\")) +\n#   theme_minimal() +\n#   labs(x = \"Coefficient\", y = \"\", title = \"VD supergroup\")\n\n# analysis_super_picc %>%\n#   filter(VARIABLE != \"mu.(Intercept)\") %>% \n#   ggplot(aes(y = Supergroup, x = Estimate)) +\n#     geom_vline(xintercept = 0, alpha = 0.2) +\n#     geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +\n#     geom_point(aes(fill = Supergroup), shape = 21, color = \"black\") +\n#   facet_grid(. ~ VARIABLE, space = \"free\", scales = \"free\") +\n#   theme(legend.position = element_blank(),\n#         axis.text.y = element_text(color = \"black\")) +\n#   theme_minimal() +\n#   labs(x = \"Coefficient\", y = \"\", title = \"piccard supergroup\")\n\n\nPlot supergroup enrichment\n\n\nCode\nanalysis_super_all %>%\n  filter(VARIABLE != \"mu.(Intercept)\") %>% \n  ggplot(aes(y = Supergroup, x = Estimate)) +\n    geom_vline(xintercept = 0, alpha = 0.2) +\n    geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +\n    geom_point(aes(fill = Supergroup), shape = 21, color = \"black\") +\n  facet_grid(. ~ VARIABLE, space = \"free\", scales = \"free\") +\n  theme(legend.position = element_blank(),\n        axis.text.y = element_text(color = \"black\")) +\n  theme_minimal() +\n  labs(x = \"Coefficient\", y = \"\", title = \"MCR supergroup\")\n\n\n\n\n\n\n\nPhylum corncob analysis\n\n\nCode\nanalysis_phylum <- corncob_mcr(mcr_phy)\n\n\nextracted #  1 \nextracted #  2 \nextracted #  3 \nextracted #  4 \n\n\n\n\nCode\nanalysis_phylum %>%\n  filter(VARIABLE != \"mu.(Intercept)\") %>% \n  ggplot(aes(y = Phylum, x = Estimate)) +\n    geom_vline(xintercept = 0, alpha = 0.2) +\n    geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +\n    geom_point(aes(fill = Phylum), shape = 21, color = \"black\") +\n  facet_grid(Supergroup ~ VARIABLE, space = \"free\", scales = \"free\") +\n  theme(legend.position = element_blank(),\n        axis.text.y = element_text(color = \"black\")) +\n  theme_minimal() +\n  labs(x = \"Coefficient\", y = \"\", title = \"MCR Phylum\")\n\n\n\n\n\n\n\nClass corncob analysis\n\n\nCode\nanalysis_class <- corncob_mcr(mcr_class %>%\n                                phyloseq::subset_samples(SITE %in% mcr))\n\n\nextracted #  1 \nextracted #  2 \nextracted #  3 \nextracted #  4 \nextracted #  5 \nextracted #  6 \nextracted #  7 \nextracted #  8 \nextracted #  9 \nextracted #  10 \nextracted #  11 \nextracted #  12 \nextracted #  13 \nextracted #  14 \nextracted #  15 \nextracted #  16 \n\n\n\n\nCode\n# head(analysis_class)\n# unique(analysis_class$VARIABLE)\nanalysis_class %>%\n  unite(Class, c(Phylum, Class), sep = \" \", remove = FALSE) %>%\n  filter(VARIABLE != \"mu.(Intercept)\") %>% \n  ggplot(aes(y = Class, x = Estimate)) +\n    geom_vline(xintercept = 0, alpha = 0.2) +\n    geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +\n    geom_point(aes(fill = Supergroup), shape = 21, color = \"black\") +\n  facet_grid(Supergroup ~ VARIABLE, space = \"free\", scales = \"free\") +\n  theme(legend.position = element_blank(),\n        axis.text.y = element_text(color = \"black\")) +\n  theme_minimal() +\n  labs(x = \"Coefficient\", y = \"\", title = \"Class level test for differential abundance\")\n\n\n\n\n\n\nClass level looks pretty good. Keep this one. Looks at major taxonomic groups that were more enriched at vents? Work on the language here. Repeat vent vs. plume at ASV level. ID some of the core ASVs that can help elaborate on what we see above (table in supplementary)\n\n\nInterpretation :\n\n\n\nOrder corncob\n\n\nCode\nanalysis_order <- corncob_mcr(mcr_order)\n\n\nextracted #  1 \nextracted #  2 \nextracted #  3 \nextracted #  4 \nextracted #  5 \nextracted #  6 \nextracted #  7 \nextracted #  8 \nextracted #  9 \nextracted #  10 \nextracted #  11 \nextracted #  12 \nextracted #  13 \nextracted #  14 \nextracted #  15 \nextracted #  16 \nextracted #  17 \nextracted #  18 \nextracted #  19 \nextracted #  20 \nextracted #  21 \nextracted #  22 \nextracted #  23 \nextracted #  24 \nextracted #  25 \nextracted #  26 \n\n\n\n\nCode\n# head(analysis_class)\n# unique(analysis_class$VARIABLE)\nanalysis_order %>%\n  unite(Order, c(Phylum, Class, Order), sep = \" \", remove = FALSE) %>%\n  filter(VARIABLE != \"mu.(Intercept)\") %>%\n  ggplot(aes(y = Order, x = Estimate)) +\n    geom_vline(xintercept = 0, alpha = 0.2) +\n    geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +\n    geom_point(aes(fill = Supergroup), shape = 21, color = \"black\") +\n  facet_grid(Supergroup ~ VARIABLE, space = \"free\", scales = \"free\") +\n  theme(legend.position = element_blank(),\n        axis.text.y = element_text(color = \"black\")) +\n  theme_minimal() +\n  labs(x = \"Coefficient\", y = \"\", title = \"Order level test for differential abundance\")\n\n\n\n\n\nCode\n# ?geom_errorbar\n\n\n\n\nFamily corncob\nPlan to pairing with tree below\n\n\nCode\nanalysis_fam <- corncob_mcr(mcr_fam)\n\n\nextracted #  1 \nextracted #  2 \nextracted #  3 \nextracted #  4 \nextracted #  5 \nextracted #  6 \nextracted #  7 \nextracted #  8 \nextracted #  9 \nextracted #  10 \nextracted #  11 \nextracted #  12 \nextracted #  13 \nextracted #  14 \nextracted #  15 \nextracted #  16 \nextracted #  17 \nextracted #  18 \nextracted #  19 \nextracted #  20 \nextracted #  21 \nextracted #  22 \nextracted #  23 \nextracted #  24 \nextracted #  25 \nextracted #  26 \nextracted #  27 \nextracted #  28 \nextracted #  29 \nextracted #  30 \nextracted #  31 \nextracted #  32 \nextracted #  33 \nextracted #  34 \n\n\n\n\nCode\nanalysis_fam %>%\n  unite(Family, c(Class, Order, Family), sep = \" \", remove = FALSE) %>%\n  filter(VARIABLE != \"mu.(Intercept)\") %>%\n  ggplot(aes(y = Family, x = Estimate)) +\n    geom_vline(xintercept = 0, alpha = 0.2) +\n    geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +\n    geom_point(aes(fill = Supergroup), shape = 21, color = \"black\") +\n  facet_grid(Supergroup + Phylum ~ VARIABLE, space = \"free\", scales = \"free\") +\n  theme(legend.position = element_blank(),\n        axis.text.y = element_text(color = \"black\")) +\n  theme_minimal() +\n  labs(x = \"Coefficient\", y = \"\", title = \"Family level test for differential abundance\")\n\n\n\n\n\n\n\nGenus corncob\nPlan to pairing with tree below\n\n\nCode\nanalysis_genus <- corncob_mcr(mcr_genera)\n\n\nextracted #  1 \nextracted #  2 \nextracted #  3 \nextracted #  4 \nextracted #  5 \nextracted #  6 \nextracted #  7 \nextracted #  8 \n\n\n\n\nCode\nanalysis_genus %>%\n  unite(Genus, c(Phylum, Genus), sep = \" \", remove = FALSE) %>%\n  filter(VARIABLE != \"mu.(Intercept)\") %>%\n  ggplot(aes(y = Genus, x = Estimate)) +\n    geom_vline(xintercept = 0, alpha = 0.2) +\n    geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +\n    geom_point(aes(fill = Supergroup), shape = 21, color = \"black\") +\n  facet_grid(Supergroup ~ VARIABLE, space = \"free\", scales = \"free\") +\n  theme(legend.position = element_blank(),\n        axis.text.y = element_text(color = \"black\")) +\n  theme_minimal() +\n  labs(x = \"Coefficient\", y = \"\", title = \"Genus level test for differential abundance\")\n\n\n\n\n\n\n\nSpecies corncob\n\n\nCode\nanalysis_spp <- corncob_mcr(mcr_spp)\n\n\nextracted #  1 \nextracted #  2 \nextracted #  3 \nextracted #  4 \nextracted #  5 \n\n\n\n\nCode\nanalysis_spp %>%\n  unite(Species, c(Genus, Species), sep = \" \", remove = FALSE) %>%\n  filter(VARIABLE != \"mu.(Intercept)\") %>%\n  ggplot(aes(y = Species, x = Estimate)) +\n    geom_vline(xintercept = 0, alpha = 0.2) +\n    geom_errorbar(aes(xmin = (Estimate-Std..Error), xmax = (Estimate+Std..Error)), width = 0.2) +\n    geom_point(aes(fill = Supergroup), shape = 21, color = \"black\") +\n  facet_grid(Supergroup + Order ~ VARIABLE, space = \"free\", scales = \"free\") +\n  theme(legend.position = element_blank(),\n        axis.text.y = element_text(color = \"black\")) +\n  theme_minimal() +\n  labs(x = \"Coefficient\", y = \"\", title = \"Species level test for differential abundance\")"
  },
  {
    "objectID": "grazing.html#plot-temperature-by-eukprok",
    "href": "grazing.html#plot-temperature-by-eukprok",
    "title": "Protistan grazing analysis",
    "section": "13.1 Plot temperature by euk:prok",
    "text": "13.1 Plot temperature by euk:prok\nPlot temperature by euk and prok per ml individually too.\nBacterial abundance typically increases with temperature (White et al. 1991) - which could ultimately increase bacterial ingestion rate and total protist cells. But at this type of niche environment, I hypothesize that there is a trend but threshold of not detected grazing under certain conditions.\nIf euk per ml numbers are high, but we see lower grazing rates, could this be competition? Curds and Cockburn 1968. Additionally with temperature… in Vaque et al GRF (specific grazing rates of flagellates) increased with temperature, but overall grazing rate reached a plateau at 18C. Does this mean that temperature will be an important factor depending on the community diversity?"
  },
  {
    "objectID": "grazing.html#plot-temperature-by-grazing-rate",
    "href": "grazing.html#plot-temperature-by-grazing-rate",
    "title": "Protistan grazing analysis",
    "section": "15.5 Plot temperature by grazing rate",
    "text": "15.5 Plot temperature by grazing rate\n\n\nCode\nnames(allvent_data)\n\n\n [1] \"FIELD\"                 \"NAME\"                  \"SAMPLE\"               \n [4] \"EXP\"                   \"PROK_ml\"               \"EUK_ml\"               \n [7] \"GRAZING_EFFECT_hr\"     \"GRAZING_EFFECT_hr_min\" \"GRAZING_EFFECT_hr_max\"\n[10] \"BAC_TURNOVER_PERC\"     \"Highest.Temp\"          \"pH\"                   \n[13] \"Mg\"                    \"H2S\"                   \"H2\"                   \n[16] \"CH4\"                   \"SAMPLE_TYPE\"           \"PROK_EUK_RATIO\"       \n\n\nCode\n# two_params(allvent_data, ugC_L_perday, `Highest.Temp`, \"ugC_L_perday\", \"Temperature (max)\")\n# two_params(allvent_data, ugC_L_perday, EUK_ml, \"ugC_L_perday\", \"Euk cells per ml\") + scale_y_log10()\n\n# two_params(allvent_data, EUK_ml, PROK_ml, \"Euk\", \"Prok\") + scale_y_log10() + scale_x_log10()"
  },
  {
    "objectID": "grazing.html#plot-euk-per-ml-with-temperature-and-grazing-rate",
    "href": "grazing.html#plot-euk-per-ml-with-temperature-and-grazing-rate",
    "title": "Protistan grazing analysis",
    "section": "15.1 Plot euk per ml with temperature and grazing rate",
    "text": "15.1 Plot euk per ml with temperature and grazing rate"
  },
  {
    "objectID": "asv.html#taxonomic-breakdown",
    "href": "asv.html#taxonomic-breakdown",
    "title": "18S survey",
    "section": "3.3 Taxonomic breakdown",
    "text": "3.3 Taxonomic breakdown\nTry to pair with dendrogram\n\n\nCode\nout_labels <- as.data.frame(mcr_dendro$labels)\nmcr_sample_order <- as.character(out_labels$label)\n\n\n\n\nCode\nalv <- c(\"Alveolata-Ellobiopsidae\", \"Alveolata-Perkinsea\", \"Alveolata-Unknown\", \"Alveolata-Chrompodellids\", \"Alveolata-Apicomplexa\")\n# head(asv_wtax_qc)\n\nbubble <- asv_wtax_qc %>% \n    filter(value > 0) %>% \n  # Avg seq count by ASV across replicates\n  group_by(SAMPLENAME, SITE, VENT, SAMPLETYPE, Taxon, FeatureID) %>% \n  summarise(avg_seq = mean(value)) %>% \n  # Separate and curate taxa information\n  # filter(SAMPLETYPE != \"Incubation\") %>% \n  separate(Taxon, c(\"Domain\", \"Supergroup\", \n                  \"Phylum\", \"Class\", \"Order\",\n                  \"Family\", \"Genus\", \"Species\"), sep = \";\") %>%\n  filter(Domain == \"Eukaryota\") %>% #select eukaryotes only\n  filter(Supergroup != \"Opisthokonta\") %>% # remove multicellular metazoa\n  mutate(Supergroup = ifelse(is.na(Supergroup), \"Unknown Eukaryota\", Supergroup),\n         Phylum = ifelse(is.na(Phylum), \"Unknown\", Phylum),\n         Phylum = ifelse(Phylum == \"Alveolata_X\", \"Ellobiopsidae\", Phylum),\n         Supergroup = ifelse(Supergroup == \"Alveolata\", paste(Supergroup, Phylum, sep = \"-\"), Supergroup)) %>% \n  mutate(SUPERGROUP = case_when(\n    Supergroup %in% alv ~ \"Other Alveolata\",\n    Supergroup == \"Eukaryota_X\" ~ \"Unknown Eukaryota\",\n    Phylum == \"Cercozoa\" ~ \"Rhizaria-Cercozoa\",\n    Phylum == \"Radiolaria\" ~ \"Rhizaria-Radiolaria\",\n    Phylum == \"Ochrophyta\" ~ \"Stramenopiles-Ochrophyta\",\n    Phylum == \"Opalozoa\" ~ \"Stramenopiles-Opalozoa\",\n    Phylum == \"Sagenista\" ~ \"Stramenopiles-Sagenista\",\n    TRUE ~ Supergroup\n  )) %>% \n  # Taxa to supergroup\n  mutate(SupergroupPhylum = SUPERGROUP) %>% \n  group_by(SAMPLENAME, SITE, VENT, SAMPLETYPE) %>% \n    mutate(TOTAL_SEQ = sum(avg_seq)) %>% \n  ungroup() %>% \n  group_by(SAMPLENAME, SITE, VENT, SAMPLETYPE, SUPERGROUP) %>% \n  summarise(SUM = sum(avg_seq),\n            REL_ABUN = SUM/TOTAL_SEQ) %>% \n  mutate(SAMPLENAME_ORDER = factor(SAMPLENAME, levels = mcr_sample_order)) %>% \n  ggplot(aes(x = SAMPLENAME_ORDER, y = SUPERGROUP, size = REL_ABUN)) +\n    geom_point(shape = 21, color = \"white\", aes(size = REL_ABUN, fill = SUPERGROUP, alpha = 0.4)) +\n    scale_size_continuous(range = c(2,14)) +\n  # facet_grid(. ~ SITE, scales = \"free\", space = \"free\") +\n  theme_minimal() +coord_flip() +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(color = \"black\", angle = 45, hjust = 1, vjust = 1))\n\n\n`summarise()` has grouped output by 'SAMPLENAME', 'SITE', 'VENT', 'SAMPLETYPE',\n'Taxon'. You can override using the `.groups` argument.\n\n\nWarning: Expected 8 pieces. Additional pieces discarded in 10924 rows [3, 10,\n11, 12, 13, 14, 18, 19, 20, 21, 23, 27, 28, 30, 31, 32, 33, 34, 35, 38, ...].\n\n\nWarning: Expected 8 pieces. Missing pieces filled with `NA` in 6487 rows [1, 2,\n4, 5, 6, 7, 8, 9, 15, 16, 17, 22, 24, 25, 26, 29, 36, 37, 48, 49, ...].\n\n\n`summarise()` has grouped output by 'SAMPLENAME', 'SITE', 'VENT', 'SAMPLETYPE',\n'SUPERGROUP'. You can override using the `.groups` argument.\n\n\nCode\nbubble\n\n\n\n\n\n\nDendrogram with bubble plot\n\n\nCode\n# mcr_dendro_plot + bubble + patchwork::plot_layout(ncol = 2) + patchwork::plot_annotation(tag_levels = \"a\")"
  },
  {
    "objectID": "asv.html#clr-change",
    "href": "asv.html#clr-change",
    "title": "18S survey",
    "section": "4.1 CLR change",
    "text": "4.1 CLR change\n\n\nCode\n# head(asv_wtax_qc)\ntmp_tax <- asv_wtax_qc %>% \n  filter(value > 0) %>% \n  select(FeatureID, Taxon) %>% \n  distinct()\n\nnumeric_tmp <- asv_wtax_qc %>% \n  filter(value > 0) %>% \n  group_by(FeatureID, SAMPLENAME, Taxon) %>% \n  summarise(MEAN_ACROSS_REPS = mean(value)) %>% \n  # unite(TAX, Taxon, FeatureID, sep = \"__\") %>% \n  select(FeatureID, SAMPLENAME, MEAN_ACROSS_REPS) %>% \n  pivot_wider(names_from = SAMPLENAME, values_from = MEAN_ACROSS_REPS, values_fill = 0) %>% \n  column_to_rownames(var = \"FeatureID\")\n\n\n`summarise()` has grouped output by 'FeatureID', 'SAMPLENAME'. You can override\nusing the `.groups` argument.\n\n\nCode\nlogratio_mcr <- data.frame(t(compositions::clr(t(numeric_tmp))))\n## From above \nhead(logratio_mcr)\n\n\n                                 VonDamm.Vent.2020.Rav2.\n0016c92095329cf769d2fc9f5a0b826c               0.4824678\n0024760a130d14a29d63bb07f082733e               0.0000000\n00508684a4c673b882a5d186733b3271              -1.7147568\n0052bc3663c02b5375d7472fdcb21cd0               0.0000000\n006c58bbe54f99c39fe7f3920319e5a8               0.0000000\n006df5d12667ab19d5ebbf6f0a786297               0.0000000\n                                 VonDamm.Incubation.2020.X18.\n0016c92095329cf769d2fc9f5a0b826c                    0.0000000\n0024760a130d14a29d63bb07f082733e                   -0.8797993\n00508684a4c673b882a5d186733b3271                    0.0000000\n0052bc3663c02b5375d7472fdcb21cd0                    0.0000000\n006c58bbe54f99c39fe7f3920319e5a8                    0.0000000\n006df5d12667ab19d5ebbf6f0a786297                    0.0000000\n                                 VonDamm.Plume.2020.Plume.\n0016c92095329cf769d2fc9f5a0b826c                  0.000000\n0024760a130d14a29d63bb07f082733e                  0.000000\n00508684a4c673b882a5d186733b3271                  0.000000\n0052bc3663c02b5375d7472fdcb21cd0                 -1.998135\n006c58bbe54f99c39fe7f3920319e5a8                 -1.528132\n006df5d12667ab19d5ebbf6f0a786297                  0.000000\n                                 VonDamm.Vent.2020.OldManTree.\n0016c92095329cf769d2fc9f5a0b826c                     0.0000000\n0024760a130d14a29d63bb07f082733e                     0.0000000\n00508684a4c673b882a5d186733b3271                     0.0000000\n0052bc3663c02b5375d7472fdcb21cd0                     0.0000000\n006c58bbe54f99c39fe7f3920319e5a8                     0.0000000\n006df5d12667ab19d5ebbf6f0a786297                    -0.8247801\n                                 Piccard.Incubation.2020.LotsOShrimp.\n0016c92095329cf769d2fc9f5a0b826c                                    0\n0024760a130d14a29d63bb07f082733e                                    0\n00508684a4c673b882a5d186733b3271                                    0\n0052bc3663c02b5375d7472fdcb21cd0                                    0\n006c58bbe54f99c39fe7f3920319e5a8                                    0\n006df5d12667ab19d5ebbf6f0a786297                                    0\n                                 Piccard.Vent.2020.LotsOShrimp.\n0016c92095329cf769d2fc9f5a0b826c                              0\n0024760a130d14a29d63bb07f082733e                              0\n00508684a4c673b882a5d186733b3271                              0\n0052bc3663c02b5375d7472fdcb21cd0                              0\n006c58bbe54f99c39fe7f3920319e5a8                              0\n006df5d12667ab19d5ebbf6f0a786297                              0\n                                 Piccard.Vent.2020.Shrimpocalypse.\n0016c92095329cf769d2fc9f5a0b826c                                 0\n0024760a130d14a29d63bb07f082733e                                 0\n00508684a4c673b882a5d186733b3271                                 0\n0052bc3663c02b5375d7472fdcb21cd0                                 0\n006c58bbe54f99c39fe7f3920319e5a8                                 0\n006df5d12667ab19d5ebbf6f0a786297                                 0\n                                 VonDamm.Incubation.2020.MustardStand.\n0016c92095329cf769d2fc9f5a0b826c                                     0\n0024760a130d14a29d63bb07f082733e                                     0\n00508684a4c673b882a5d186733b3271                                     0\n0052bc3663c02b5375d7472fdcb21cd0                                     0\n006c58bbe54f99c39fe7f3920319e5a8                                     0\n006df5d12667ab19d5ebbf6f0a786297                                     0\n                                 VonDamm.Incubation.2020.Rav2.\n0016c92095329cf769d2fc9f5a0b826c                             0\n0024760a130d14a29d63bb07f082733e                             0\n00508684a4c673b882a5d186733b3271                             0\n0052bc3663c02b5375d7472fdcb21cd0                             0\n006c58bbe54f99c39fe7f3920319e5a8                             0\n006df5d12667ab19d5ebbf6f0a786297                             0\n                                 VonDamm.Vent.2020.ArrowLoop.\n0016c92095329cf769d2fc9f5a0b826c                            0\n0024760a130d14a29d63bb07f082733e                            0\n00508684a4c673b882a5d186733b3271                            0\n0052bc3663c02b5375d7472fdcb21cd0                            0\n006c58bbe54f99c39fe7f3920319e5a8                            0\n006df5d12667ab19d5ebbf6f0a786297                            0\n                                 Piccard.Incubation.2020.Shrimpocalypse.\n0016c92095329cf769d2fc9f5a0b826c                                       0\n0024760a130d14a29d63bb07f082733e                                       0\n00508684a4c673b882a5d186733b3271                                       0\n0052bc3663c02b5375d7472fdcb21cd0                                       0\n006c58bbe54f99c39fe7f3920319e5a8                                       0\n006df5d12667ab19d5ebbf6f0a786297                                       0\n                                 VonDamm.Vent.2020.ShrimpHole.\n0016c92095329cf769d2fc9f5a0b826c                             0\n0024760a130d14a29d63bb07f082733e                             0\n00508684a4c673b882a5d186733b3271                             0\n0052bc3663c02b5375d7472fdcb21cd0                             0\n006c58bbe54f99c39fe7f3920319e5a8                             0\n006df5d12667ab19d5ebbf6f0a786297                             0\n                                 VonDamm.Vent.2020.X18.\n0016c92095329cf769d2fc9f5a0b826c                      0\n0024760a130d14a29d63bb07f082733e                      0\n00508684a4c673b882a5d186733b3271                      0\n0052bc3663c02b5375d7472fdcb21cd0                      0\n006c58bbe54f99c39fe7f3920319e5a8                      0\n006df5d12667ab19d5ebbf6f0a786297                      0\n                                 Piccard.Background.2020.BSW.\n0016c92095329cf769d2fc9f5a0b826c                            0\n0024760a130d14a29d63bb07f082733e                            0\n00508684a4c673b882a5d186733b3271                            0\n0052bc3663c02b5375d7472fdcb21cd0                            0\n006c58bbe54f99c39fe7f3920319e5a8                            0\n006df5d12667ab19d5ebbf6f0a786297                            0\n                                 VonDamm.Incubation.2020.Plume.\n0016c92095329cf769d2fc9f5a0b826c                              0\n0024760a130d14a29d63bb07f082733e                              0\n00508684a4c673b882a5d186733b3271                              0\n0052bc3663c02b5375d7472fdcb21cd0                              0\n006c58bbe54f99c39fe7f3920319e5a8                              0\n006df5d12667ab19d5ebbf6f0a786297                              0\n                                 VonDamm.Incubation.2020.ShrimpHole.\n0016c92095329cf769d2fc9f5a0b826c                                   0\n0024760a130d14a29d63bb07f082733e                                   0\n00508684a4c673b882a5d186733b3271                                   0\n0052bc3663c02b5375d7472fdcb21cd0                                   0\n006c58bbe54f99c39fe7f3920319e5a8                                   0\n006df5d12667ab19d5ebbf6f0a786297                                   0\n                                 VonDamm.Background.2020.BSW.\n0016c92095329cf769d2fc9f5a0b826c                            0\n0024760a130d14a29d63bb07f082733e                            0\n00508684a4c673b882a5d186733b3271                            0\n0052bc3663c02b5375d7472fdcb21cd0                            0\n006c58bbe54f99c39fe7f3920319e5a8                            0\n006df5d12667ab19d5ebbf6f0a786297                            0\n                                 VonDamm.Incubation.2020.BSW.\n0016c92095329cf769d2fc9f5a0b826c                            0\n0024760a130d14a29d63bb07f082733e                            0\n00508684a4c673b882a5d186733b3271                            0\n0052bc3663c02b5375d7472fdcb21cd0                            0\n006c58bbe54f99c39fe7f3920319e5a8                            0\n006df5d12667ab19d5ebbf6f0a786297                            0\n                                 Piccard.Plume.2020.Plume.\n0016c92095329cf769d2fc9f5a0b826c                         0\n0024760a130d14a29d63bb07f082733e                         0\n00508684a4c673b882a5d186733b3271                         0\n0052bc3663c02b5375d7472fdcb21cd0                         0\n006c58bbe54f99c39fe7f3920319e5a8                         0\n006df5d12667ab19d5ebbf6f0a786297                         0\n                                 VonDamm.Vent.2020.WhiteCastle.\n0016c92095329cf769d2fc9f5a0b826c                              0\n0024760a130d14a29d63bb07f082733e                              0\n00508684a4c673b882a5d186733b3271                              0\n0052bc3663c02b5375d7472fdcb21cd0                              0\n006c58bbe54f99c39fe7f3920319e5a8                              0\n006df5d12667ab19d5ebbf6f0a786297                              0\n                                 VonDamm.Vent.2020.MustardStand.\n0016c92095329cf769d2fc9f5a0b826c                               0\n0024760a130d14a29d63bb07f082733e                               0\n00508684a4c673b882a5d186733b3271                               0\n0052bc3663c02b5375d7472fdcb21cd0                               0\n006c58bbe54f99c39fe7f3920319e5a8                               0\n006df5d12667ab19d5ebbf6f0a786297                               0\n\n\nReformat to generate dot plot\n\n\nCode\ntmp <- logratio_mcr %>% \n  rownames_to_column(var = \"FeatureID\") %>% \n  pivot_longer((starts_with(\"VonDamm.Incubation\") | starts_with(\"Piccard.Incubation\")), names_to = \"TF\", values_to = \"tf_clr\") %>% \n  pivot_longer((starts_with(\"VonDamm.\") | starts_with(\"Piccard.\")), names_to = \"IN SITU\", values_to = \"insitu_clr\") %>% \n  left_join(select(taxa_table, FeatureID, Domain:Species) %>% distinct()) %>% \n  filter(Domain == \"Eukaryota\") %>%\n  filter(Supergroup != \"Opisthokonta\") %>% \n  mutate(Supergroup = ifelse(is.na(Supergroup), \"Unknown Eukaryota\", Supergroup),\n         Phylum = ifelse(is.na(Phylum), \"Unknown\", Phylum),\n         Phylum = ifelse(Phylum == \"Alveolata_X\", \"Ellobiopsidae\", Phylum),\n         Supergroup = ifelse(Supergroup == \"Alveolata\", paste(Supergroup, Phylum, sep = \"-\"), Supergroup)) %>% \n  mutate(SUPERGROUP = case_when(\n    Supergroup %in% alv ~ \"Other Alveolata\",\n    Supergroup == \"Eukaryota_X\" ~ \"Unknown Eukaryota\",\n    Phylum == \"Cercozoa\" ~ \"Rhizaria-Cercozoa\",\n    Phylum == \"Radiolaria\" ~ \"Rhizaria-Radiolaria\",\n    Phylum == \"Ochrophyta\" ~ \"Stramenopiles-Ochrophyta\",\n    Phylum == \"Opalozoa\" ~ \"Stramenopiles-Opalozoa\",\n    Phylum == \"Sagenista\" ~ \"Stramenopiles-Sagenista\",\n    TRUE ~ Supergroup\n  )) %>%\n  separate(TF, into = c(\"TYPE_TF\", \"VENT_TF\"), sep = \".2020.\", remove = FALSE) %>% \n  separate(`IN SITU`, into = c(\"TYPE_insitu\", \"VENT_insitu\"), sep = \".2020.\", remove = FALSE) %>% \n  filter(VENT_insitu == VENT_TF) %>% \n  separate(TYPE_TF, into=c(\"SITE\", \"TF\"), sep = \"\\\\.\") %>% separate(TYPE_insitu, into = c(\"SITE\", \"SAMPLETYPE\"), sep = \"\\\\.\")\n\n\nJoining, by = \"FeatureID\"\n\n\nCode\n# ?pivot_longer\nhead(tmp)\n\n\n# A tibble: 6 × 18\n  FeatureID    VENT_TF TF    tf_clr IN SI…¹ VENT_…² SITE  SAMPL…³ insit…⁴ Domain\n  <chr>        <chr>   <chr>  <dbl> <chr>   <chr>   <chr> <chr>     <dbl> <chr> \n1 0016c920953… X18.    Incu…      0 VonDam… X18.    VonD… Vent      0     Eukar…\n2 0016c920953… Mustar… Incu…      0 VonDam… Mustar… VonD… Vent      0     Eukar…\n3 0016c920953… Rav2.   Incu…      0 VonDam… Rav2.   VonD… Vent      0.482 Eukar…\n4 0016c920953… Plume.  Incu…      0 VonDam… Plume.  VonD… Plume     0     Eukar…\n5 0016c920953… Plume.  Incu…      0 Piccar… Plume.  Picc… Plume     0     Eukar…\n6 0016c920953… Shrimp… Incu…      0 VonDam… Shrimp… VonD… Vent      0     Eukar…\n# … with 8 more variables: Supergroup <chr>, Phylum <chr>, Class <chr>,\n#   Order <chr>, Family <chr>, Genus <chr>, Species <chr>, SUPERGROUP <chr>,\n#   and abbreviated variable names ¹​`IN SITU`, ²​VENT_insitu, ³​SAMPLETYPE,\n#   ⁴​insitu_clr\n\n\nTry x by y comparison.\n\n\nCode\ntmp %>% \n  filter(tf_clr != 0) %>%\n  filter(insitu_clr != 0) %>%\n  ggplot(aes(x = insitu_clr, y = tf_clr, fill = SUPERGROUP)) +\n  geom_jitter(shape = 21, color = \"black\") +\n  facet_grid(VENT_insitu ~ SUPERGROUP) +\n  coord_fixed(ratio = 1) +\n  scale_x_continuous(limits = c(-5,8)) + scale_y_continuous(limits = c(-5,8)) +\n  theme_minimal() +\n  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)\n\n\nWarning: Removed 1 rows containing missing values (geom_point).\n\n\n\n\n\nTO DO: Make table with total starting ASVs, number that were shared, and final in the Tf. Alluvial plots? from T0 to Tf by supergroup? Then more detailed plots like the above can be in supplemental?"
  },
  {
    "objectID": "grazing.html#grazing-rate-vs.-cells-ml",
    "href": "grazing.html#grazing-rate-vs.-cells-ml",
    "title": "Protistan grazing analysis",
    "section": "12.1 Grazing rate vs. cells ml",
    "text": "12.1 Grazing rate vs. cells ml\nCombine metadata from environment with grazing rate results.\n\n\nCode\n# head(table_wcalcs)\n# View(mcr_metadata)\n# Modify fluid origin to match metadata and results\nmod_metadata &lt;- mcr_metadata %&gt;% \n  filter(SAMPLETYPE != \"Incubation\") %&gt;%\n  filter(VENT != \"Quakeplume\") %&gt;% \n  separate(FLUID_ORIGIN, into = c(\"FLUID\", \"HOG\"), sep = \"HOG\", remove = FALSE) %&gt;% \n  separate(FLUID_ORIGIN, into = c(\"FLUID2\", \"excess\"), sep = \"J2\", remove = FALSE) %&gt;% \n  separate(excess, into = c(\"FLUID3\", \"hogexcess\"), sep = \"HOG\", remove = FALSE) %&gt;% \n  mutate(FLUID_ORIGIN = case_when(\n    FLUID2 == \"CTD003\" ~ \"CTD001\", #Correction for plume VD\n    is.na(FLUID3) ~ FLUID2,\n    TRUE ~ paste(\"J2-\", FLUID3, sep = \"\")\n  )) %&gt;% \n  select(-FLUID, -FLUID2, -FLUID3, -HOG, -excess, -hogexcess) %&gt;% \n  mutate(Name = case_when(\n    VENT == \"OldManTree\" ~ \"OMT\",\n    TRUE ~ VENT\n  ))\n\n\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 4 rows [1, 2, 6, 7].\nExpected 2 pieces. Missing pieces filled with `NA` in 4 rows [1, 2, 6, 7].\n\n\nCode\n# unique(table_wcalcs$Name)\n# mod_metadata\n# setdiff(mod_metadata$FLUID_ORIGIN, table_wcalcs$FLUID_ORIGIN)\n\ngrazing_wenv &lt;- table_wcalcs %&gt;% \n  select(SiteOrder, Name, Experiment_rep, FLUID_ORIGIN, RATE_minute, starts_with(\"EUK_\"), starts_with(\"PROK_\"), starts_with(\"GRAZING_EFFECT\"), CLEARANCE_RATE_ml, SPEC_GRAZE_RATE_hr, BAC_TURNOVER_PERC) %&gt;%\n  left_join(mod_metadata, join_by(Name == Name, FLUID_ORIGIN == FLUID_ORIGIN))\n\n# View(grazing_wenv)\n\n\n\n\nCode\n# View(plot_metadata)\neuk_temp &lt;- grazing_wenv %&gt;% \n    mutate(TEMP = as.numeric(temp)) %&gt;% \n    mutate(EXP_TYPE = case_when(\n      grepl(\"IGT\", Experiment_rep) ~ \"IGT\",\n      TRUE ~ \"Shipboard\"\n    )) %&gt;% \n  unite(SITE_TYPE, SiteOrder, EXP_TYPE, sep = \"-\", remove = FALSE) %&gt;% \n  filter(!(SITE_TYPE == \"NA-IGT\")) %&gt;% \n  ggplot(aes(x = GRAZING_EFFECT_hr, y = EUK_ml, \n             fill = TEMP, color = TEMP, shape = SITE_TYPE)) +\n    # geom_errorbar(aes(ymin = (log10(EUK_ml)-(EUK_sem)),ymax = (log10(EUK_ml)+(EUK_sem)))) +\n    #   geom_errorbarh(aes(xmin = log10(GRAZING_EFFECT_hr_min),xmax = log10(GRAZING_EFFECT_hr_max))) +\n  geom_errorbar(aes(ymin = ((EUK_ml)-(EUK_sem)),ymax = ((EUK_ml)+(EUK_sem))), color = \"black\") +\n      geom_errorbarh(aes(xmin = (GRAZING_EFFECT_hr_min),xmax = (GRAZING_EFFECT_hr_max)), color = \"black\") +\n  # geom_point(aes(shape = EXP_TYPE), size = 4, stroke = 2) +\n  geom_point(aes(shape = SITE_TYPE), size = 4, stroke = 2) +\n  scale_y_log10() + \n  scale_x_log10() +\n  scale_shape_manual(values = c(2, 24, 6, 25)) +\n  scale_fill_distiller(palette = \"YlOrRd\", direction=2, na.value = \"grey50\") +\n  scale_color_distiller(palette = \"YlOrRd\", direction=2, na.value = \"grey50\") +\n  theme_minimal() +\n    theme(rect = element_rect(fill = \"transparent\"),\n        # panel.background = element_rect(fill = \"transparent\"),\n        panel.background = element_rect(fill = \"#f0f0f0\"),\n        plot.background = element_rect(fill = \"transparent\", color = NA),\n        panel.grid.major = element_line(color = \"#737373\"), panel.grid.minor = element_blank(),\n           axis.line = element_line(colour = \"black\"), \n           axis.text.x = element_text(color=\"black\", size = 13), \n           axis.text.y = element_text(color=\"black\", size = 13),\n           axis.title =element_text(color=\"black\", size = 13),\n           axis.ticks = element_line(),\n           strip.text =element_blank(), legend.title = element_blank()) +\n  labs(x = bquote(\"Cells consumed \"~mL^-1 ~hr^-1), y = bquote(\"Eukaryote cells \"~mL^-1),\n       title = \"\")\n\neuk_temp\n\n\nWarning: Transformation introduced infinite values in continuous x-axis\nTransformation introduced infinite values in continuous x-axis\nTransformation introduced infinite values in continuous x-axis\nTransformation introduced infinite values in continuous x-axis\nTransformation introduced infinite values in continuous x-axis\n\n\nWarning: Removed 6 rows containing missing values (`geom_errorbarh()`).\n\n\n\n\n\n\n\nCode\nprok_temp &lt;- grazing_wenv %&gt;% \n    mutate(TEMP = as.numeric(temp)) %&gt;% \n    mutate(EXP_TYPE = case_when(\n      grepl(\"IGT\", Experiment_rep) ~ \"IGT\",\n      TRUE ~ \"Shipboard\"\n    )) %&gt;% \n  unite(SITE_TYPE, SiteOrder, EXP_TYPE, sep = \"-\", remove = FALSE) %&gt;% \n    filter(!(SITE_TYPE == \"NA-IGT\")) %&gt;% \n  ggplot(aes(x = GRAZING_EFFECT_hr, y = PROK_ml, \n             fill = TEMP, color = TEMP, shape = SITE_TYPE)) +\n  geom_errorbar(aes(ymin = ((PROK_ml)-(PROK_sem)),ymax = ((PROK_ml)+(PROK_sem))), color = \"black\") +\n      geom_errorbarh(aes(xmin = (GRAZING_EFFECT_hr_min),xmax = (GRAZING_EFFECT_hr_max)), color = \"black\") +\n  geom_point(aes(shape = SITE_TYPE), size = 4, stroke = 2) +\n  scale_y_log10(labels = scientific_10) + \n  scale_x_log10() +\n  # scale_shape_manual(values = c(1, 19)) +\n  scale_shape_manual(values = c(2, 24, 6, 25)) +\n  scale_fill_distiller(palette = \"YlOrRd\", direction=2, na.value = \"grey50\") +\n  scale_color_distiller(palette = \"YlOrRd\", direction=2, na.value = \"grey50\") +\n  theme_minimal() +\n    theme(rect = element_rect(fill = \"transparent\"),\n        # panel.background = element_rect(fill = \"transparent\"),\n       panel.background = element_rect(fill = \"#f0f0f0\"),\n        plot.background = element_rect(fill = \"transparent\", color = NA),\n        panel.grid.major = element_line(color = \"#737373\"), panel.grid.minor = element_blank(),\n           axis.line = element_line(colour = \"black\"), \n           axis.text.x = element_text(color=\"black\", size = 13), \n           axis.text.y = element_text(color=\"black\", size = 13),\n           axis.title =element_text(color=\"black\", size = 13),\n           axis.ticks = element_line(),\n           strip.text =element_blank(), legend.title = element_blank()) +\n  labs(x = bquote(\"Cells consumed \"~mL^-1 ~hr^-1), y = bquote(\"Microbial prey cells \"~mL^-1),\n       title = \"\")\n\nprok_temp\n\n\nWarning: Transformation introduced infinite values in continuous x-axis\nTransformation introduced infinite values in continuous x-axis\nTransformation introduced infinite values in continuous x-axis\nTransformation introduced infinite values in continuous x-axis\nTransformation introduced infinite values in continuous x-axis\n\n\nWarning: Removed 6 rows containing missing values (`geom_errorbarh()`)."
  },
  {
    "objectID": "grazing.html#plot-temperature-by-eukprok-and-then-euk-and-prok",
    "href": "grazing.html#plot-temperature-by-eukprok-and-then-euk-and-prok",
    "title": "Protistan grazing analysis",
    "section": "15.4 Plot temperature by euk:prok and then euk and prok",
    "text": "15.4 Plot temperature by euk:prok and then euk and prok\n\n\nCode\ntwo_params(allvent_data, `PROK_EUK_RATIO`, `Highest.Temp`, \"Prok:Euk ratio\", \"Temperature (max)\")\n\n\nWarning: Removed 5 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "sequence-qc.html",
    "href": "sequence-qc.html",
    "title": "Sequence QC",
    "section": "",
    "text": "Set up R environment\n\n\nCode\nlibrary(tidyverse); library(phyloseq); library(ape)\n\n\nImport previously sequenced and analyzed tag-sequence data. See https://shu251.github.io/microeuk-amplicon-survey/ for additional information."
  },
  {
    "objectID": "sequence-qc.html#sequence-stats",
    "href": "sequence-qc.html#sequence-stats",
    "title": "Sequence QC",
    "section": "2.1 Sequence stats",
    "text": "2.1 Sequence stats\nTotal ASVs and sequences for each sample.\n\n\nCode\nasv_wtax_qc %>% \n  filter(value > 0) %>% \n  group_by(SAMPLE, VENT, SITE) %>% \n  summarise(SUM_stats = sum(value),\n            ASV_stats = n_distinct(FeatureID)) %>% \n  pivot_longer(cols = ends_with(\"_stats\")) %>% \n  ggplot(aes(x = SAMPLE, y = value)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() + \n  # geom_hline(yintercept=10000, linetype=\"dashed\", color = \"green\") +\n  facet_grid(. ~ name, scales = \"free\") +\n  theme_linedraw()\n\n\n`summarise()` has grouped output by 'SAMPLE', 'VENT'. You can override using\nthe `.groups` argument.\n\n\n\n\n\nCreate supplementary table with ASV and sequence stats.\n\n\nCode\ntable_supp_seqstats <- asv_wtax_qc %>% \n  filter(value > 0) %>% \n  group_by(SAMPLE, VENT, SITE) %>% \n  summarise(SUM_stats = sum(value),\n            ASV_stats = n_distinct(FeatureID))\n\n\n`summarise()` has grouped output by 'SAMPLE', 'VENT'. You can override using\nthe `.groups` argument.\n\n\nCode\n# write.csv(table_supp_seqstats, file = \"output-data/supp-table-sequencestats.csv\")"
  },
  {
    "objectID": "grazing.html#c-factor-based-on-biovolume",
    "href": "grazing.html#c-factor-based-on-biovolume",
    "title": "Protistan grazing analysis",
    "section": "8.1 C factor based on biovolume",
    "text": "8.1 C factor based on biovolume\n\nCalculate biovolume based on observed/imaged cells\n\n\n\nCode\n# Calculate biovolume, then apply carbon by biomass estimate for protists derived from biovolume.\n# h = largest cell dimension \"height\"\n# d = largest cross-section of h\nbiov_calc &lt;- biov %&gt;% \n  mutate(BIOVOLUME = ((pi/6) * (d^2) * h)) %&gt;% # Calculate volume (um cubed) # Hillebrand et al. 1999\n  mutate(pgC_cell_MD_dino = (0.760 * (BIOVOLUME^0.819))) %&gt;% # Menden-Deuer and Lessard 2000\n  mutate(pgC_cell_MD_nodiatom = (0.216 * (BIOVOLUME^0.939))) # Menden-Deuer and Lessard 2000\n# head(biov_calc)\n# biov_calc\n# mean(c(80, 360))\n# no diatom is what Pernice used.\n\n\nUse pgC_cell_MD_nodiatom moving forward.\n\nGet a summary pg per cell for vent and background samples. This is derived from biovolume estimates."
  },
  {
    "objectID": "grazing.html#c-biomass-based-on-size-fraction",
    "href": "grazing.html#c-biomass-based-on-size-fraction",
    "title": "Protistan grazing analysis",
    "section": "8.3 C biomass based on size fraction",
    "text": "8.3 C biomass based on size fraction\nDerived from Caron et al. 1995\n\nAssign by size class\n\nAssuming conversion factor is 183 fg C per um.\nFor nanoplankton &lt;20um, picoplankton are included for now. We are assuming the size range of nanoplankton are 3um.\n\n\nCode\nvol_nano &lt;- (4/3) * pi * (3^3)\nvol_nano # units are um^3\n\n\n[1] 113.0973\n\n\nCode\nfg_nano_c &lt;- 183 * vol_nano #units are now fg per C\nc_n &lt;- (fg_nano_c)/1000\nc_n\n\n\n[1] 20.69681\n\n\nFor microplankton, we are assuming the cell diameter is 50 um.\n\n\nCode\nvol_micr &lt;- (4/3) * pi * (50^3)\nvol_micr # units are um^3\n\n\n[1] 523598.8\n\n\nCode\nfg_micr_c &lt;- 183 * vol_micr #units are now fg per C\nc_m &lt;- (fg_micr_c)/1000\nc_m\n\n\n[1] 95818.58\n\n\n\n\nCode\nc_n\n\n\n[1] 20.69681\n\n\nCode\nc_m * (1e-6)\n\n\n[1] 0.09581858\n\n\nCode\n# 1pg to 1e-6ug\n\n\n\n\nCode\npgC_ml_sizefrac_bysample_tmp &lt;- counts_cellsml_avg %&gt;% \n  mutate(IGT_REP = case_when(\n    IGT_REP == \"Bag\" ~ \"Shipboard\",\n    TRUE ~ IGT_REP\n  )) %&gt;% \n  unite(\"Experiment_rep\", Name, IGT_REP, sep = \"-\", remove = FALSE) %&gt;% \n  filter(TimePoint == \"T0\") %&gt;%\n  filter(VARIABLE != \"eukCONC\") %&gt;% # isolate micro vs. nano\n  mutate(SAMPLE_TYPE_BIN = case_when(\n    Name == \"Background\" ~ \"Non-vent\",\n    Name == \"Plume\" ~ \"Non-vent\",\n    TRUE ~ \"Vent\"\n  )) %&gt;% \n  mutate(pg_C_cell = case_when(\n    VARIABLE == \"microCONC\" ~ c_m,\n    VARIABLE == \"nanoCONC\" ~ c_n\n  )) %&gt;% \n  # multiply mean cells per ml of micro and nano by pg C for each size fraction:\n  mutate(pg_C_ml_TMP = MEAN * pg_C_cell) %&gt;% \n  group_by(Experiment_rep, Site, Name, TimePoint, EXP_TYPE, IGT_REP, SAMPLE_TYPE_BIN, VARIABLE) %&gt;% \n  # Take the average of the micro and nano for each experiment.\n  summarise(pg_C_ml = mean(pg_C_ml_TMP))\n\n\n`summarise()` has grouped output by 'Experiment_rep', 'Site', 'Name',\n'TimePoint', 'EXP_TYPE', 'IGT_REP', 'SAMPLE_TYPE_BIN'. You can override using\nthe `.groups` argument.\n\n\nCode\n# Isolate total euk for each experiment by adding.\ntmp2 &lt;- pgC_ml_sizefrac_bysample_tmp %&gt;% \n  group_by(Experiment_rep, Site, Name, TimePoint, EXP_TYPE, IGT_REP, SAMPLE_TYPE_BIN) %&gt;% \n  # Add across micro and nano to get total\n  summarize(pg_C_ml = sum(pg_C_ml)) %&gt;% \n  add_column(VARIABLE = \"totaleuk\")\n\n\n`summarise()` has grouped output by 'Experiment_rep', 'Site', 'Name',\n'TimePoint', 'EXP_TYPE', 'IGT_REP'. You can override using the `.groups`\nargument.\n\n\nCode\npgC_ml_sizefrac_bysample &lt;- rbind(tmp2, pgC_ml_sizefrac_bysample_tmp)\npgC_ml_sizefrac_bysample\n\n\n# A tibble: 51 × 9\n# Groups:   Experiment_rep, Site, Name, TimePoint, EXP_TYPE, IGT_REP [17]\n   Experiment_rep Site  Name  TimePoint EXP_TYPE IGT_REP SAMPLE_TYPE_BIN pg_C_ml\n   &lt;chr&gt;          &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;             &lt;dbl&gt;\n 1 BSW-Shipboard  VD    BSW   T0        Bag      Shipbo… Vent             1.90e3\n 2 LotsOShrimp-S… Picc… Lots… T0        Bag      Shipbo… Vent             4.78e3\n 3 MustardStand-… VD    Must… T0        Bag      Shipbo… Vent             5.38e3\n 4 OMT-IGT4       VD    OMT   T0        IGT      IGT4    Vent             6.71e6\n 5 OMT-IGT4b      VD    OMT   T0        IGT      IGT4b   Vent             1.34e7\n 6 Plume-Shipboa… Picc… Plume T0        Bag      Shipbo… Non-vent         8.95e5\n 7 Plume-Shipboa… VD    Plume T0        Bag      Shipbo… Non-vent         2.19e6\n 8 Rav2-IGT4      VD    Rav2  T0        IGT      IGT4    Vent             1.96e4\n 9 Rav2-IGT4b     VD    Rav2  T0        IGT      IGT4b   Vent             3.36e6\n10 Rav2-IGT5      VD    Rav2  T0        IGT      IGT5    Vent             6.72e6\n# ℹ 41 more rows\n# ℹ 1 more variable: VARIABLE &lt;chr&gt;\n\n\n\n\nCode\npgC_ml_sizefrac_bysample %&gt;% \n  group_by(SAMPLE_TYPE_BIN, VARIABLE) %&gt;% \n  summarise(MEAN_pg_C_ml = mean(pg_C_ml),\n            MAX_pg_C_ml = max(pg_C_ml),\n            MIN_pg_C_ml = min(pg_C_ml))\n\n\n`summarise()` has grouped output by 'SAMPLE_TYPE_BIN'. You can override using\nthe `.groups` argument.\n\n\n# A tibble: 6 × 5\n# Groups:   SAMPLE_TYPE_BIN [2]\n  SAMPLE_TYPE_BIN VARIABLE  MEAN_pg_C_ml MAX_pg_C_ml MIN_pg_C_ml\n  &lt;chr&gt;           &lt;chr&gt;            &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;\n1 Non-vent        microCONC     1542774.    2191604.     893944.\n2 Non-vent        nanoCONC         2120.       2792.       1448.\n3 Non-vent        totaleuk      1544894.    2194397.     895392.\n4 Vent            microCONC     3559014.   13409159.          0 \n5 Vent            nanoCONC         8180.      19551.       1901.\n6 Vent            totaleuk      3567194.   13418572.       1901.\n\n\nCode\nhead(pgC_ml_sizefrac_bysample)\n\n\n# A tibble: 6 × 9\n# Groups:   Experiment_rep, Site, Name, TimePoint, EXP_TYPE, IGT_REP [6]\n  Experiment_rep  Site  Name  TimePoint EXP_TYPE IGT_REP SAMPLE_TYPE_BIN pg_C_ml\n  &lt;chr&gt;           &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;             &lt;dbl&gt;\n1 BSW-Shipboard   VD    BSW   T0        Bag      Shipbo… Vent             1.90e3\n2 LotsOShrimp-Sh… Picc… Lots… T0        Bag      Shipbo… Vent             4.78e3\n3 MustardStand-S… VD    Must… T0        Bag      Shipbo… Vent             5.38e3\n4 OMT-IGT4        VD    OMT   T0        IGT      IGT4    Vent             6.71e6\n5 OMT-IGT4b       VD    OMT   T0        IGT      IGT4b   Vent             1.34e7\n6 Plume-Shipboard Picc… Plume T0        Bag      Shipbo… Non-vent         8.95e5\n# ℹ 1 more variable: VARIABLE &lt;chr&gt;\n\n\n\n\nCode\nby_sizefrac_plot &lt;- pgC_ml_sizefrac_bysample %&gt;% \n   mutate(NameOrder = factor(Name, levels = vent_ids, labels = vent_fullname)) %&gt;%\n  mutate(SiteOrder = factor(Site, levels = site_ids, labels = site_fullname)) %&gt;% \n  ggplot(aes(x = Experiment_rep, y = (pg_C_ml))) +\n    geom_point(color = \"black\", aes(shape = VARIABLE)) + \n    # geom_linerange(aes(ymin = (pgC_ml_min/1000), ymax = (pgC_ml_max/1000))) +\n  facet_grid(.~SiteOrder + NameOrder, space = \"free\", scales = \"free\") +\n  scale_y_continuous(labels = scientific_10) +\n    theme_minimal() +\n    theme(panel.grid.major = element_line(), panel.grid.minor = element_blank(),\n           panel.background = element_blank(), \n           axis.line = element_line(colour = \"black\"), \n           axis.text.x = element_text(color=\"black\", size = 12, \n                                      angle = 45, hjust = 1, vjust = 1), \n           axis.text.y = element_text(color=\"black\", size = 12),\n           axis.title =element_text(color=\"black\", size = 12),\n           axis.ticks = element_line(),\n           strip.text =element_blank(), legend.title = element_blank())+\n    guides(fill = guide_legend(override.aes = list(shape = c(21))),\n       shape = guide_legend(override.aes = list(fill = \"black\"))) +\n    labs(x = \"\", y = bquote(\"Estimated total biomass: pg C \" ~ml^-1),\n         title = \"Carbon pool of protists - based on size fraction\")\n\n\nCombined supplementary plot showing two routes of determining total biomass."
  },
  {
    "objectID": "grazing.html#compare-total-carbon-biomass---euks",
    "href": "grazing.html#compare-total-carbon-biomass---euks",
    "title": "Protistan grazing analysis",
    "section": "8.5 Compare total carbon biomass - euks",
    "text": "8.5 Compare total carbon biomass - euks\nCompilation table of carbon biomass values for microeukaryotes by sample type and vent field\n\nTable S4\n\n\nCode\n## Carbon biomass derived from biovolume, by vent field (vent only)\ntable4_cbiomass_total &lt;- pgC_ml_biov_bysample %&gt;% \n  group_by(VARIABLE, Site, EXP_TYPE, SAMPLE_TYPE_BIN) %&gt;% \n  summarise(MEAN_pg_C_ml = mean(pgC_ml_mean),\n            MAX_pg_C_ml = max(pgC_ml_mean),\n            MIN_pg_C_ml = min(pgC_ml_mean)) %&gt;% \n  add_column(ORIGIN = \"bybiovolume\") %&gt;% \n  rbind(pgC_ml_sizefrac_bysample %&gt;% \n  group_by(VARIABLE, Site, SAMPLE_TYPE_BIN, EXP_TYPE) %&gt;% \n  summarise(MEAN_pg_C_ml = mean(pg_C_ml),\n            MAX_pg_C_ml = max(pg_C_ml),\n            MIN_pg_C_ml = min(pg_C_ml)) %&gt;% \n  add_column(ORIGIN = \"sizefrac\")\n  )\n\n\n`summarise()` has grouped output by 'VARIABLE', 'Site', 'EXP_TYPE'. You can\noverride using the `.groups` argument.\n`summarise()` has grouped output by 'VARIABLE', 'Site', 'SAMPLE_TYPE_BIN'. You\ncan override using the `.groups` argument.\n\n\nCode\n# table4_cbiomass_total\nwrite.csv(table4_cbiomass_total, file = \"output-data/tableS4-cbiomass.csv\")"
  },
  {
    "objectID": "grazing.html#compare-biovolumes-from-literature-to-measured-in-this-study",
    "href": "grazing.html#compare-biovolumes-from-literature-to-measured-in-this-study",
    "title": "Protistan grazing analysis",
    "section": "8.6 Compare biovolumes from literature to measured in this study",
    "text": "8.6 Compare biovolumes from literature to measured in this study\nCompare with Menden-Deuer and Lessard 2000, Table 2 - using only the heterotrophic species measured. Based on Table 2, the min volume was 4745 and the maximum was 1.2 x10^7 µm^3. Carbon content was measured at pg per cell, this was 469.48-35,339 pg per cell.\nImport the heterotroph species volume and carbon content to compare to my measured values. Compare to md-lessard (Supplementary)\n\n\nCode\nc_prev &lt;- read.delim(\"input-data/md-lessard-2000.txt\") # Table 2, heterotrophs only\n# c_prev\n# biov\n# combine and plot\ncarbon_compare &lt;- c_prev %&gt;% \n  add_column(source = \"Menden-Deuer Lessard\") %&gt;% \n  select(source, Volume = vol, pgC_cell) %&gt;% \n  rbind(biov_calc %&gt;% add_column(source = \"MCR\") %&gt;% select(source, Volume = BIOVOLUME, pgC_cell = pgC_cell_MD_nodiatom)) %&gt;% \n    ggplot(aes(x = Volume, y = pgC_cell, fill = source)) +\n      geom_point(aes(fill = source), shape = 23, color = \"black\", size = 3) +\n      scale_y_log10() + scale_x_log10() +\n      labs(title = \"Compare literature to measured cell volume & C content\",\n           x = bquote(\"Volume\" ~µm^3),\n           y = bquote(\"pg C\" ~cell^-1)) +\n      theme_bw() + theme(legend.title = element_blank(),\n                         axis.title = element_text(size = 14),\n                         axis.text = element_text(size = 14),\n                         legend.text = element_text(size = 14))\n\ncarbon_compare\n\n\n\n\n\nUpon comparison, the measured carbon content was much lower from the grazing experiments. This makes sense, as I am looking at preserved specimen and a smaller total number of cells. AND the deep-sea protist cell sizes may be smaller overall."
  },
  {
    "objectID": "grazing.html#incorporate-carbon-biomass-of-prey-and-grazing-rate",
    "href": "grazing.html#incorporate-carbon-biomass-of-prey-and-grazing-rate",
    "title": "Protistan grazing analysis",
    "section": "9.1 Incorporate carbon biomass of prey and grazing rate",
    "text": "9.1 Incorporate carbon biomass of prey and grazing rate\nClearance rate is mL per grazer per hour (Table S3). Grazing effect is prokaryotes ml-1 hr-1 (Table S3).\n\n\nCode\n## Carbon consumed based on clearance rate\ncarbon_consumed &lt;- est_prok_carbon %&gt;% \n  #use only value from Morono et al., convert to pg C per cell.\n  filter(prokC_category == \"MOR_fgC_ml\") %&gt;% \n  add_column(bac_carbon_Mor_pg = (bac_carbon_Mor_fg * 0.001)) %&gt;% \n  select(SiteOrder, NameOrder, SiteOrder, FLUID_ORIGIN, CRUISE_SAMPLE, PROK_ml, GRAZING_EFFECT_hr, CLEARANCE_RATE_ml, bac_carbon_Mor_pg, fgC_ml) %&gt;% \n  # Clearance rate * fg of prok == pg C per grazer per hr\n  # bac_carbon_Mor_pg * grazing effect == pg C per ml per hr\n  mutate(pgC_pergrazer_CLEARANCE = (fgC_ml*0.001) * CLEARANCE_RATE_ml,\n         pgC_perml_perhr = bac_carbon_Mor_pg * GRAZING_EFFECT_hr)\ncarbon_consumed\n\n\n# A tibble: 14 × 11\n   SiteOrder NameOrder      FLUID_ORIGIN CRUISE_SAMPLE PROK_ml GRAZING_EFFECT_hr\n   &lt;fct&gt;     &lt;fct&gt;          &lt;chr&gt;        &lt;chr&gt;           &lt;dbl&gt;             &lt;dbl&gt;\n 1 Piccard   Lots 'O Shrimp J2-1241      LV24           53878                0  \n 2 Piccard   Plume          CTD004       Niskin 10      51429               44.3\n 3 Piccard   Shrimpocalypse J2-1240      LV13          238590             6007. \n 4 Von Damm  Background     CTD002       Niskins 8-10   37890              127. \n 5 Von Damm  Mustard Stand  J2-1243      LV17           56677                0  \n 6 Von Damm  Plume          CTD001       Niskin 2       16478               24.0\n 7 Von Damm  Ravelin #2     J2-1238      LV13a          71147.             117. \n 8 Von Damm  Shrimp Hole    J2-1244      LV13           41983                0  \n 9 Von Damm  X-18           J2-1235      LV23 & Bio5   111430             1166. \n10 Piccard   Shrimpocalypse J2-1240      IGT3          238590            17285. \n11 Von Damm  Old Man Tree   J2-1238      IGT4           71147.            1050. \n12 Von Damm  Ravelin #2     J2-1244      IGT4           71147.           15867. \n13 Von Damm  Ravelin #2     J2-1244      IGT5           71147.               0  \n14 &lt;NA&gt;      &lt;NA&gt;           &lt;NA&gt;         &lt;NA&gt;          238590               NA  \n# ℹ 5 more variables: CLEARANCE_RATE_ml &lt;dbl&gt;, bac_carbon_Mor_pg &lt;dbl&gt;,\n#   fgC_ml &lt;dbl&gt;, pgC_pergrazer_CLEARANCE &lt;dbl&gt;, pgC_perml_perhr &lt;dbl&gt;"
  },
  {
    "objectID": "grazing.html#mcr-and-gr-data-as-input",
    "href": "grazing.html#mcr-and-gr-data-as-input",
    "title": "Protistan grazing analysis",
    "section": "15.1 MCR and GR data as input",
    "text": "15.1 MCR and GR data as input\n\n\nCode\nlibrary(broom)\n# ?pivot_longer\n# e IGT\nhead(all_vents)\n\n\n     FIELD           NAME                 SAMPLE EXP   PROK_ml    EUK_ml\n1 Von Damm     Background                 VD-BSW Bag  37889.62  91.83773\n2 Von Damm     Background                 VD-BSW Bag  37889.62  91.83773\n3 Von Damm     Background                 VD-BSW Bag  37889.62  91.83773\n4 Von Damm          Plume               VD-Plume Bag  16478.31 157.77468\n5  Piccard          Plume          Piccard-Plume Bag  51429.13  79.30115\n6  Piccard Shrimpocalypse Piccard-Shrimpocalypse Bag 238585.68 454.81543\n  GRAZING_EFFECT_hr GRAZING_EFFECT_hr_min GRAZING_EFFECT_hr_max\n1         127.06388              96.81058             157.31719\n2         127.06388              96.81058             157.31719\n3         127.06388              96.81058             157.31719\n4          24.02685              13.80868              34.24501\n5          44.25930              34.87229              53.64630\n6        6006.74315                    NA                    NA\n  BAC_TURNOVER_PERC Highest.Temp pH Mg H2S H2 CH4 SAMPLE_TYPE\n1          8.048465        4.181 NA NA  NA NA  NA  Background\n2          8.048465        4.100 NA NA  NA NA  NA  Background\n3          8.048465        4.000 NA NA  NA NA  NA  Background\n4          3.499414        4.230 NA NA  NA NA  NA  Background\n5          2.065411        4.722 NA NA  NA NA  NA  Background\n6         60.423507       90.000 NA NA  NA NA  NA        Vent\n\n\nCode\nregression_input &lt;- all_vents %&gt;%\n  # filter(!(SAMPLE == \"Piccard-Shrimpocalypse\" & EXP == \"IGT\")) %&gt;%\n  filter(!is.na(Highest.Temp)) %&gt;%\n    select(FIELD, NAME, SAMPLE, SAMPLE_TYPE, EXP, PROK_ml, EUK_ml, GRAZING_EFFECT_hr, BAC_TURNOVER_PERC, TEMP = Highest.Temp) %&gt;%\n  mutate(PROK_EUK_RATIO = (PROK_ml/EUK_ml)) %&gt;%\n  pivot_longer(cols = c(GRAZING_EFFECT_hr, BAC_TURNOVER_PERC), names_to = \"RATE\", values_to = \"RATE_VALUE\") %&gt;%\n  pivot_longer(cols = c(PROK_ml, EUK_ml, PROK_EUK_RATIO, TEMP), names_to = \"PARAMS\", values_to = \"PARAMS_VALUE\") %&gt;%\n  data.frame\n\nregression_tmp &lt;- regression_input %&gt;%\n  # Set up the linear regression\n  group_by(RATE, PARAMS) %&gt;%\n  nest(-RATE, -PARAMS) %&gt;%\n  mutate(lm_fit = map(data, ~lm(RATE_VALUE ~ PARAMS_VALUE, data = .)),\n    tidied = map(lm_fit, tidy)) %&gt;%\n  unnest(tidied) %&gt;%\n  select(RATE, PARAMS,\n    term, estimate) %&gt;%\n  pivot_wider(names_from = term, values_from = estimate) %&gt;%\n  select(everything(), SLOPE = PARAMS_VALUE) %&gt;%\n  data.frame\n\n\nWarning: Supplying `...` without names was deprecated in tidyr 1.0.0.\nℹ Please specify a name for each selection.\nℹ Did you want `data = c(-RATE, -PARAMS)`?\n\n\nCode\nregression_results &lt;- regression_input %&gt;%\n  group_by(RATE, PARAMS) %&gt;%\n  nest(-RATE, -PARAMS) %&gt;%\n  mutate(lm_fit = map(data, ~lm(RATE_VALUE ~ PARAMS_VALUE, data = .)),\n    glanced = map(lm_fit, glance)) %&gt;%\n  unnest(glanced) %&gt;%\n  select(RATE, PARAMS, r.squared, adj.r.squared) %&gt;%\n  right_join(regression_tmp) %&gt;%\n  right_join(regression_input) %&gt;%\n  data.frame\n\n\nWarning: Supplying `...` without names was deprecated in tidyr 1.0.0.\nℹ Please specify a name for each selection.\nℹ Did you want `data = c(-RATE, -PARAMS)`?\n\n\nJoining with `by = join_by(RATE, PARAMS)`\nJoining with `by = join_by(RATE, PARAMS)`\n\n\nCode\n# View(regression_results)\n\n\nPlot results from regression\n\n\nCode\nregression_results %&gt;%\n  # filter(RATE == \"GRAZING_EFFECT_hr\") %&gt;%\n  # filter(PARAMS == \"TEMP\") %&gt;%\n  ggplot(aes(x = PARAMS_VALUE, y = RATE_VALUE, shape = SAMPLE_TYPE, fill = FIELD)) +\n    geom_abline(aes(slope = SLOPE, intercept = `X.Intercept.`), color = \"black\", linetype = \"dashed\", size = 0.5) +\n    geom_point(color = \"black\", aes(shape = SAMPLE_TYPE, fill = FIELD)) +\n    scale_shape_manual(values = c(21, 24)) +\n    scale_fill_manual(values = c(\"#476AA7\",\"#7299CE\", \"#A2937A\")) +\n    facet_wrap(PARAMS ~ RATE + round(r.squared, 3), scales = \"free\", ncol = 5,\n             strip.position = \"bottom\", labeller = label_parsed) +\n  theme_bw() +\n  theme(\n    strip.background = element_blank(),\n    strip.placement = \"outside\",\n    strip.text = element_text(color = \"black\", size = 10),\n    axis.title = element_text(color = \"black\", size = 10),\n    legend.title = element_blank()) # +\n\n\nWarning: Removed 16 rows containing missing values (`geom_point()`).\n\n\n\n\n\nCode\nlabs(y = bquote(\"Cells \"~mL^-1 ~hr^-1), x = \"Temperature (C)\")\n\n\n$y\n\"Cells \" ~ mL^-1 ~ hr^-1\n\n$x\n[1] \"Temperature (C)\"\n\nattr(,\"class\")\n[1] \"labels\""
  },
  {
    "objectID": "grazing.html#mcr-only",
    "href": "grazing.html#mcr-only",
    "title": "Protistan grazing analysis",
    "section": "15.2 MCR only",
    "text": "15.2 MCR only\nrepeat MCR only\n\n\nCode\nlibrary(broom)\n# ?pivot_longer\n# unique(all_vents$FIELD)\nregression_input &lt;- all_vents %&gt;% \n  filter(!(FIELD == \"Gorda Ridge\")) %&gt;% \n  # filter(!(SAMPLE == \"Piccard-Shrimpocalypse\" & EXP == \"IGT\")) %&gt;% \n  filter(!is.na(Highest.Temp)) %&gt;% \n    select(FIELD, NAME, SAMPLE, SAMPLE_TYPE, EXP, PROK_ml, EUK_ml, GRAZING_EFFECT_hr, BAC_TURNOVER_PERC, TEMP = Highest.Temp) %&gt;% \n  mutate(PROK_EUK_RATIO = (PROK_ml/EUK_ml)) %&gt;% \n  pivot_longer(cols = c(GRAZING_EFFECT_hr, BAC_TURNOVER_PERC), names_to = \"RATE\", values_to = \"RATE_VALUE\") %&gt;% \n  pivot_longer(cols = c(PROK_ml, EUK_ml, PROK_EUK_RATIO, TEMP), names_to = \"PARAMS\", values_to = \"PARAMS_VALUE\") %&gt;% \n  data.frame\n\nregression_tmp &lt;- regression_input %&gt;% \n  # Set up the linear regression\n  group_by(RATE, PARAMS) %&gt;% \n  nest(-RATE, -PARAMS) %&gt;% \n  mutate(lm_fit = map(data, ~lm(RATE_VALUE ~ PARAMS_VALUE, data = .)), \n    tidied = map(lm_fit, tidy)) %&gt;% \n  unnest(tidied) %&gt;% \n  select(RATE, PARAMS, \n    term, estimate) %&gt;% \n  pivot_wider(names_from = term, values_from = estimate) %&gt;% \n  select(everything(), SLOPE = PARAMS_VALUE) %&gt;%\n  data.frame\n\n\nWarning: Supplying `...` without names was deprecated in tidyr 1.0.0.\nℹ Please specify a name for each selection.\nℹ Did you want `data = c(-RATE, -PARAMS)`?\n\n\nCode\nregression_results_mcr &lt;- regression_input %&gt;% \n  group_by(RATE, PARAMS) %&gt;% \n  nest(-RATE, -PARAMS) %&gt;% \n  mutate(lm_fit = map(data, ~lm(RATE_VALUE ~ PARAMS_VALUE, data = .)),\n    glanced = map(lm_fit, glance)) %&gt;% \n  unnest(glanced) %&gt;% \n  select(RATE, PARAMS, r.squared, adj.r.squared) %&gt;% \n  right_join(regression_tmp) %&gt;%\n  right_join(regression_input) %&gt;%\n  data.frame\n\n\nWarning: Supplying `...` without names was deprecated in tidyr 1.0.0.\nℹ Please specify a name for each selection.\nℹ Did you want `data = c(-RATE, -PARAMS)`?\n\n\nJoining with `by = join_by(RATE, PARAMS)`\nJoining with `by = join_by(RATE, PARAMS)`\n\n\nCode\n# View(regression_results_mcr)\n\n\nPlot results from regression\n\n\nCode\nregression_results_mcr %&gt;% \n  # filter(RATE == \"GRAZING_EFFECT_hr\") %&gt;%\n  # filter(PARAMS == \"TEMP\") %&gt;% \n  ggplot(aes(x = PARAMS_VALUE, y = RATE_VALUE, shape = SAMPLE_TYPE, fill = FIELD)) +\n    geom_abline(aes(slope = SLOPE, intercept = `X.Intercept.`), color = \"black\", linetype = \"dashed\", size = 0.5) +\n    geom_point(color = \"black\", aes(shape = SAMPLE_TYPE, fill = FIELD)) +\n    scale_shape_manual(values = c(21, 24)) +\n    scale_fill_manual(values = c(\"#476AA7\",\"#7299CE\", \"#A2937A\")) +\n    facet_wrap(PARAMS ~ RATE + round(r.squared, 3), scales = \"free\", ncol = 5,\n             strip.position = \"bottom\", labeller = label_parsed) +\n  theme_bw() +\n  theme(\n    strip.background = element_blank(),\n    strip.placement = \"outside\",\n    strip.text = element_text(color = \"black\", size = 10),\n    axis.title = element_text(color = \"black\", size = 10),\n    legend.title = element_blank()) # +\n\n\n\n\n\nCode\n  # labs(y = bquote(\"Cells \"~mL^-1 ~hr^-1), x = \"Temperature (C)\")"
  },
  {
    "objectID": "grazing.html#mcr-vent-sites-only",
    "href": "grazing.html#mcr-vent-sites-only",
    "title": "Protistan grazing analysis",
    "section": "15.3 MCR vent sites only",
    "text": "15.3 MCR vent sites only\nRepeat with only vent sites & remove undetected grazing.\n\n\nCode\n# head(all_vents)\n# range(all_vents$GRAZING_EFFECT_hr)\n\n\n\n\nCode\nlibrary(broom)\n# ?pivot_longer\n# unique(all_vents$FIELD)\nregression_input &lt;- all_vents %&gt;% \n  filter(!(FIELD == \"Gorda Ridge\")) %&gt;% \n  filter(!(NAME == \"Background\")) %&gt;% filter(!(NAME == \"Plume\")) %&gt;% \n  filter(GRAZING_EFFECT_hr &gt; 0) %&gt;% \n  # filter(!(SAMPLE == \"Piccard-Shrimpocalypse\" & EXP == \"IGT\")) %&gt;% \n  filter(!is.na(Highest.Temp)) %&gt;% \n    select(FIELD, NAME, SAMPLE, SAMPLE_TYPE, EXP, PROK_ml, EUK_ml, GRAZING_EFFECT_hr, BAC_TURNOVER_PERC, TEMP = Highest.Temp) %&gt;% \n  mutate(PROK_EUK_RATIO = (PROK_ml/EUK_ml)) %&gt;% \n  pivot_longer(cols = c(GRAZING_EFFECT_hr, BAC_TURNOVER_PERC), names_to = \"RATE\", values_to = \"RATE_VALUE\") %&gt;% \n  pivot_longer(cols = c(PROK_ml, EUK_ml, PROK_EUK_RATIO, TEMP), names_to = \"PARAMS\", values_to = \"PARAMS_VALUE\") %&gt;% \n  data.frame\n\nregression_tmp &lt;- regression_input %&gt;% \n  # Set up the linear regression\n  group_by(RATE, PARAMS) %&gt;% \n  nest(-RATE, -PARAMS) %&gt;% \n  mutate(lm_fit = map(data, ~lm(RATE_VALUE ~ PARAMS_VALUE, data = .)), \n    tidied = map(lm_fit, tidy)) %&gt;% \n  unnest(tidied) %&gt;% \n  select(RATE, PARAMS, \n    term, estimate) %&gt;% \n  pivot_wider(names_from = term, values_from = estimate) %&gt;% \n  select(everything(), SLOPE = PARAMS_VALUE) %&gt;%\n  data.frame\n\n\nWarning: Supplying `...` without names was deprecated in tidyr 1.0.0.\nℹ Please specify a name for each selection.\nℹ Did you want `data = c(-RATE, -PARAMS)`?\n\n\nCode\nregression_results_vent &lt;- regression_input %&gt;% \n  group_by(RATE, PARAMS) %&gt;% \n  nest(-RATE, -PARAMS) %&gt;% \n  mutate(lm_fit = map(data, ~lm(RATE_VALUE ~ PARAMS_VALUE, data = .)),\n    glanced = map(lm_fit, glance)) %&gt;% \n  unnest(glanced) %&gt;% \n  select(RATE, PARAMS, r.squared, adj.r.squared) %&gt;% \n  right_join(regression_tmp) %&gt;%\n  right_join(regression_input) %&gt;%\n  data.frame\n\n\nWarning: Supplying `...` without names was deprecated in tidyr 1.0.0.\nℹ Please specify a name for each selection.\nℹ Did you want `data = c(-RATE, -PARAMS)`?\n\n\nJoining with `by = join_by(RATE, PARAMS)`\nJoining with `by = join_by(RATE, PARAMS)`\n\n\nCode\n# View(regression_results_vent)\n\n\nPlot results from regression\n\n\nCode\nregression_results_vent %&gt;% \n  # filter(RATE == \"GRAZING_EFFECT_hr\") %&gt;%\n  # filter(PARAMS == \"TEMP\") %&gt;% \n  ggplot(aes(x = PARAMS_VALUE, y = RATE_VALUE, shape = SAMPLE_TYPE, fill = FIELD)) +\n    geom_abline(aes(slope = SLOPE, intercept = `X.Intercept.`), color = \"black\", linetype = \"dashed\", size = 0.5) +\n    geom_point(color = \"black\", aes(shape = SAMPLE_TYPE, fill = FIELD)) +\n    scale_shape_manual(values = c(21, 24)) +\n    scale_fill_manual(values = c(\"#476AA7\",\"#7299CE\", \"#A2937A\")) +\n    facet_wrap(PARAMS ~ RATE + round(r.squared, 3), scales = \"free\", ncol = 5,\n             strip.position = \"bottom\", labeller = label_parsed) +\n  theme_bw() +\n  theme(\n    strip.background = element_blank(),\n    strip.placement = \"outside\",\n    strip.text = element_text(color = \"black\", size = 10),\n    axis.title = element_text(color = \"black\", size = 10),\n    legend.title = element_blank()) # +\n\n\n\n\n\nCode\n  # labs(y = bquote(\"Cells \"~mL^-1 ~hr^-1), x = \"Temperature (C)\")\n\n\nRegression thoughts: Unremarkable r squared values (numbers at the bottom of each plot). Some trends, mainly associated with temperature.\nBacterial abundance typically increases with temperature (White et al. 1991) - which could ultimately increase bacterial ingestion rate and total protist cells. But at this type of niche environment, I hypothesize that there is a trend but threshold of not detected grazing under certain conditions.\nIf euk per ml numbers are high, but we see lower grazing rates, could this be competition? Curds and Cockburn 1968. Additionally with temperature… in Vaque et al GRF (specific grazing rates of flagellates) increased with temperature, but overall grazing rate reached a plateau at 18C. Does this mean that temperature will be an important factor depending on the community diversity?\n\n\nCode\nhead(all_vents)\n\n\n     FIELD           NAME                 SAMPLE EXP   PROK_ml    EUK_ml\n1 Von Damm     Background                 VD-BSW Bag  37889.62  91.83773\n2 Von Damm     Background                 VD-BSW Bag  37889.62  91.83773\n3 Von Damm     Background                 VD-BSW Bag  37889.62  91.83773\n4 Von Damm          Plume               VD-Plume Bag  16478.31 157.77468\n5  Piccard          Plume          Piccard-Plume Bag  51429.13  79.30115\n6  Piccard Shrimpocalypse Piccard-Shrimpocalypse Bag 238585.68 454.81543\n  GRAZING_EFFECT_hr GRAZING_EFFECT_hr_min GRAZING_EFFECT_hr_max\n1         127.06388              96.81058             157.31719\n2         127.06388              96.81058             157.31719\n3         127.06388              96.81058             157.31719\n4          24.02685              13.80868              34.24501\n5          44.25930              34.87229              53.64630\n6        6006.74315                    NA                    NA\n  BAC_TURNOVER_PERC Highest.Temp pH Mg H2S H2 CH4 SAMPLE_TYPE\n1          8.048465        4.181 NA NA  NA NA  NA  Background\n2          8.048465        4.100 NA NA  NA NA  NA  Background\n3          8.048465        4.000 NA NA  NA NA  NA  Background\n4          3.499414        4.230 NA NA  NA NA  NA  Background\n5          2.065411        4.722 NA NA  NA NA  NA  Background\n6         60.423507       90.000 NA NA  NA NA  NA        Vent\n\n\nCode\nallvent_data &lt;- all_vents %&gt;% \n  mutate(PROK_EUK_RATIO = (PROK_ml/EUK_ml))\n# head(allvent_data)\n\n\nFunction to plot results by two parameters.\n\n\nCode\ntwo_params &lt;- function(df, x_var, y_var, x_title, y_title){\n  X_VAR &lt;- enquo(x_var)\n  Y_VAR &lt;- enquo(y_var)\n  df %&gt;% \n  select(FIELD, NAME, SAMPLE, EXP, X = !!X_VAR, Y = !!Y_VAR) %&gt;% \n  distinct() %&gt;% \n  ggplot(aes(x = X, y = Y)) +\n    geom_point(size = 3, shape = 21, color = \"black\", aes(fill = FIELD)) +\n    geom_abline(slope = 1, intercept = 0) +\n    theme_minimal() +\n    labs(x = x_title, y = y_title)\n}"
  },
  {
    "objectID": "asv-analysis.html",
    "href": "asv-analysis.html",
    "title": "18S rRNA gene amplicon survey",
    "section": "",
    "text": "Goals for this analysis are to investigate specific protistan taxonomic groups in the context of elevated grazing activity, cell biomass, and hydrothermal vent sample type.\nData originate from in situ MCR samples from a tag-sequence survey and the Tf time point from the grazing experiments. Additionally, in situ and grazing experiments were conducted within vent sites, at the plume, and in the background."
  },
  {
    "objectID": "asv-analysis.html#import-asv-r-objects",
    "href": "asv-analysis.html#import-asv-r-objects",
    "title": "18S rRNA gene amplicon survey",
    "section": "1.1 Import ASV R objects",
    "text": "1.1 Import ASV R objects\n\n\nCode\nload(\"input-data/MCR-amplicon-data.RData\", verbose = T)\n\n\nLoading objects:\n  phylo_obj\n  samplenames\n  physeq_wnames\n  metadata_mcr\n  asv_wtax_qc\n  TAX\n  tax_matrix\n  physeq_mcr\n\n\nCode\n# physeq_mcr"
  },
  {
    "objectID": "asv-analysis.html#factor---legendcolor-key",
    "href": "asv-analysis.html#factor---legendcolor-key",
    "title": "18S rRNA gene amplicon survey",
    "section": "1.2 Factor - legend/color key",
    "text": "1.2 Factor - legend/color key\n\n\nCode\nvent_ids &lt;- c(\"BSW\",\"Plume\", \"Shrimpocalypse\", \"LotsOShrimp\", \"X18\", \"OMT\", \"OldManTree\", \"Rav2\", \"MustardStand\", \"ShrimpHole\", \"WhiteCastle\", \"ArrowLoop\")\nvent_fullname &lt;- c(\"Background\",\"Plume\", \"Shrimpocalypse\", \"Lots 'O Shrimp\", \"X-18\", \"Old Man Tree\", \"Old Man Tree\", \"Ravelin #2\", \"Mustard Stand\", \"Shrimp Hole\", \"White Castle\", \"Arrow Loop\")\nsite_ids &lt;- c(\"VD\", \"Piccard\")\n\n# edit(samples)\nsamplenames_order &lt;- c(\"Piccard Background\", \"Piccard Plume\",\n                       \"Piccard Lots 'O Shrimp\", \"Piccard Shrimpocalypse\", \n                       \"Von Damm Background\", \"Von Damm Plume\",\n                       \"Von Damm Ravelin #2\", \"Von Damm X-18\", \"Von Damm Old Man Tree\", \"Von Damm Mustard Stand\", \n                       \"Von Damm Arrow Loop\", \"Von Damm Shrimp Hole\", \"Von Damm White Castle\")\n\nsamplenames_color &lt;- c(\"#2b8cbe\", \"#084081\",\n                       \"#a8ddb5\", \"#4eb3d3\",\n                       \"#bd0026\", \"#800026\", \n                       \"#fc4e2a\", \"#feb24c\", \"#fed976\", \"#fd8d3c\",\n                       \"#fdd49e\", \"#ef6548\", \"#ffeda0\")\n\nnames(samplenames_color) &lt;- samplenames_order\n\nsite_fullname &lt;- c(\"Von Damm\", \"Piccard\")\nsite_color &lt;- c(\"#264653\", \"#E76F51\")\nnames(site_color) &lt;- site_fullname\n\nwhole_pal &lt;- c(\"#264653\", \"#2A9D8F\", \"#E9C46A\",\"#F4A261\", \"#E76F51\")\n\nextra &lt;- c(\"#eae2b7\", \"#5f0f40\", \"#90be6d\", \"#941b0c\", \"#577590\")\n# Colors for VD and Piccard\nsite_colors &lt;- c(\"#418b84\", \"#943b36\")\n# site_colors\n\n# Vent colors\nvent_colors &lt;- c(\"#253494\",\"#1d91c0\", \"#E9C46A\", \"#E76F51\", \"#264653\", \"#2A9D8F\", \"#2A9D8F\", \"#90be6d\", \"#941b0c\", \"#577590\", \"#eae2b7\", \"#deebf7\")\n# vent_colors &lt;- c(\"\")\nnames(vent_colors) &lt;- vent_fullname\n# all_taxa_color = c(\"#fa9fb5\", \"#c51b8a\", \"#67000d\", \"#ef3b2c\", \"#ffffcc\", \"#feb24c\", \"#c7e9b4\", \"#1d91c0\", \"#deebf7\", \"#253494\", \"#9e9ac8\", \"#238b45\", \"#54278f\", \"#bdbdbd\", \"#252525\", \"#fa9fb5\", \"#c51b8a\", \"#67000d\", \"#ef3b2c\", \"#ffffcc\", \"#feb24c\", \"#c7e9b4\", \"#1d91c0\", \"#253494\", \"#9e9ac8\", \"#238b45\", \"#54278f\", \"#bdbdbd\", \"#252525\")"
  },
  {
    "objectID": "asv-analysis.html#cluster-analysis",
    "href": "asv-analysis.html#cluster-analysis",
    "title": "18S rRNA gene amplicon survey",
    "section": "2.1 Cluster analysis",
    "text": "2.1 Cluster analysis\nOrdination analysis and methods to look at whole protistan communities at MCR.\n\n\nCode\n# | message: false\nlibrary(vegan); library(ggdendro); library(compositions)\n\n\nLoading required package: permute\n\n\nLoading required package: lattice\n\n\nThis is vegan 2.6-4\n\n\nWelcome to compositions, a package for compositional data analysis.\nFind an intro with \"? compositions\"\n\n\n\nAttaching package: 'compositions'\n\n\nThe following object is masked from 'package:ape':\n\n    balance\n\n\nThe following objects are masked from 'package:stats':\n\n    anova, cor, cov, dist, var\n\n\nThe following object is masked from 'package:graphics':\n\n    segments\n\n\nThe following objects are masked from 'package:base':\n\n    %*%, norm, scale, scale.default\n\n\n\nwith grazing assays\n\n\nCode\n# head(asv_wtax_qc)\nasv_mcr_numeric &lt;- asv_wtax_qc %&gt;% \n  filter(value &gt; 0) %&gt;% \n  group_by(FeatureID, SAMPLENAME) %&gt;% \n  summarise(MEAN_ACROSS_REPS = mean(value)) %&gt;% \n  select(FeatureID, SAMPLENAME, MEAN_ACROSS_REPS) %&gt;% \n  pivot_wider(names_from = SAMPLENAME, values_from = MEAN_ACROSS_REPS, values_fill = 0) %&gt;% \n  column_to_rownames(var = \"FeatureID\")\n\n\n`summarise()` has grouped output by 'FeatureID'. You can override using the\n`.groups` argument.\n\n\nTransform compositional data, center log ratio.\n\n\nCode\nlogratio_mcr &lt;- data.frame(compositions::clr(t(asv_mcr_numeric)))\n# dim(logratio_mcr)\n# ?alr()\n# ?ilr()\n\npca_logratio &lt;- prcomp(logratio_mcr)\n\nvariance_logratio &lt;- (pca_logratio$sdev^2)/sum(pca_logratio$sdev^2)\n\nbarplot(variance_logratio, main = \"Log-Ratio PCA Screeplot\", xlab = \"PC Axis\", ylab = \"% Variance\", \n    cex.names = 1.5, cex.axis = 1.5, cex.lab = 1.5, cex.main = 1.5)\n\n\n\n\n\n\n\nCode\n# Extract PCA points\nmcr_pca_pts &lt;- data.frame(pca_logratio$x, SAMPLE = rownames(pca_logratio$x)) %&gt;% \n  rownames_to_column(var = \"SAMPLENAME\") %&gt;% \n  separate(SAMPLENAME, c(\"SITE\", \"SAMPLETYPE\", \"YEAR\", \"VENT\"), \" \", \n        remove = FALSE) \n\n\nWarning: Expected 4 pieces. Additional pieces discarded in 21 rows [1, 2, 3, 4, 5, 6, 7,\n8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\n\nCode\n# head(mcr_pca_pts)\n\npc1 &lt;- round(variance_logratio[1] * 100, 2)\npc2 &lt;- round(variance_logratio[2] * 100, 2)\n\n\nPCoA with all samples\n\n\nCode\n# samples &lt;- as.character(unique(tmp$SAMPLENAME))\n# samples\n# mcr_pca_pts\npca_plot &lt;- mcr_pca_pts %&gt;% \n  mutate(VENT_ORDER = factor(VENT, levels = vent_ids, labels = vent_fullname),\n         SITE_ORDER = factor(SITE, levels = c(\"VonDamm\", \"Piccard\"), labels = site_fullname)) %&gt;% \n  unite(SAMPLENAME, SITE_ORDER, VENT_ORDER, sep= \" \", remove = FALSE) %&gt;% \n  mutate(SAMPLENAME_ORDER = factor(SAMPLENAME, levels = samplenames_order)) %&gt;% \n  mutate(TYPE = case_when(\n    SAMPLETYPE == \"Incubation\" ~ \"Incubation\",\n    TRUE ~ \"in situ\"\n  )) %&gt;% \n  ggplot(aes(x = PC1, y = PC2)) +\n  geom_point(stroke = 2, size = 5, aes(shape = TYPE, fill = SAMPLENAME_ORDER, color = SAMPLENAME_ORDER)) +\n  scale_shape_manual(values = c(2,17)) +\n  scale_fill_manual(values = samplenames_color) +\n  scale_color_manual(values = samplenames_color) +\n  theme_linedraw() + coord_fixed(ratio = 1) +\n  guides(fill = guide_legend(override.aes = list(shape = c(22)))) +\n  geom_hline(yintercept = 0) + geom_vline(xintercept = 0) +\n  theme(legend.title = element_blank(),\n        axis.text = element_text(color = \"black\", face = \"bold\", size = 13),\n        axis.title = element_text(color = \"black\", face = \"bold\", size = 16)) +\n  labs(x =  paste(pc1, \"%\"), y = paste(pc2, \"%\"))\n\npca_plot\n\n\n\n\n\n\nDendrogram analysis\n\n\nCode\n# ?decostand()\n# Relative abundance\nrel_abun &lt;- decostand(asv_mcr_numeric, MARGIN = 2, method = \"total\")\n# Cluster dendrogram (average hierarchical clustering)\ncluster_mcr &lt;- hclust(dist(t(rel_abun)), method = \"average\")\ndendro &lt;- as.dendrogram(cluster_mcr)\nmcr_dendro &lt;- dendro_data(dendro, type = \"rectangle\")\n\n\n\n\nCode\nmcr_dendro_plot &lt;- ggplot(segment(mcr_dendro)) +\n  geom_segment(aes(x = x, y = y, xend = xend, \n    yend = yend)) + \n  coord_flip() + \n  scale_y_reverse(expand = c(0.2, 0.5), breaks = c(0, 0.2, 0.4, 0.6, 0.8)) +\n  geom_text(aes(x = x, y = y, label = label, angle = 0, hjust = 0), data = label(mcr_dendro)) +\n  theme_dendro() + labs(y = \"Dissimilarity\") +\n    theme(axis.text.x = element_text(color = \"black\", size = 14), axis.line.x = element_line(color = \"#252525\"), \n        axis.ticks.x = element_line(), axis.title.x = element_text(color = \"black\", \n            size = 14))\n# svg('figs/SUPPLEMENTARY-dendrogram-wreps.svg', w = 10, h = 8)\nmcr_dendro_plot\n\n\n\n\n\n\n\n\ninsitu only\nPCoA with in situ only\n\n\nCode\nasv_mcr_numeric_insitu &lt;- asv_wtax_qc %&gt;% \n  filter(value &gt; 0) %&gt;% \n  filter(SAMPLETYPE != \"Incubation\") %&gt;% \n  group_by(FeatureID, SAMPLENAME) %&gt;% \n  summarise(MEAN_ACROSS_REPS = mean(value)) %&gt;% \n  select(FeatureID, SAMPLENAME, MEAN_ACROSS_REPS) %&gt;% \n  pivot_wider(names_from = SAMPLENAME, values_from = MEAN_ACROSS_REPS, values_fill = 0) %&gt;% \n  column_to_rownames(var = \"FeatureID\")\n\n\n`summarise()` has grouped output by 'FeatureID'. You can override using the\n`.groups` argument.\n\n\nCode\ninsitu_logratio_mcr &lt;- data.frame(compositions::clr(t(asv_mcr_numeric_insitu)))\n\ninsitu_pca_logratio &lt;- prcomp(insitu_logratio_mcr)\n\ninsitu_variance_logratio &lt;- (insitu_pca_logratio$sdev^2)/sum(insitu_pca_logratio$sdev^2)\n\nbarplot(insitu_variance_logratio, main = \"Log-Ratio PCA Screeplot\", xlab = \"PC Axis\", ylab = \"% Variance\", \n    cex.names = 1.5, cex.axis = 1.5, cex.lab = 1.5, cex.main = 1.5)\n\n\n\n\n\n\n\nCode\n# Extract PCA points for only insitu samples\ninsitu_mcr_pca_pts &lt;- data.frame(insitu_pca_logratio$x, SAMPLE = rownames(insitu_pca_logratio$x)) %&gt;% \n  rownames_to_column(var = \"SAMPLENAME\") %&gt;% \n  separate(SAMPLENAME, c(\"SITE\", \"SAMPLETYPE\", \"YEAR\", \"VENT\"), \" \", \n        remove = FALSE) \n\n\nWarning: Expected 4 pieces. Additional pieces discarded in 13 rows [1, 2, 3, 4, 5, 6, 7,\n8, 9, 10, 11, 12, 13].\n\n\n\n\nCode\ninsitu_mcr_pca_pts %&gt;% \n  mutate(VENT_ORDER = factor(VENT, levels = vent_ids, labels = vent_fullname),\n         SITE_ORDER = factor(SITE, levels = c(\"VonDamm\", \"Piccard\"), labels = site_fullname)) %&gt;% \n  mutate(TYPE = case_when(\n    SAMPLETYPE == \"Incubation\" ~ \"Incubation\",\n    TRUE ~ \"in situ\"\n  )) %&gt;% \n  ggplot(aes(x = PC1, y = PC2)) +\n  geom_point(color = \"black\", stroke = 1.3, size = 5, aes(shape = SITE_ORDER, fill = VENT_ORDER)) +\n  scale_shape_manual(values = c(21, 24)) +\n  scale_fill_manual(values = vent_colors) +\n  theme_linedraw() +\n  guides(fill = guide_legend(override.aes = list(shape = c(22)))) +\n  geom_hline(yintercept = 0) + geom_vline(xintercept = 0)"
  },
  {
    "objectID": "asv-analysis.html#community-taxonomic-composition-richness-sequence-relative-abundance",
    "href": "asv-analysis.html#community-taxonomic-composition-richness-sequence-relative-abundance",
    "title": "18S rRNA gene amplicon survey",
    "section": "2.2 Community taxonomic composition (richness & sequence relative abundance)",
    "text": "2.2 Community taxonomic composition (richness & sequence relative abundance)\n\n\nCode\nout_labels &lt;- as.data.frame(mcr_dendro$labels)\nmcr_sample_order &lt;- as.character(out_labels$label)\n\n\n\n\nCode\nalv &lt;- c(\"Alveolata-Ellobiopsidae\", \"Alveolata-Perkinsea\", \"Alveolata-Unknown\", \"Alveolata-Chrompodellids\", \"Alveolata-Apicomplexa\")\n# head(asv_wtax_qc)\n\nbubble &lt;- asv_wtax_qc %&gt;% \n    filter(value &gt; 0) %&gt;% \n  # Avg seq count by ASV across replicates\n  group_by(SAMPLENAME, SITE, VENT, SAMPLETYPE, Taxon, FeatureID) %&gt;% \n  summarise(avg_seq = mean(value)) %&gt;% \n  # Separate and curate taxa information\n  # filter(SAMPLETYPE != \"Incubation\") %&gt;% \n  separate(Taxon, c(\"Domain\", \"Supergroup\", \n                  \"Phylum\", \"Class\", \"Order\",\n                  \"Family\", \"Genus\", \"Species\"), sep = \";\") %&gt;%\n  filter(Domain == \"Eukaryota\") %&gt;% #select eukaryotes only\n  filter(Supergroup != \"Opisthokonta\") %&gt;% # remove multicellular metazoa\n  mutate(Supergroup = ifelse(is.na(Supergroup), \"Unknown Eukaryota\", Supergroup),\n         Phylum = ifelse(is.na(Phylum), \"Unknown\", Phylum),\n         Phylum = ifelse(Phylum == \"Alveolata_X\", \"Ellobiopsidae\", Phylum),\n         Supergroup = ifelse(Supergroup == \"Alveolata\", paste(Supergroup, Phylum, sep = \"-\"), Supergroup)) %&gt;% \n  mutate(SUPERGROUP = case_when(\n    Supergroup %in% alv ~ \"Other Alveolata\",\n    Supergroup == \"Eukaryota_X\" ~ \"Unknown Eukaryota\",\n    Phylum == \"Cercozoa\" ~ \"Rhizaria-Cercozoa\",\n    Phylum == \"Radiolaria\" ~ \"Rhizaria-Radiolaria\",\n    Phylum == \"Ochrophyta\" ~ \"Stramenopiles-Ochrophyta\",\n    Phylum == \"Opalozoa\" ~ \"Stramenopiles-Opalozoa\",\n    Phylum == \"Sagenista\" ~ \"Stramenopiles-Sagenista\",\n    TRUE ~ Supergroup\n  )) %&gt;% \n  # Taxa to supergroup\n  mutate(SupergroupPhylum = SUPERGROUP) %&gt;% \n  group_by(SAMPLENAME, SITE, VENT, SAMPLETYPE) %&gt;% \n    mutate(TOTAL_SEQ = sum(avg_seq)) %&gt;% \n  ungroup() %&gt;% \n  group_by(SAMPLENAME, SITE, VENT, SAMPLETYPE, SUPERGROUP) %&gt;% \n  summarise(SUM = sum(avg_seq),\n            REL_ABUN = SUM/TOTAL_SEQ) %&gt;% \n  mutate(SAMPLENAME_ORDER = factor(SAMPLENAME, levels = mcr_sample_order)) %&gt;% \n  ggplot(aes(x = SAMPLENAME_ORDER, y = SUPERGROUP, size = REL_ABUN)) +\n    geom_point(shape = 21, color = \"white\", aes(size = REL_ABUN, fill = SUPERGROUP, alpha = 0.4)) +\n    scale_size_continuous(range = c(2,14)) +\n  # facet_grid(. ~ SITE, scales = \"free\", space = \"free\") +\n  theme_minimal() +coord_flip() +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(color = \"black\", angle = 45, hjust = 1, vjust = 1))\n\n\n`summarise()` has grouped output by 'SAMPLENAME', 'SITE', 'VENT', 'SAMPLETYPE',\n'Taxon'. You can override using the `.groups` argument.\n\n\nWarning: Expected 8 pieces. Additional pieces discarded in 10924 rows [3, 10, 11, 12,\n13, 14, 18, 19, 20, 21, 23, 27, 28, 30, 31, 32, 33, 34, 35, 38, ...].\n\n\nWarning: Expected 8 pieces. Missing pieces filled with `NA` in 6487 rows [1, 2, 4, 5, 6,\n7, 8, 9, 15, 16, 17, 22, 24, 25, 26, 29, 36, 37, 48, 49, ...].\n\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\n`summarise()` has grouped output by 'SAMPLENAME', 'SITE', 'VENT', 'SAMPLETYPE',\n'SUPERGROUP'. You can override using the `.groups` argument.\n\n\nCode\nbubble\n\n\n\n\n\n\nDendrogram with bubble plot\n\n\nCode\n# mcr_dendro_plot + bubble + patchwork::plot_layout(ncol = 2) + patchwork::plot_annotation(tag_levels = \"a\")\n\n\n\n\nRelative abundance\n\nFigure S7\n\n\nCode\nalv &lt;- c(\"Alveolata-Ellobiopsidae\", \"Alveolata-Perkinsea\", \"Alveolata-Unknown\", \"Alveolata-Chrompodellids\", \"Alveolata-Apicomplexa\")\n\n# svg(filename = \"../../../Manuscripts_presentations_reviews/MCR-grazing-2023/svg-files-figures/figS7_barplot.svg\", h=9, w=8)\nasv_wtax_qc %&gt;% \n    filter(value &gt; 0) %&gt;% \n  # Avg seq count by ASV across replicates\n  group_by(SAMPLENAME, SITE, VENT, SAMPLETYPE, Taxon, FeatureID) %&gt;% \n  summarise(avg_seq = mean(value)) %&gt;% \n  # Separate and curate taxa information\n  # filter(SAMPLETYPE != \"Incubation\") %&gt;% \n  separate(Taxon, c(\"Domain\", \"Supergroup\", \n                  \"Phylum\", \"Class\", \"Order\",\n                  \"Family\", \"Genus\", \"Species\"), sep = \";\") %&gt;%\n  filter(Domain == \"Eukaryota\") %&gt;% #select eukaryotes only\n  filter(Supergroup != \"Opisthokonta\") %&gt;% # remove multicellular metazoa\n  mutate(Supergroup = ifelse(is.na(Supergroup), \"Unknown Eukaryota\", Supergroup),\n         Phylum = ifelse(is.na(Phylum), \"Unknown\", Phylum),\n         Phylum = ifelse(Phylum == \"Alveolata_X\", \"Ellobiopsidae\", Phylum),\n         Supergroup = ifelse(Supergroup == \"Alveolata\", paste(Supergroup, Phylum, sep = \"-\"), Supergroup)) %&gt;% \n  mutate(SUPERGROUP = case_when(\n    Supergroup %in% alv ~ \"Other Alveolata\",\n    Supergroup == \"Eukaryota_X\" ~ \"Unknown Eukaryota\",\n    Phylum == \"Cercozoa\" ~ \"Rhizaria-Cercozoa\",\n    Phylum == \"Radiolaria\" ~ \"Rhizaria-Radiolaria\",\n    Phylum == \"Ochrophyta\" ~ \"Stramenopiles-Ochrophyta\",\n    Phylum == \"Opalozoa\" ~ \"Stramenopiles-Opalozoa\",\n    Phylum == \"Sagenista\" ~ \"Stramenopiles-Sagenista\",\n    TRUE ~ Supergroup\n  )) %&gt;% \n  # Taxa to supergroup\n  mutate(SupergroupPhylum = SUPERGROUP) %&gt;% \n  group_by(SAMPLENAME, SITE, VENT, SAMPLETYPE, SUPERGROUP) %&gt;% \n  summarise(SUM = sum(avg_seq)) %&gt;% \n  mutate(SAMPLENAME_ORDER = factor(SAMPLENAME, levels = mcr_sample_order)) %&gt;% \n  ggplot(aes(x = SAMPLENAME_ORDER, y = SUM)) +\n    geom_bar(stat = \"identity\", position = \"fill\", color = \"black\", aes(fill = SUPERGROUP)) +\n  facet_grid(. ~ VENT + SITE, scales = \"free\", space = \"free\") +\n  scale_fill_manual(values = c(\"#fa9fb5\", \"#c51b8a\", \"#67000d\", \"#ef3b2c\", \"#ffffcc\", \"#feb24c\", \"#c7e9b4\", \"#1d91c0\", \"#253494\", \"#9e9ac8\", \"#238b45\", \"#54278f\", \"#bdbdbd\", \"#252525\", \"#fa9fb5\", \"#c51b8a\", \"#67000d\", \"#ef3b2c\", \"#ffffcc\", \"#feb24c\", \"#c7e9b4\", \"#1d91c0\", \"#253494\", \"#9e9ac8\", \"#238b45\", \"#54278f\", \"#bdbdbd\", \"#252525\")) +\n  theme_minimal() +\n  theme(legend.position = \"right\",\n        axis.text.x = element_text(color = \"black\", angle = 45, hjust = 1, vjust = 1),\n        strip.text.x.top = element_text(color = \"black\", angle = 90, vjust = 0)) +\n  labs(x = \"Relative sequence abundance\", y = \"\") \n\n\n`summarise()` has grouped output by 'SAMPLENAME', 'SITE', 'VENT', 'SAMPLETYPE',\n'Taxon'. You can override using the `.groups` argument.\n\n\nWarning: Expected 8 pieces. Additional pieces discarded in 10924 rows [3, 10, 11, 12,\n13, 14, 18, 19, 20, 21, 23, 27, 28, 30, 31, 32, 33, 34, 35, 38, ...].\n\n\nWarning: Expected 8 pieces. Missing pieces filled with `NA` in 6487 rows [1, 2, 4, 5, 6,\n7, 8, 9, 15, 16, 17, 22, 24, 25, 26, 29, 36, 37, 48, 49, ...].\n\n\n`summarise()` has grouped output by 'SAMPLENAME', 'SITE', 'VENT', 'SAMPLETYPE'.\nYou can override using the `.groups` argument.\n\n\n\n\n\nCode\n# dev.off()\n\n\nIn bar plot above, in situ and Tf incubation samples are paired for each site."
  },
  {
    "objectID": "asv-analysis.html#supergroup-to-phylum-level-comparisons",
    "href": "asv-analysis.html#supergroup-to-phylum-level-comparisons",
    "title": "18S rRNA gene amplicon survey",
    "section": "3.1 Supergroup to phylum level comparisons",
    "text": "3.1 Supergroup to phylum level comparisons\nGenerate upsetR plots with varied taxonomic levels.\nQuestions:\n\nHow which major supergroups and phyla are shared among vent sites within Von Damm and Piccard?\n\n\n\nCode\n# options for taxa: SupergroupPhylum, Supergroup, Phylum, Class, Order, Family, Genus, Species\nalv &lt;- c(\"Alveolata-Ellobiopsidae\", \"Alveolata-Perkinsea\", \"Alveolata-Unknown\", \"Alveolata-Chrompodellids\", \"Alveolata-Apicomplexa\")\n\nall_taxa_color = c(\"#fa9fb5\", \"#c51b8a\", \"#67000d\", \"#ef3b2c\", \"#ffffcc\", \"#feb24c\", \"#c7e9b4\", \"#1d91c0\", \"#deebf7\", \"#253494\", \"#9e9ac8\", \"#238b45\", \"#54278f\", \"#bdbdbd\", \"#252525\", \"#fa9fb5\", \"#c51b8a\", \"#67000d\", \"#ef3b2c\", \"#ffffcc\", \"#feb24c\", \"#c7e9b4\", \"#1d91c0\", \"#253494\", \"#9e9ac8\", \"#238b45\", \"#54278f\", \"#bdbdbd\", \"#252525\")\n\nasv_wtax_qc %&gt;% \n  filter(value &gt; 0) %&gt;% \n  filter(SAMPLETYPE != \"Incubation\") %&gt;% \n  separate(Taxon, c(\"Domain\", \"Supergroup\", \n                  \"Phylum\", \"Class\", \"Order\",\n                  \"Family\", \"Genus\", \"Species\"), sep = \";\") %&gt;%\n  filter(Domain == \"Eukaryota\") %&gt;% #select eukaryotes only\n  filter(Supergroup != \"Opisthokonta\") %&gt;% # remove multicellular metazoa\n  mutate(Supergroup = ifelse(is.na(Supergroup), \"Unknown Eukaryota\", Supergroup),\n         Phylum = ifelse(is.na(Phylum), \"Unknown\", Phylum),\n         Phylum = ifelse(Phylum == \"Alveolata_X\", \"Ellobiopsidae\", Phylum),\n         Supergroup = ifelse(Supergroup == \"Alveolata\", paste(Supergroup, Phylum, sep = \"-\"), Supergroup)) %&gt;% \n  mutate(SUPERGROUP = case_when(\n    Supergroup %in% alv ~ \"Other Alveolata\",\n    Supergroup == \"Eukaryota_X\" ~ \"Unknown Eukaryota\",\n    Phylum == \"Cercozoa\" ~ \"Rhizaria-Cercozoa\",\n    Phylum == \"Radiolaria\" ~ \"Rhizaria-Radiolaria\",\n    Phylum == \"Ochrophyta\" ~ \"Stramenopiles-Ochrophyta\",\n    Phylum == \"Opalozoa\" ~ \"Stramenopiles-Opalozoa\",\n    Phylum == \"Sagenista\" ~ \"Stramenopiles-Sagenista\",\n    TRUE ~ Supergroup\n  )) %&gt;% \n  # Taxa to supergroup\n  mutate(SupergroupPhylum = SUPERGROUP) %&gt;% #add modified \"supergroup-phylum category\"\n  # Average across replicates\n    group_by(FeatureID, SAMPLENAME, VENT, SupergroupPhylum) %&gt;% \n    summarise(AVG = mean(value)) %&gt;% \n  ungroup() %&gt;% \n  separate(SAMPLENAME, c(\"SITE\", \"SAMPLETYPE\", \"YEAR\", \"Sample_tmp\"), remove = TRUE) %&gt;%\n  mutate(REGION = \"Mid-Cayman Rise\") %&gt;%  \n  mutate(VENTNAME = paste(SITE, VENT, sep = \" \")) %&gt;% \n    select(-Sample_tmp) %&gt;% \n  unite(SAMPLE, SITE, SAMPLETYPE, VENT, sep = \" \", remove = FALSE) %&gt;% \n  \n  group_by(SupergroupPhylum, SAMPLE) %&gt;% \n    summarise(SUM = sum(AVG)) %&gt;%\n  ungroup() %&gt;%\n  distinct(SupergroupPhylum, SUM, SAMPLE, .keep_all = TRUE) %&gt;% \n  group_by(SupergroupPhylum) %&gt;% \n  summarise(SAMPLE = list(SAMPLE)) %&gt;% \n  ggplot(aes(x = SAMPLE)) +\n    geom_bar(color = \"black\", width = 0.7, aes(fill = SupergroupPhylum)) +\n    scale_x_upset(n_intersections = 25) +\n  scale_y_continuous(expand = c(0,0)) +\n  labs(x = \"\", y = \"Shared at taxonomic level\") +\n  theme_linedraw() +\n  theme(axis.text.y = element_text(color=\"black\", size=14, face = \"bold\"),\n        axis.text.x = element_text(color=\"black\", size=14, face = \"bold\"),\n        axis.title = element_text(color=\"black\", size=14, face = \"bold\"),\n        legend.text = element_text(color = \"black\", size = 12, face = \"bold\"),\n        legend.title = element_blank(),\n        panel.grid.minor = element_blank(),\n        plot.margin = margin(1, 1, 1, 5, \"cm\")) + \n  scale_fill_manual(values = all_taxa_color)\n\n\nWarning: Expected 8 pieces. Additional pieces discarded in 5926 rows [5, 6, 7, 8, 9, 10,\n11, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 28, 29, 30, ...].\n\n\nWarning: Expected 8 pieces. Missing pieces filled with `NA` in 3451 rows [1, 2, 3, 4,\n12, 13, 18, 19, 23, 27, 35, 44, 45, 46, 48, 49, 53, 54, 55, 56, ...].\n\n\n`summarise()` has grouped output by 'FeatureID', 'SAMPLENAME', 'VENT'. You can\noverride using the `.groups` argument.\n\n\nWarning: Expected 4 pieces. Additional pieces discarded in 7678 rows [1, 2, 3, 4, 5, 6,\n7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\n\n`summarise()` has grouped output by 'SupergroupPhylum'. You can override using\nthe `.groups` argument.\n\n\n\n\n\nCode\n# Filter data to reduce noise and show sample type to vent ecosystem variability.\n# \n\n\n\n\nCode\nasv_wtax_qc %&gt;% \n  filter(value &gt; 0) %&gt;% \n  filter(SAMPLETYPE != \"Incubation\") %&gt;% \n  separate(Taxon, c(\"Domain\", \"Supergroup\", \n                  \"Phylum\", \"Class\", \"Order\",\n                  \"Family\", \"Genus\", \"Species\"), sep = \";\", remove = FALSE) %&gt;%\n  filter(Domain == \"Eukaryota\") %&gt;% #select eukaryotes only\n  filter(Supergroup != \"Opisthokonta\") %&gt;% # remove multicellular metazoa\n  mutate(Supergroup = ifelse(is.na(Supergroup), \"Unknown Eukaryota\", Supergroup),\n         Phylum = ifelse(is.na(Phylum), \"Unknown\", Phylum),\n         Phylum = ifelse(Phylum == \"Alveolata_X\", \"Ellobiopsidae\", Phylum),\n         Supergroup = ifelse(Supergroup == \"Alveolata\", paste(Supergroup, Phylum, sep = \"-\"), Supergroup)) %&gt;% \n  mutate(SUPERGROUP = case_when(\n    Supergroup %in% alv ~ \"Other Alveolata\",\n    Supergroup == \"Eukaryota_X\" ~ \"Unknown Eukaryota\",\n    Phylum == \"Cercozoa\" ~ \"Rhizaria-Cercozoa\",\n    Phylum == \"Radiolaria\" ~ \"Rhizaria-Radiolaria\",\n    Phylum == \"Ochrophyta\" ~ \"Stramenopiles-Ochrophyta\",\n    Phylum == \"Opalozoa\" ~ \"Stramenopiles-Opalozoa\",\n    Phylum == \"Sagenista\" ~ \"Stramenopiles-Sagenista\",\n    TRUE ~ Supergroup\n  )) %&gt;% \n  # Taxa to supergroup\n  mutate(SupergroupPhylum = SUPERGROUP) %&gt;% #add modified \"supergroup-phylum category\"\n  # Average across replicates\n    group_by(FeatureID, SAMPLENAME, VENT, SupergroupPhylum, Taxon) %&gt;% \n    summarise(AVG = mean(value)) %&gt;% \n  ungroup() %&gt;% \n  separate(SAMPLENAME, c(\"SITE\", \"SAMPLETYPE\", \"YEAR\", \"Sample_tmp\"), remove = TRUE) %&gt;%\n  mutate(REGION = \"Mid-Cayman Rise\") %&gt;%  \n  mutate(VENTNAME = paste(SITE, VENT, sep = \" \")) %&gt;% \n    select(-Sample_tmp) %&gt;% \n  unite(SAMPLE, SITE, SAMPLETYPE, VENT, sep = \" \", remove = FALSE) %&gt;% \n  group_by(SupergroupPhylum, Taxon, SAMPLE) %&gt;% \n    summarise(SUM = sum(AVG)) %&gt;%\n  ungroup() %&gt;%\n  distinct(Taxon, SupergroupPhylum, SUM, SAMPLE, .keep_all = TRUE) %&gt;% \n  group_by(SupergroupPhylum, Taxon) %&gt;% \n  summarise(SAMPLE = list(SAMPLE)) %&gt;% \n  ggplot(aes(x = SAMPLE)) +\n    geom_bar(color = \"black\", width = 0.7, aes(fill = SupergroupPhylum)) +\n    scale_x_upset(n_intersections = 25) +\n  scale_y_continuous(expand = c(0,0)) +\n  labs(x = \"\", y = \"Shared at taxonomic level\") +\n  theme_linedraw() +\n  theme(axis.text.y = element_text(color=\"black\", size=14, face = \"bold\"),\n        axis.text.x = element_text(color=\"black\", size=14, face = \"bold\"),\n        axis.title = element_text(color=\"black\", size=14, face = \"bold\"),\n        legend.text = element_text(color = \"black\", size = 12, face = \"bold\"),\n        legend.title = element_blank(),\n        panel.grid.minor = element_blank(),\n        plot.margin = margin(1, 1, 1, 5, \"cm\")) + \n  scale_fill_manual(values = all_taxa_color)\n\n\nWarning: Expected 8 pieces. Additional pieces discarded in 5926 rows [5, 6, 7, 8, 9, 10,\n11, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 28, 29, 30, ...].\n\n\nWarning: Expected 8 pieces. Missing pieces filled with `NA` in 3451 rows [1, 2, 3, 4,\n12, 13, 18, 19, 23, 27, 35, 44, 45, 46, 48, 49, 53, 54, 55, 56, ...].\n\n\n`summarise()` has grouped output by 'FeatureID', 'SAMPLENAME', 'VENT',\n'SupergroupPhylum'. You can override using the `.groups` argument.\n\n\nWarning: Expected 4 pieces. Additional pieces discarded in 7678 rows [1, 2, 3, 4, 5, 6,\n7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\n\n`summarise()` has grouped output by 'SupergroupPhylum', 'Taxon'. You can\noverride using the `.groups` argument.\n`summarise()` has grouped output by 'SupergroupPhylum'. You can override using\nthe `.groups` argument.\n\n\nWarning: Removed 300 rows containing non-finite values (`stat_count()`)."
  },
  {
    "objectID": "asv-analysis.html#asvs-shared-across-mcr-vents",
    "href": "asv-analysis.html#asvs-shared-across-mcr-vents",
    "title": "18S rRNA gene amplicon survey",
    "section": "3.2 ASVs shared across MCR vents",
    "text": "3.2 ASVs shared across MCR vents\nID ASVs that are shared across Piccard and Von Damm, and those that are shared at vent and non-vent samples.\n\n\nCode\nhead(asv_wtax_qc)\n\n\n# A tibble: 6 × 22\n  FeatureID   SAMPLE value Taxon Consensus SAMPLENAME VENT  SITE  SAMPLEID DEPTH\n  &lt;chr&gt;       &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;\n1 000562094e… 52_MC…     0 Euka…       0.8 \"Piccard … Lots… Picc… \"\"       \"\"   \n2 000562094e… 53_MC…     0 Euka…       0.8 \"Piccard … Lots… Picc… \"\"       \"\"   \n3 000562094e… 54_MC…     0 Euka…       0.8 \"VonDamm … Must… VonD… \"\"       \"\"   \n4 000562094e… 55_MC…     0 Euka…       0.8 \"VonDamm … Shri… VonD… \"\"       \"\"   \n5 000562094e… 57_MC…     0 Euka…       0.8 \"Piccard … Shri… Picc… \"\"       \"\"   \n6 000562094e… 58_MC…     0 Euka…       0.8 \"VonDamm … Plume VonD… \"\"       \"\"   \n# ℹ 12 more variables: SAMPLETYPE &lt;chr&gt;, SAMPLETYPE_BIN &lt;chr&gt;, YEAR &lt;chr&gt;,\n#   TEMP &lt;chr&gt;, pH &lt;chr&gt;, PercSeawater &lt;chr&gt;, Mg &lt;chr&gt;, H2 &lt;chr&gt;, H2S &lt;chr&gt;,\n#   CH4 &lt;chr&gt;, ProkConc &lt;chr&gt;, Sample_or_Control &lt;chr&gt;\n\n\nCode\nshared_across &lt;- asv_wtax_qc %&gt;% \n  filter(value &gt; 0) %&gt;% \n  select(FeatureID, SITE, SAMPLETYPE, SAMPLETYPE_BIN, VENT) %&gt;% \n  add_column(PRESENCE = 1) %&gt;% \n  select(FeatureID, SITE, PRESENCE) %&gt;% \n    pivot_wider(names_from = SITE, values_from = PRESENCE, values_fn = sum) %&gt;% \n  mutate(FIELD_PA = case_when(\n    is.na(Piccard) ~ \"VonDamm only\",\n    is.na(VonDamm) ~ \"Piccard only\",\n    (VonDamm &gt; 0 & Piccard &gt; 0) ~ \"Shared across\"\n  )) %&gt;% \n  select(FeatureID, FIELD_PA)\n\n\n\n\nCode\nhead(asv_wtax_qc)\n\n\n# A tibble: 6 × 22\n  FeatureID   SAMPLE value Taxon Consensus SAMPLENAME VENT  SITE  SAMPLEID DEPTH\n  &lt;chr&gt;       &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;\n1 000562094e… 52_MC…     0 Euka…       0.8 \"Piccard … Lots… Picc… \"\"       \"\"   \n2 000562094e… 53_MC…     0 Euka…       0.8 \"Piccard … Lots… Picc… \"\"       \"\"   \n3 000562094e… 54_MC…     0 Euka…       0.8 \"VonDamm … Must… VonD… \"\"       \"\"   \n4 000562094e… 55_MC…     0 Euka…       0.8 \"VonDamm … Shri… VonD… \"\"       \"\"   \n5 000562094e… 57_MC…     0 Euka…       0.8 \"Piccard … Shri… Picc… \"\"       \"\"   \n6 000562094e… 58_MC…     0 Euka…       0.8 \"VonDamm … Plume VonD… \"\"       \"\"   \n# ℹ 12 more variables: SAMPLETYPE &lt;chr&gt;, SAMPLETYPE_BIN &lt;chr&gt;, YEAR &lt;chr&gt;,\n#   TEMP &lt;chr&gt;, pH &lt;chr&gt;, PercSeawater &lt;chr&gt;, Mg &lt;chr&gt;, H2 &lt;chr&gt;, H2S &lt;chr&gt;,\n#   CH4 &lt;chr&gt;, ProkConc &lt;chr&gt;, Sample_or_Control &lt;chr&gt;\n\n\nCode\nshared_type &lt;- asv_wtax_qc %&gt;% \n  filter(value &gt; 0) %&gt;% \n  select(FeatureID, SITE, SAMPLETYPE, SAMPLETYPE_BIN, VENT) %&gt;% \n  add_column(PRESENCE = 1) %&gt;% \n  select(FeatureID, SAMPLETYPE_BIN, PRESENCE) %&gt;% \n    pivot_wider(names_from = SAMPLETYPE_BIN, values_from = PRESENCE, values_fn = sum) %&gt;% \n  mutate(TYPE_PA = case_when(\n    (`non-vent` &gt; 0 & vent &gt; 0) ~ \"Cosmo\",\n    `non-vent` &gt; 0 ~ \"Vent only\",\n    vent &gt; 0 ~ \"Non-vent only\",\n  )) %&gt;% \n  select(FeatureID, TYPE_PA)\nstr(shared_type)\n\n\ntibble [8,026 × 2] (S3: tbl_df/tbl/data.frame)\n $ FeatureID: chr [1:8026] \"0016c92095329cf769d2fc9f5a0b826c\" \"0024760a130d14a29d63bb07f082733e\" \"00508684a4c673b882a5d186733b3271\" \"0052bc3663c02b5375d7472fdcb21cd0\" ...\n $ TYPE_PA  : chr [1:8026] \"Non-vent only\" \"Vent only\" \"Non-vent only\" \"Vent only\" ..."
  },
  {
    "objectID": "asv-analysis.html#asvs-shared-in-situ-tf-for-each-experiment",
    "href": "asv-analysis.html#asvs-shared-in-situ-tf-for-each-experiment",
    "title": "18S rRNA gene amplicon survey",
    "section": "3.3 ASVs shared in situ & Tf for each experiment",
    "text": "3.3 ASVs shared in situ & Tf for each experiment\n\n\nCode\n# head(asv_wtax_qc)\n# unique(asv_wtax_qc$SAMPLETYPE)\nshared_exp &lt;- asv_wtax_qc %&gt;% \n  filter(value &gt; 0) %&gt;% \n  mutate(EXP_BIN = case_when(\n    SAMPLETYPE == \"Incubation\" ~ \"Incubation\",\n    TRUE ~ \"in situ\"\n  )) %&gt;% \n  select(FeatureID, SITE, EXP_BIN, SAMPLETYPE_BIN, VENT) %&gt;% \n  add_column(PRESENCE = 1) %&gt;% \n  select(FeatureID, EXP_BIN, SITE, VENT, PRESENCE) %&gt;% \n    pivot_wider(names_from = EXP_BIN, values_from = PRESENCE, values_fn = sum) %&gt;% \n  mutate(EXP_PA = case_when(\n    (`in situ` &gt; 0 & Incubation &gt; 0) ~ \"Shared\",\n    `in situ` &gt; 0 ~ \"In situ only\",\n    Incubation &gt; 0 ~ \"Incubation only\",\n  )) %&gt;% \n  select(FeatureID, EXP_PA)\n\n\n\nTable to present shared ASVs and taxa\nNumber of ASVs that are shared or unique at Piccard and Von Damm\n\n\nCode\ntable(left_join(shared_across, shared_exp) %&gt;% \n  left_join(shared_type) %&gt;% select(FIELD_PA))\n\n\nJoining with `by = join_by(FeatureID)`\nJoining with `by = join_by(FeatureID)`\n\n\nFIELD_PA\n Piccard only Shared across  VonDamm only \n         1861          5535          7277 \n\n\nNumber of ASVs that are shared between in situ and incubation experiments\n\n\nCode\ntable(left_join(shared_across, shared_exp) %&gt;% \n  left_join(shared_type) %&gt;% select(EXP_PA))\n\n\nJoining with `by = join_by(FeatureID)`\nJoining with `by = join_by(FeatureID)`\n\n\nEXP_PA\n   In situ only Incubation only          Shared \n           6362            5573            2738 \n\n\n\n\nCode\ntable(left_join(shared_across, shared_exp) %&gt;% \n  left_join(shared_type) %&gt;% select(TYPE_PA))\n\n\nJoining with `by = join_by(FeatureID)`\nJoining with `by = join_by(FeatureID)`\n\n\nTYPE_PA\n        Cosmo Non-vent only     Vent only \n         7586          2034          5053 \n\n\nFor ASVs shared between in situ and experiment (Tf)\n\n\nCode\ntable(left_join(shared_across, shared_exp) %&gt;% \n  left_join(shared_type) %&gt;% \n    filter(EXP_PA == \"Shared\") %&gt;% \n    select(TYPE_PA))\n\n\nJoining with `by = join_by(FeatureID)`\nJoining with `by = join_by(FeatureID)`\n\n\nTYPE_PA\n    Cosmo Vent only \n     2488       250 \n\n\nCode\n    # select(FIELD_PA))\n\n\nWhat is the taxonomic composition of those that are shared between the grazing experiments and in situ?\n\n\nCode\nleft_join(shared_across, shared_exp) %&gt;% \n  left_join(shared_type) %&gt;% \n  right_join(asv_wtax_qc %&gt;% filter(value &gt; 0)) %&gt;% \n  # filter(EXP_PA == \"Shared\") %&gt;% \n  group_by(SAMPLENAME, SITE, VENT, SAMPLETYPE, Taxon, FeatureID, EXP_PA) %&gt;% \n  summarise(avg_seq = mean(value)) %&gt;% \n  separate(Taxon, c(\"Domain\", \"Supergroup\", \n                  \"Phylum\", \"Class\", \"Order\",\n                  \"Family\", \"Genus\", \"Species\"), sep = \";\", remove = FALSE) %&gt;%\n  filter(Domain == \"Eukaryota\") %&gt;% #select eukaryotes only\n  filter(Supergroup != \"Opisthokonta\") %&gt;% # remove multicellular metazoa\n  mutate(Supergroup = ifelse(is.na(Supergroup), \"Unknown Eukaryota\", Supergroup),\n         Phylum = ifelse(is.na(Phylum), \"Unknown\", Phylum),\n         Phylum = ifelse(Phylum == \"Alveolata_X\", \"Ellobiopsidae\", Phylum),\n         Supergroup = ifelse(Supergroup == \"Alveolata\", paste(Supergroup, Phylum, sep = \"-\"), Supergroup)) %&gt;% \n  mutate(SUPERGROUP = case_when(\n    Supergroup %in% alv ~ \"Other Alveolata\",\n    Supergroup == \"Eukaryota_X\" ~ \"Unknown Eukaryota\",\n    Phylum == \"Cercozoa\" ~ \"Rhizaria-Cercozoa\",\n    Phylum == \"Radiolaria\" ~ \"Rhizaria-Radiolaria\",\n    Phylum == \"Ochrophyta\" ~ \"Stramenopiles-Ochrophyta\",\n    Phylum == \"Opalozoa\" ~ \"Stramenopiles-Opalozoa\",\n    Phylum == \"Sagenista\" ~ \"Stramenopiles-Sagenista\",\n    TRUE ~ Supergroup\n  )) %&gt;% \n  group_by(SITE, VENT, SUPERGROUP, EXP_PA) %&gt;% \n  summarise(SUM = sum(avg_seq)) %&gt;% \n  # mutate(SAMPLENAME_ORDER = factor(SAMPLENAME, levels = mcr_sample_order)) %&gt;% \n  ggplot(aes(x = VENT, y = SUM)) +\n    geom_bar(stat = \"identity\", position = \"fill\", color = \"black\", aes(fill = SUPERGROUP)) +\n  facet_grid(EXP_PA ~ SITE, scales = \"free\", space = \"free\") +\n  theme_minimal() +\n  theme(legend.position = \"right\",\n        axis.text.x = element_text(color = \"black\", angle = 45, hjust = 1, vjust = 1))\n\n\nJoining with `by = join_by(FeatureID)`\nJoining with `by = join_by(FeatureID)`\nJoining with `by = join_by(FeatureID)`\n\n\nWarning in right_join(., asv_wtax_qc %&gt;% filter(value &gt; 0)): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 7 of `x` matches multiple rows in `y`.\nℹ Row 7 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n`summarise()` has grouped output by 'SAMPLENAME', 'SITE', 'VENT', 'SAMPLETYPE',\n'Taxon', 'FeatureID'. You can override using the `.groups` argument.\n\n\nWarning: Expected 8 pieces. Additional pieces discarded in 22276 rows [3, 17, 18, 19,\n20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, ...].\n\n\nWarning: Expected 8 pieces. Missing pieces filled with `NA` in 11065 rows [1, 2, 4, 5,\n6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 29, 30, 31, 39, 40, ...].\n\n\n`summarise()` has grouped output by 'SITE', 'VENT', 'SUPERGROUP'. You can\noverride using the `.groups` argument.\n\n\n\n\n\nCreate table as output\n\n\nCode\ntax_table_shared &lt;- left_join(shared_across, shared_exp) %&gt;% \n  left_join(shared_type) %&gt;% \n  right_join(asv_wtax_qc %&gt;% filter(value &gt; 0)) %&gt;% \n  filter(EXP_PA == \"Shared\") %&gt;% \n  select(FeatureID, ends_with(\"_PA\"), Taxon) %&gt;% \n  distinct()\n\n\nJoining with `by = join_by(FeatureID)`\nJoining with `by = join_by(FeatureID)`\nJoining with `by = join_by(FeatureID)`\n\n\nWarning in right_join(., asv_wtax_qc %&gt;% filter(value &gt; 0)): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 7 of `x` matches multiple rows in `y`.\nℹ Row 7 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nCode\nwrite_delim(tax_table_shared, file = \"output-data/list-of-shared-taxa.txt\", delim = \"\\t\")"
  },
  {
    "objectID": "asv-analysis.html#richness",
    "href": "asv-analysis.html#richness",
    "title": "18S rRNA gene amplicon survey",
    "section": "2.3 Richness",
    "text": "2.3 Richness\n\n\nCode\n# | message: false\n# remotes::install_github(\"adw96/breakaway\")\n# remotes::install_github(\"adw96/DivNet\")\n\n# library(breakaway); library(DivNet); library(phyloseq); library(tidyverse)\n\n\n\n\nCode\nload(\"input-data/MCR-amplicon-data.RData\", verbose = TRUE)\n\n\nLoading objects:\n  phylo_obj\n  samplenames\n  physeq_wnames\n  metadata_mcr\n  asv_wtax_qc\n  TAX\n  tax_matrix\n  physeq_mcr\n\n\n\n\nCode\nsample_data(physeq_mcr)\n\n\n                                                         X           VENT\n52_MCR_Piccard_expTf_LotsOShrimp_A_0_Jun2021             2    LotsOShrimp\n53_MCR_Piccard_expTf_LotsOShrimp_B_0_Jun2021             3    LotsOShrimp\n54_MCR_VonDamm_expTf_MustardStand_0_0_Jun2021            9   MustardStand\n55_MCR_VonDamm_expTf_ShrimpHole_0_0_Jun2021             10     ShrimpHole\n57_MCR_Piccard_expTf_Shrimpocalypse_0_0_Jun2021          4 Shrimpocalypse\n58_MCR_VonDamm_expTf_Plume_0_0_Jun2021                  11          Plume\n59_MCR_VonDamm_expTf_X18_0_0_Jun2021                    12            X18\n60_MCR_VonDamm_expTf_BSW_0_0_Jun2021                    13            BSW\n61_MCR_VonDamm_expTf_Rav2_0_0_Jun2021                   14           Rav2\n63_MCR_VonDamm_CTD_BSW_CTD002_0_Jun2021                  8            BSW\n65_MCR_VonDamm_CTD_Plume_CTD003_0_Jun2021               15          Plume\n66_MCR_VonDamm_HOG_ArrowLoop_J21243HOG18_5_Jun2021      16      ArrowLoop\n67_MCR_VonDamm_HOG_WhiteCastle_J21235HOG12_5_Jun2021    17    WhiteCastle\n69_MCR_VonDamm_HOG_MustardStand_J21243HOG14_5_Jun2021   18   MustardStand\n70_MCR_VonDamm_HOG_Rav2_J21238HOG14_5_Jun2021           19           Rav2\n71_MCR_VonDamm_HOG_OldManTree_J21238HOG20_5_Jun2021     20     OldManTree\n72_MCR_VonDamm_HOG_ShrimpHole_J21244HOG18_0_Jun2021     21     ShrimpHole\n73_MCR_Piccard_CTD_BSW_CTD005_0_Jun2021                  1            BSW\n74_MCR_Piccard_CTD_Plume_CTD004_5_Jun2021                5          Plume\n76_MCR_VonDamm_HOG_X18_J21235HOG20_0_Jun2021            22            X18\n77_MCR_Piccard_HOG_Shrimpocalypse_J21240HOG14_0_Jun2021  6 Shrimpocalypse\n78_MCR_Piccard_HOG_LotsOShrimp_J21241HOG14_0_Jun2021     7    LotsOShrimp\n80_MCR_VonDamm_HOG_Rav2_J21244HOG20_0_Jun2021           23           Rav2\n                                                           SITE SAMPLEID  DEPTH\n52_MCR_Piccard_expTf_LotsOShrimp_A_0_Jun2021            Piccard                \n53_MCR_Piccard_expTf_LotsOShrimp_B_0_Jun2021            Piccard                \n54_MCR_VonDamm_expTf_MustardStand_0_0_Jun2021           VonDamm                \n55_MCR_VonDamm_expTf_ShrimpHole_0_0_Jun2021             VonDamm                \n57_MCR_Piccard_expTf_Shrimpocalypse_0_0_Jun2021         Piccard                \n58_MCR_VonDamm_expTf_Plume_0_0_Jun2021                  VonDamm                \n59_MCR_VonDamm_expTf_X18_0_0_Jun2021                    VonDamm                \n60_MCR_VonDamm_expTf_BSW_0_0_Jun2021                    VonDamm                \n61_MCR_VonDamm_expTf_Rav2_0_0_Jun2021                   VonDamm                \n63_MCR_VonDamm_CTD_BSW_CTD002_0_Jun2021                 VonDamm            2400\n65_MCR_VonDamm_CTD_Plume_CTD003_0_Jun2021               VonDamm            1979\n66_MCR_VonDamm_HOG_ArrowLoop_J21243HOG18_5_Jun2021      VonDamm            2309\n67_MCR_VonDamm_HOG_WhiteCastle_J21235HOG12_5_Jun2021    VonDamm            2307\n69_MCR_VonDamm_HOG_MustardStand_J21243HOG14_5_Jun2021   VonDamm            2374\n70_MCR_VonDamm_HOG_Rav2_J21238HOG14_5_Jun2021           VonDamm          2389.6\n71_MCR_VonDamm_HOG_OldManTree_J21238HOG20_5_Jun2021     VonDamm          2375.8\n72_MCR_VonDamm_HOG_ShrimpHole_J21244HOG18_0_Jun2021     VonDamm            2376\n73_MCR_Piccard_CTD_BSW_CTD005_0_Jun2021                 Piccard            4776\n74_MCR_Piccard_CTD_Plume_CTD004_5_Jun2021               Piccard            4944\n76_MCR_VonDamm_HOG_X18_J21235HOG20_0_Jun2021            VonDamm            2377\n77_MCR_Piccard_HOG_Shrimpocalypse_J21240HOG14_0_Jun2021 Piccard            4945\n78_MCR_Piccard_HOG_LotsOShrimp_J21241HOG14_0_Jun2021    Piccard            4967\n80_MCR_VonDamm_HOG_Rav2_J21244HOG20_0_Jun2021           VonDamm          2388.9\n                                                        SAMPLETYPE\n52_MCR_Piccard_expTf_LotsOShrimp_A_0_Jun2021            Incubation\n53_MCR_Piccard_expTf_LotsOShrimp_B_0_Jun2021            Incubation\n54_MCR_VonDamm_expTf_MustardStand_0_0_Jun2021           Incubation\n55_MCR_VonDamm_expTf_ShrimpHole_0_0_Jun2021             Incubation\n57_MCR_Piccard_expTf_Shrimpocalypse_0_0_Jun2021         Incubation\n58_MCR_VonDamm_expTf_Plume_0_0_Jun2021                  Incubation\n59_MCR_VonDamm_expTf_X18_0_0_Jun2021                    Incubation\n60_MCR_VonDamm_expTf_BSW_0_0_Jun2021                    Incubation\n61_MCR_VonDamm_expTf_Rav2_0_0_Jun2021                   Incubation\n63_MCR_VonDamm_CTD_BSW_CTD002_0_Jun2021                 Background\n65_MCR_VonDamm_CTD_Plume_CTD003_0_Jun2021                    Plume\n66_MCR_VonDamm_HOG_ArrowLoop_J21243HOG18_5_Jun2021            Vent\n67_MCR_VonDamm_HOG_WhiteCastle_J21235HOG12_5_Jun2021          Vent\n69_MCR_VonDamm_HOG_MustardStand_J21243HOG14_5_Jun2021         Vent\n70_MCR_VonDamm_HOG_Rav2_J21238HOG14_5_Jun2021                 Vent\n71_MCR_VonDamm_HOG_OldManTree_J21238HOG20_5_Jun2021           Vent\n72_MCR_VonDamm_HOG_ShrimpHole_J21244HOG18_0_Jun2021           Vent\n73_MCR_Piccard_CTD_BSW_CTD005_0_Jun2021                 Background\n74_MCR_Piccard_CTD_Plume_CTD004_5_Jun2021                    Plume\n76_MCR_VonDamm_HOG_X18_J21235HOG20_0_Jun2021                  Vent\n77_MCR_Piccard_HOG_Shrimpocalypse_J21240HOG14_0_Jun2021       Vent\n78_MCR_Piccard_HOG_LotsOShrimp_J21241HOG14_0_Jun2021          Vent\n80_MCR_VonDamm_HOG_Rav2_J21244HOG20_0_Jun2021                 Vent\n                                                        SAMPLETYPE_BIN YEAR\n52_MCR_Piccard_expTf_LotsOShrimp_A_0_Jun2021                  non-vent 2020\n53_MCR_Piccard_expTf_LotsOShrimp_B_0_Jun2021                  non-vent 2020\n54_MCR_VonDamm_expTf_MustardStand_0_0_Jun2021                 non-vent 2020\n55_MCR_VonDamm_expTf_ShrimpHole_0_0_Jun2021                   non-vent 2020\n57_MCR_Piccard_expTf_Shrimpocalypse_0_0_Jun2021               non-vent 2020\n58_MCR_VonDamm_expTf_Plume_0_0_Jun2021                        non-vent 2020\n59_MCR_VonDamm_expTf_X18_0_0_Jun2021                          non-vent 2020\n60_MCR_VonDamm_expTf_BSW_0_0_Jun2021                          non-vent 2020\n61_MCR_VonDamm_expTf_Rav2_0_0_Jun2021                         non-vent 2020\n63_MCR_VonDamm_CTD_BSW_CTD002_0_Jun2021                       non-vent 2020\n65_MCR_VonDamm_CTD_Plume_CTD003_0_Jun2021                     non-vent 2020\n66_MCR_VonDamm_HOG_ArrowLoop_J21243HOG18_5_Jun2021                vent 2020\n67_MCR_VonDamm_HOG_WhiteCastle_J21235HOG12_5_Jun2021              vent 2020\n69_MCR_VonDamm_HOG_MustardStand_J21243HOG14_5_Jun2021             vent 2020\n70_MCR_VonDamm_HOG_Rav2_J21238HOG14_5_Jun2021                     vent 2020\n71_MCR_VonDamm_HOG_OldManTree_J21238HOG20_5_Jun2021               vent 2020\n72_MCR_VonDamm_HOG_ShrimpHole_J21244HOG18_0_Jun2021               vent 2020\n73_MCR_Piccard_CTD_BSW_CTD005_0_Jun2021                       non-vent 2020\n74_MCR_Piccard_CTD_Plume_CTD004_5_Jun2021                     non-vent 2020\n76_MCR_VonDamm_HOG_X18_J21235HOG20_0_Jun2021                      vent 2020\n77_MCR_Piccard_HOG_Shrimpocalypse_J21240HOG14_0_Jun2021           vent 2020\n78_MCR_Piccard_HOG_LotsOShrimp_J21241HOG14_0_Jun2021              vent 2020\n80_MCR_VonDamm_HOG_Rav2_J21244HOG20_0_Jun2021                     vent 2020\n                                                         TEMP   pH PercSeawater\n52_MCR_Piccard_expTf_LotsOShrimp_A_0_Jun2021             &lt;NA&gt; &lt;NA&gt;         &lt;NA&gt;\n53_MCR_Piccard_expTf_LotsOShrimp_B_0_Jun2021             &lt;NA&gt; &lt;NA&gt;         &lt;NA&gt;\n54_MCR_VonDamm_expTf_MustardStand_0_0_Jun2021            &lt;NA&gt; &lt;NA&gt;         &lt;NA&gt;\n55_MCR_VonDamm_expTf_ShrimpHole_0_0_Jun2021              &lt;NA&gt; &lt;NA&gt;         &lt;NA&gt;\n57_MCR_Piccard_expTf_Shrimpocalypse_0_0_Jun2021          &lt;NA&gt; &lt;NA&gt;         &lt;NA&gt;\n58_MCR_VonDamm_expTf_Plume_0_0_Jun2021                   &lt;NA&gt; &lt;NA&gt;         &lt;NA&gt;\n59_MCR_VonDamm_expTf_X18_0_0_Jun2021                     &lt;NA&gt; &lt;NA&gt;         &lt;NA&gt;\n60_MCR_VonDamm_expTf_BSW_0_0_Jun2021                     &lt;NA&gt; &lt;NA&gt;         &lt;NA&gt;\n61_MCR_VonDamm_expTf_Rav2_0_0_Jun2021                    &lt;NA&gt; &lt;NA&gt;         &lt;NA&gt;\n63_MCR_VonDamm_CTD_BSW_CTD002_0_Jun2021                 4.181 &lt;NA&gt;          100\n65_MCR_VonDamm_CTD_Plume_CTD003_0_Jun2021               4.208 &lt;NA&gt;         &lt;NA&gt;\n66_MCR_VonDamm_HOG_ArrowLoop_J21243HOG18_5_Jun2021        137 5.69         33.8\n67_MCR_VonDamm_HOG_WhiteCastle_J21235HOG12_5_Jun2021      108 5.49         16.6\n69_MCR_VonDamm_HOG_MustardStand_J21243HOG14_5_Jun2021     108 5.63         36.2\n70_MCR_VonDamm_HOG_Rav2_J21238HOG14_5_Jun2021              94 5.81         33.4\n71_MCR_VonDamm_HOG_OldManTree_J21238HOG20_5_Jun2021     121.6 5.69         25.6\n72_MCR_VonDamm_HOG_ShrimpHole_J21244HOG18_0_Jun2021        21 7.72         96.4\n73_MCR_Piccard_CTD_BSW_CTD005_0_Jun2021                  4.46 &lt;NA&gt;          100\n74_MCR_Piccard_CTD_Plume_CTD004_5_Jun2021                4.46 &lt;NA&gt;         &lt;NA&gt;\n76_MCR_VonDamm_HOG_X18_J21235HOG20_0_Jun2021               48 6.99           52\n77_MCR_Piccard_HOG_Shrimpocalypse_J21240HOG14_0_Jun2021    85 5.11         81.7\n78_MCR_Piccard_HOG_LotsOShrimp_J21241HOG14_0_Jun2021       36 5.92         94.9\n80_MCR_VonDamm_HOG_Rav2_J21244HOG20_0_Jun2021            98.2 5.81         33.4\n                                                          Mg      H2  H2S\n52_MCR_Piccard_expTf_LotsOShrimp_A_0_Jun2021               0         &lt;NA&gt;\n53_MCR_Piccard_expTf_LotsOShrimp_B_0_Jun2021               0         &lt;NA&gt;\n54_MCR_VonDamm_expTf_MustardStand_0_0_Jun2021              0         &lt;NA&gt;\n55_MCR_VonDamm_expTf_ShrimpHole_0_0_Jun2021                0         &lt;NA&gt;\n57_MCR_Piccard_expTf_Shrimpocalypse_0_0_Jun2021            0         &lt;NA&gt;\n58_MCR_VonDamm_expTf_Plume_0_0_Jun2021                     0         &lt;NA&gt;\n59_MCR_VonDamm_expTf_X18_0_0_Jun2021                       0         &lt;NA&gt;\n60_MCR_VonDamm_expTf_BSW_0_0_Jun2021                       0         &lt;NA&gt;\n61_MCR_VonDamm_expTf_Rav2_0_0_Jun2021                      0         &lt;NA&gt;\n63_MCR_VonDamm_CTD_BSW_CTD002_0_Jun2021                 &lt;NA&gt;         &lt;NA&gt;\n65_MCR_VonDamm_CTD_Plume_CTD003_0_Jun2021               &lt;NA&gt;         &lt;NA&gt;\n66_MCR_VonDamm_HOG_ArrowLoop_J21243HOG18_5_Jun2021      18.1   11500 1.74\n67_MCR_VonDamm_HOG_WhiteCastle_J21235HOG12_5_Jun2021     8.9   14500 1.96\n69_MCR_VonDamm_HOG_MustardStand_J21243HOG14_5_Jun2021   19.4    9800 1.79\n70_MCR_VonDamm_HOG_Rav2_J21238HOG14_5_Jun2021             18   10200 1.37\n71_MCR_VonDamm_HOG_OldManTree_J21238HOG20_5_Jun2021     13.7   11600 1.77\n72_MCR_VonDamm_HOG_ShrimpHole_J21244HOG18_0_Jun2021     51.8 5.52744 &lt;NA&gt;\n73_MCR_Piccard_CTD_BSW_CTD005_0_Jun2021                 53.7         &lt;NA&gt;\n74_MCR_Piccard_CTD_Plume_CTD004_5_Jun2021               &lt;NA&gt;         &lt;NA&gt;\n76_MCR_VonDamm_HOG_X18_J21235HOG20_0_Jun2021              28         2.11\n77_MCR_Piccard_HOG_Shrimpocalypse_J21240HOG14_0_Jun2021 43.9       0 &lt;NA&gt;\n78_MCR_Piccard_HOG_LotsOShrimp_J21241HOG14_0_Jun2021      51   22700 &lt;NA&gt;\n80_MCR_VonDamm_HOG_Rav2_J21244HOG20_0_Jun2021             18   10200 1.37\n                                                              CH4   ProkConc\n52_MCR_Piccard_expTf_LotsOShrimp_A_0_Jun2021                 &lt;NA&gt;           \n53_MCR_Piccard_expTf_LotsOShrimp_B_0_Jun2021                 &lt;NA&gt;           \n54_MCR_VonDamm_expTf_MustardStand_0_0_Jun2021                &lt;NA&gt;           \n55_MCR_VonDamm_expTf_ShrimpHole_0_0_Jun2021                  &lt;NA&gt;           \n57_MCR_Piccard_expTf_Shrimpocalypse_0_0_Jun2021              &lt;NA&gt;           \n58_MCR_VonDamm_expTf_Plume_0_0_Jun2021                       &lt;NA&gt;           \n59_MCR_VonDamm_expTf_X18_0_0_Jun2021                         &lt;NA&gt;           \n60_MCR_VonDamm_expTf_BSW_0_0_Jun2021                         &lt;NA&gt;           \n61_MCR_VonDamm_expTf_Rav2_0_0_Jun2021                        &lt;NA&gt;           \n63_MCR_VonDamm_CTD_BSW_CTD002_0_Jun2021                      &lt;NA&gt; 34705.9161\n65_MCR_VonDamm_CTD_Plume_CTD003_0_Jun2021                    &lt;NA&gt;  16478.313\n66_MCR_VonDamm_HOG_ArrowLoop_J21243HOG18_5_Jun2021        1893.66  10369.792\n67_MCR_VonDamm_HOG_WhiteCastle_J21235HOG12_5_Jun2021      2251.92           \n69_MCR_VonDamm_HOG_MustardStand_J21243HOG14_5_Jun2021   1819.9608      56677\n70_MCR_VonDamm_HOG_Rav2_J21238HOG14_5_Jun2021             1893.66           \n71_MCR_VonDamm_HOG_OldManTree_J21238HOG20_5_Jun2021      1985.784           \n72_MCR_VonDamm_HOG_ShrimpHole_J21244HOG18_0_Jun2021      218.0268           \n73_MCR_Piccard_CTD_BSW_CTD005_0_Jun2021                      &lt;NA&gt;  11860.187\n74_MCR_Piccard_CTD_Plume_CTD004_5_Jun2021                    &lt;NA&gt;   51429.13\n76_MCR_VonDamm_HOG_X18_J21235HOG20_0_Jun2021             1310.208 111429.781\n77_MCR_Piccard_HOG_Shrimpocalypse_J21240HOG14_0_Jun2021  27.53484  238585.68\n78_MCR_Piccard_HOG_LotsOShrimp_J21241HOG14_0_Jun2021     11.46432  53878.136\n80_MCR_VonDamm_HOG_Rav2_J21244HOG20_0_Jun2021             1893.66           \n                                                        Sample_or_Control\n52_MCR_Piccard_expTf_LotsOShrimp_A_0_Jun2021                       Sample\n53_MCR_Piccard_expTf_LotsOShrimp_B_0_Jun2021                       Sample\n54_MCR_VonDamm_expTf_MustardStand_0_0_Jun2021                      Sample\n55_MCR_VonDamm_expTf_ShrimpHole_0_0_Jun2021                        Sample\n57_MCR_Piccard_expTf_Shrimpocalypse_0_0_Jun2021                    Sample\n58_MCR_VonDamm_expTf_Plume_0_0_Jun2021                             Sample\n59_MCR_VonDamm_expTf_X18_0_0_Jun2021                               Sample\n60_MCR_VonDamm_expTf_BSW_0_0_Jun2021                               Sample\n61_MCR_VonDamm_expTf_Rav2_0_0_Jun2021                              Sample\n63_MCR_VonDamm_CTD_BSW_CTD002_0_Jun2021                            Sample\n65_MCR_VonDamm_CTD_Plume_CTD003_0_Jun2021                          Sample\n66_MCR_VonDamm_HOG_ArrowLoop_J21243HOG18_5_Jun2021                 Sample\n67_MCR_VonDamm_HOG_WhiteCastle_J21235HOG12_5_Jun2021               Sample\n69_MCR_VonDamm_HOG_MustardStand_J21243HOG14_5_Jun2021              Sample\n70_MCR_VonDamm_HOG_Rav2_J21238HOG14_5_Jun2021                      Sample\n71_MCR_VonDamm_HOG_OldManTree_J21238HOG20_5_Jun2021                Sample\n72_MCR_VonDamm_HOG_ShrimpHole_J21244HOG18_0_Jun2021                Sample\n73_MCR_Piccard_CTD_BSW_CTD005_0_Jun2021                            Sample\n74_MCR_Piccard_CTD_Plume_CTD004_5_Jun2021                          Sample\n76_MCR_VonDamm_HOG_X18_J21235HOG20_0_Jun2021                       Sample\n77_MCR_Piccard_HOG_Shrimpocalypse_J21240HOG14_0_Jun2021            Sample\n78_MCR_Piccard_HOG_LotsOShrimp_J21241HOG14_0_Jun2021               Sample\n80_MCR_VonDamm_HOG_Rav2_J21244HOG20_0_Jun2021                      Sample\n\n\nRscript run on HPC:\n\n\nCode\n# | eval: false\ngen_divnet &lt;- divnet(tax_glom(physeq_mcr, taxrank = \"Genus\"), base = 3)\n\n# Incubation vs in situ\ngen_divnet_SAMPLETYPE &lt;- divnet(tax_glom(physeq_mcr, taxrank = \"Genus\"), X = \"SAMPLETYPE\", base = 3)\n\n# Vent vs. non-vent\ngen_divnet_SAMPLETYPE_BIN &lt;- divnet(tax_glom(physeq_mcr, taxrank = \"Genus\"), X = \"SAMPLETYPE_BIN\", base = 3)\n# location and vent vs plume vs background\n\n# Piccard vs. Von Damm\ngen_divnet_SITE &lt;- divnet(tax_glom(physeq_mcr, taxrank = \"Genus\"), X = \"SITE\", base = 3)\n\nsave(gen_divnet, gen_divnet_SAMPLETYPE, gen_divnet_SAMPLETYPE_BIN, gen_divnet_SITE, file = \"GENUS.Rdata\")\n\n###\n## Analyzed at the ASV level:\nspp_divnet &lt;- divnet(tax_glom(physeq_mcr, taxrank = \"Species\"), base = 3)\n\n# Incubation vs. in situ\nspp_divnet_SAMPLETYPE &lt;- divnet(tax_glom(physeq_mcr, taxrank = \"Species\"), X = \"SAMPLETYPE\", base = 3)\n\n# Vent vs. non-vent\nspp_divnet_SAMPLETYPE_BIN &lt;- divnet(tax_glom(physeq_mcr, taxrank = \"Species\"), X = \"SAMPLETYPE_BIN\", base = 3)\n\n# Piccard vs. VD\nspp_divnet_SITE &lt;- divnet(tax_glom(physeq_mcr, taxrank = \"Species\"), X = \"SITE\", base = 3)\n\n# save(spp_divnet, spp_divnet_SAMPLETYPE, spp_divnet_SAMPLETYPE_BIN, spp_divnet_SITE, file = \"SPECIES.Rdata\")\n\n\nAbove is run on HPC. Bring outputs locally to visualize output below.\n\n\nCode\nload(\"input-data/SPECIES.Rdata\", verbose = TRUE)\n\n\nLoading objects:\n  spp_divnet\n  spp_divnet_SAMPLETYPE\n  spp_divnet_SAMPLETYPE_BIN\n  spp_divnet_SITE\n\n\nCode\nload(\"input-data/GENUS.Rdata\", verbose = TRUE)\n\n\nLoading objects:\n  gen_divnet\n  gen_divnet_SAMPLETYPE\n  gen_divnet_SAMPLETYPE_BIN\n  gen_divnet_SITE\n\n\n\n\nCode\n# head(metadata_mcr)\nfxn_extract_divet &lt;- function(df){\n  df$shannon %&gt;% summary %&gt;% \n  pivot_longer(cols = starts_with(\"estimate\"), names_to = \"ESTIMATE-shannon\", values_to = \"Shannon\") %&gt;%\n  pivot_longer(cols = starts_with(\"error\"), names_to = \"ERROR-shannon\", values_to = \"Shannon-error\") %&gt;%\n  pivot_longer(cols = starts_with(\"lower\"), names_to = \"LOWER-shannon\", values_to = \"Shannon-lower\") %&gt;%\n  pivot_longer(cols = starts_with(\"upper\"), names_to = \"UPPER-shannon\", values_to = \"Shannon-upper\") %&gt;%\n  left_join(df$simpson %&gt;% summary %&gt;%\n      pivot_longer(cols = starts_with(\"estimate\"), names_to = \"ESTIMATE-simpson\", values_to = \"Simpson\") %&gt;%\n      pivot_longer(cols = starts_with(\"error\"), names_to = \"ERROR-simpson\", values_to = \"Simpson-error\") %&gt;%\n      pivot_longer(cols = starts_with(\"lower\"), names_to = \"LOWER-simpson\", values_to = \"Simpson-lower\") %&gt;%\n      pivot_longer(cols = starts_with(\"upper\"), names_to = \"UPPER-simpson\", values_to = \"Simpson-upper\"),\n    by = c(\"sample_names\" = \"sample_names\")) %&gt;%\n  left_join(metadata_mcr %&gt;% rownames_to_column(var = \"sample_names\")) %&gt;%\n  select(-sample_names, -ends_with(\"-simpson\"), -ends_with(\"-shannon\"), -starts_with(\"model.\"), -starts_with(\"name.\")) %&gt;%\n    mutate(TYPE_BIN = case_when(\n      SAMPLETYPE != \"Incubation\" ~ \"in situ\",\n      TRUE ~ \"Incubation\"\n    )) %&gt;% \n  distinct()\n}\n\n\ngen_divnet gen_divnet_SAMPLETYPE gen_divnet_SAMPLETYPE_BIN gen_divnet_SITE spp_divnet spp_divnet_SAMPLETYPE spp_divnet_SAMPLETYPE_BIN spp_divnet_SITE\n\n\nCode\n### Set colors and symbols for dataset\nsampletype_order &lt;- c(\"Background\", \"Plume\", \"Vent\", \"Incubation\")\nsite_symbol&lt;- c(21, 23, 24, 22)\nsite_fullname &lt;- c(\"Von Damm\", \"Piccard\")\nsite_color &lt;- c(\"#264653\", \"#E76F51\")\nsite_alpha &lt;- c(1, 0.4)\nsite_order &lt;- c(\"VonDamm\", \"Piccard\")\nnames(site_color) &lt;- site_fullname\nbin_type_order &lt;- c(\"in situ\", \"Incubation\")\nnames(site_alpha) &lt;- bin_type_order\n###\n\nplot_sampletype &lt;- function(df){\n  df$SITE_ORDER &lt;- factor(df$SITE, levels = site_order, labels = site_fullname)\n  df$SAMPLETYPE_ORDER &lt;- factor(df$SAMPLETYPE, levels = sampletype_order)\n  df$TYPE_BIN_ORDER &lt;- factor(df$TYPE_BIN, levels = bin_type_order)\n  names(site_symbol) &lt;- site_order\n  plot_grid(df %&gt;%\n  ggplot(aes(x = VENT, y = Shannon)) +\n    geom_jitter(color = \"black\", shape = 21, size = 3, aes(fill = SITE_ORDER, alpha = TYPE_BIN_ORDER)) +\n    scale_alpha_manual(values = site_alpha) +\n    scale_fill_manual(values = site_color) +\n  theme_linedraw() +\n  theme(axis.text.y = element_text(size = 14),\n        axis.text.x = element_blank(),\n        strip.background = element_blank(),\n        strip.text = element_text(color = \"black\"),\n        legend.position = \"right\",\n        axis.ticks.x = element_blank()) +\n  labs(x = \"\", y = \"Shannon\") +\n    coord_flip(),\n  df %&gt;%\n    ggplot(aes(x = VENT, y = Simpson)) +\n    geom_jitter(color = \"black\", shape = 21, size = 3, aes(fill = SITE_ORDER, alpha = TYPE_BIN_ORDER)) +\n    scale_alpha_manual(values = site_alpha) +\n    scale_fill_manual(values = site_color) +\n  theme_linedraw() +\n  theme(axis.text.x = element_text(vjust = 1, hjust = 0.5, size = 14),\n        axis.text = element_text(size = 14),\n        strip.background = element_blank(),\n        strip.text = element_blank(),\n        legend.title = element_blank(),\n        legend.position = \"right\") +\n  labs(x = \"\", y = \"Simpson\") +\n    coord_flip(),\n  ncol = 1, axis = c(\"lrt\"), align = c(\"vh\"))\n}\n\n\ngen_divnet gen_divnet_SAMPLETYPE gen_divnet_SAMPLETYPE_BIN gen_divnet_SITE spp_divnet spp_divnet_SAMPLETYPE spp_divnet_SAMPLETYPE_BIN spp_divnet_SITE\n\n\nCode\n# spp_alpha_18s &lt;- fxn_extract_divet(spp_divnet)\n# spp_alpha_label &lt;- fxn_extract_divet(spp_divnet_SAMPLETYPE)\n# spp_alpha_TYPE &lt;- fxn_extract_divet(spp_divnet_SAMPLETYPE_BIN)\n# spp_alpha_TYPE_SITE &lt;- fxn_extract_divet(spp_divnet_SITE)\n# # \n# head(spp_alpha_18s)\n# \n# plot_sampletype(spp_alpha_18s)"
  },
  {
    "objectID": "grazing.html#plot-eukaryote-cells-per-ml-for-all-time-points",
    "href": "grazing.html#plot-eukaryote-cells-per-ml-for-all-time-points",
    "title": "Protistan grazing analysis",
    "section": "2.1 Plot eukaryote cells per ml for all time points",
    "text": "2.1 Plot eukaryote cells per ml for all time points\nThe average euk cells per ml value was taken when TRUE replicates were conducted and we observed a cell count.\nPlot all euk cell counts for supplement\n\n\nCode\n# Order by temperature\nvent_ids &lt;- c(\"BSW\",\"Plume\", \"LotsOShrimp\", \"Shrimpocalypse\", \n              \"ShrimpHole\", \"X18\", \"Rav2\", \"MustardStand\", \"OMT\")\nvent_fullname &lt;- c(\"Background\",\"Plume\", \"Lots 'O Shrimp\", \"Shrimpocalypse\",  \n                   \"Shrimp Hole\", \"X-18\", \"Ravelin #2\", \"Mustard Stand\", \"Old Man Tree\")\n\nsite_ids &lt;- c(\"VD\", \"Piccard\")\nsite_fullname &lt;- c(\"Von Damm\", \"Piccard\")\nhead(counts_cellsml_avg)\n\n\n     Site        Name TimePoint EXP_TYPE IGT_REP  VARIABLE      MEAN VAR SD SEM\n1 Piccard LotsOShrimp        T0      Bag     Bag   eukCONC 230.90630  NA NA  NA\n2 Piccard LotsOShrimp        T0      Bag     Bag microCONC   0.00000  NA NA  NA\n3 Piccard LotsOShrimp        T0      Bag     Bag  nanoCONC 230.90630  NA NA  NA\n4 Piccard LotsOShrimp       T15      Bag     Bag   eukCONC 230.90630  NA NA  NA\n5 Piccard LotsOShrimp       T15      Bag     Bag microCONC  41.98296  NA NA  NA\n6 Piccard LotsOShrimp       T15      Bag     Bag  nanoCONC 188.92333  NA NA  NA\n        MIN       MAX\n1 230.90630 230.90630\n2   0.00000   0.00000\n3 230.90630 230.90630\n4 230.90630 230.90630\n5  41.98296  41.98296\n6 188.92333 188.92333\n\n\n\nFigure S2\n\n\nCode\n# svg(filename = \"../../../Manuscripts_presentations_reviews/MCR-grazing-2023/svg-files-figures/figS2.svg\")\ncounts_cellsml_avg %&gt;% \n  mutate(EXP_CATEGORY = case_when(\n    EXP_TYPE == \"Bag\" ~ \"Shipboard\",\n    TRUE ~ \"IGT\"\n  )) %&gt;% \n  mutate(VARIABLE_FIX = case_when(\n    VARIABLE == \"microCONC\" ~ \"microeukaryote\",\n    VARIABLE == \"nanoCONC\" ~ \"nanoeukaryote\",\n    VARIABLE == \"eukCONC\" ~ \"Total eukaryote\"\n  )) %&gt;% \n  # Factor name order and label\n  mutate(SiteOrder = factor(Site, levels = site_ids, labels = site_fullname)) %&gt;% \n  mutate(NameOrder = factor(Name, levels = vent_ids, labels = vent_fullname)) %&gt;% \n  # Plot with outline vs. solid circle\n  ggplot(aes(x = NameOrder, y = MEAN, group = NameOrder,\n                                          fill = VARIABLE_FIX,\n                                          color = VARIABLE_FIX,\n                                          shape = EXP_CATEGORY)) +\n  geom_jitter(size = 2, stroke = 2, aes(fill = VARIABLE_FIX, color = VARIABLE_FIX,\n                                        shape = EXP_CATEGORY)) +\n  geom_boxplot(alpha = 0.1) +\n  scale_shape_manual(values = c(1, 21)) +\n    scale_fill_manual(values = c(\"#e7298a\", \"#fcbba1\", \"#c6dbef\")) +\n    scale_color_manual(values = c(\"#e7298a\", \"#fcbba1\", \"#c6dbef\")) +\n    coord_flip() +\n    scale_y_log10() +\n    facet_grid(SiteOrder ~ EXP_CATEGORY, space = \"free\", scale = \"free\") +\n    theme_bw() + \n  theme(axis.text.x = element_text(angle = 0, h = 1, vjust = 1),\n        strip.background = element_blank(),\n        legend.position = \"right\",\n        legend.title = element_blank()) +\n    labs(x = \"\", y = bquote(\"Eukaryote cells \"~mL^-1),\n         title = \"Distribution of all eukaryotic cell counts\")\n\n\nWarning: Transformation introduced infinite values in continuous y-axis\nTransformation introduced infinite values in continuous y-axis\n\n\nWarning: Removed 21 rows containing non-finite values (`stat_boxplot()`).\n\n\nWarning: The following aesthetics were dropped during statistical transformation: fill,\ncolour\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: fill,\ncolour\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: fill,\ncolour\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\nThe following aesthetics were dropped during statistical transformation: fill,\ncolour\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\nCode\n# dev.off()\n\n\nEukaryote cell concentration (cells/ml) are lower in the background and plume samples compared to vent sites. ~300 cells/ml in background and plume compared to ~1000 cells per ml at the vent sites. These values are also consistent between each vent site (Von Damm and Piccard) and between Bag and IGT samples.\n\nBoxplot represents the median (line in box) and the 1st and 3rd quartiles in the lower and upper hinges, respectively (25th and 75th percentiles). Black data points are outliers from the boxplot. Upper and lower whiskers represent the 1.5 * interquartile ranges. Pink data points are the values contributing to the boxplot (individial counts across replicates and time points.)\n\n\neukCONC is the sum of micro and nano. Because there was a discrepency between the micro and nano cell counts, we plan to combine for most of the analysis. Here we show that the cell concentration across replicate samples was similar throughout experiments. And that the bag versus IGT experiment results were within range of one another."
  },
  {
    "objectID": "grazing.html#plot-eukaryote-cell-concentration-over-time.",
    "href": "grazing.html#plot-eukaryote-cell-concentration-over-time.",
    "title": "Protistan grazing analysis",
    "section": "2.2 Plot eukaryote cell concentration over time.",
    "text": "2.2 Plot eukaryote cell concentration over time.\nInclude plot over time.\n\nFigure S5\n\n\nCode\n# Plot trend line of euk cell count for all experiments\n# svg(filename = \"../../../Manuscripts_presentations_reviews/MCR-grazing-2023/svg-files-figures/figS4.svg\")\ncounts_cellsml_avg %&gt;%\n  mutate(EXP_CATEGORY = case_when(\n    EXP_TYPE == \"Bag\" ~ \"Shipboard\",\n    TRUE ~ \"IGT\"\n  )) %&gt;% \n  mutate(EXP_CATEGORY_WREP = case_when(\n    EXP_TYPE == \"Bag\" ~ \"Shipboard\",\n    TRUE ~ IGT_REP\n  )) %&gt;% \n  # Factor name order and label\n  mutate(SiteOrder = factor(Site, levels = site_ids, labels = site_fullname)) %&gt;% \n  mutate(NameOrder = factor(Name, levels = vent_ids, labels = vent_fullname)) %&gt;% \n  filter(VARIABLE == \"eukCONC\") %&gt;%\n  unite(\"Experiment\", NameOrder, EXP_CATEGORY, sep = \"-\", remove = FALSE) %&gt;%\n  unite(\"Experiment_rep\", NameOrder, EXP_CATEGORY_WREP, sep = \"-\", remove = FALSE) %&gt;%\n  ggplot(aes(x = TimePoint, y = MEAN, shape = EXP_CATEGORY, fill = NameOrder, \n             color = NameOrder)) +\n    geom_path(aes(group = Experiment_rep), color = \"black\") +\n    geom_errorbar(aes(ymax = (MEAN + SEM), ymin = (MEAN - SEM)), width = 0.2) +\n    geom_point(stat = \"identity\", size = 2, stroke = 2, aes(shape = EXP_CATEGORY, \n                                                fill = NameOrder, \n                                                color = NameOrder)) +\n    scale_shape_manual(values = c(1, 21)) +\n    scale_fill_brewer(palette = \"Paired\") +\n    scale_color_brewer(palette = \"Paired\") +\n    scale_y_log10() +\n    facet_wrap(SiteOrder ~ EXP_CATEGORY, scales = \"free\") +\n    theme_classic() + theme(strip.background = element_blank(), \n                            legend.title = element_blank(),\n                            title = element_text(size = 7, face = \"bold\"),\n                            axis.title = element_text(size = 9)) +\n    labs(title = \"Total euk cell counts for each experiment\", y = bquote(\"Average eukaryote cells \"~mL^-1), x = \"Time point\")\n\n\n\n\n\nCode\n# dev.off()\n\n\n\nnote there is an overall drop in euk cells/ml in the final time point. Especially with the IGT samples. Take this into consideration"
  },
  {
    "objectID": "grazing.html#plot-t0-only-counts-for-cellsml-plot",
    "href": "grazing.html#plot-t0-only-counts-for-cellsml-plot",
    "title": "Protistan grazing analysis",
    "section": "2.3 Plot T0 only counts for cells/ml plot",
    "text": "2.3 Plot T0 only counts for cells/ml plot\nFor Figure 1a\n\n\nCode\n# Plot trend line of euk cell count for all experiments\neuk_plot &lt;- counts_cellsml_avg %&gt;%\n  mutate(EXP_CATEGORY = case_when(\n    EXP_TYPE == \"Bag\" ~ \"Shipboard\",\n    TRUE ~ \"IGT\"\n  )) %&gt;% \n  mutate(EXP_CATEGORY_WREP = case_when(\n    EXP_TYPE == \"Bag\" ~ \"Shipboard\",\n    TRUE ~ IGT_REP\n  )) %&gt;% \n  # Factor name order and label\n  mutate(SiteOrder = factor(Site, levels = site_ids, labels = site_fullname)) %&gt;% \n  mutate(NameOrder = factor(Name, levels = vent_ids, labels = vent_fullname)) %&gt;% \n  filter(VARIABLE == \"eukCONC\") %&gt;%\n  filter(TimePoint == \"T0\") %&gt;% \n  filter(!(grepl(\"b\", IGT_REP))) %&gt;% \n  unite(\"SITE_TYPE\", Site, EXP_CATEGORY, sep = \"-\", remove = FALSE) %&gt;%\n  unite(\"Experiment\", Name, EXP_CATEGORY, sep = \"-\", remove = FALSE) %&gt;%\n  unite(\"Experiment_rep\", Name, EXP_CATEGORY_WREP, sep = \"-\", remove = FALSE) %&gt;%\n  ggplot(aes(x = NameOrder, y = MEAN, shape = SITE_TYPE, fill = SITE_TYPE, \n             color = SITE_TYPE)) +\n    geom_errorbar(aes(ymax = (MEAN + SEM), ymin = (MEAN - SEM)), width = 0.2, color = \"black\") +\n    geom_point(stat = \"identity\", size = 2, stroke = 2, aes(shape = SITE_TYPE, \n                                                fill = SITE_TYPE, \n                                                color = SITE_TYPE)) +\n    scale_shape_manual(values = c(21, 21, 21, 21)) +\n    scale_fill_manual(values = c(\"white\", \"#264653\", \"white\", \"#E76F51\")) +\n    scale_color_manual(values = c(\"#264653\", \"#264653\", \"#E76F51\", \"#E76F51\")) +\n    scale_y_log10() +\n    # cfacet_grid(. ~ SiteOrder, scales = \"free\") +\n    facet_grid(.~SiteOrder, space = \"free\", scales = \"free\") +\n    theme_minimal() +\n    theme(panel.grid.major = element_line(), panel.grid.minor = element_blank(),\n           panel.background = element_blank(), \n           axis.line = element_line(colour = \"black\"), \n           axis.text.x = element_text(color=\"black\", size = 13, \n                                      angle = 45, hjust = 1, vjust = 1), \n           axis.text.y = element_text(color=\"black\", size = 13),\n           axis.title =element_text(color=\"black\", size = 13),\n           axis.ticks = element_line(),\n           strip.text =element_blank(), legend.title = element_blank()) +\n  labs(x = \"\", y = bquote(\"Eukaryote cells \"~mL^-1),\n       title = \"\")\n\neuk_plot\n\n\n\n\n\n\n\nCode\n# Last saved - April 13, 2023\nsave(counts_cellsml_all, counts_cellsml_avg, counts_occur, file = \"output-data/MCR-cellcount-dfs\")"
  },
  {
    "objectID": "grazing.html#compile-table-with-euk-and-prok-counts",
    "href": "grazing.html#compile-table-with-euk-and-prok-counts",
    "title": "Protistan grazing analysis",
    "section": "3.2 Compile table with euk and prok counts",
    "text": "3.2 Compile table with euk and prok counts\nPart of Table 1.\n\n\nCode\neuk_prok_counts &lt;- counts_cellsml_avg %&gt;%\n  mutate(EXP_CATEGORY = case_when(\n    EXP_TYPE == \"Bag\" ~ \"Shipboard\",\n    TRUE ~ \"IGT\"\n  )) %&gt;% \n  mutate(EXP_CATEGORY_WREP = case_when(\n    EXP_TYPE == \"Bag\" ~ \"Shipboard\",\n    TRUE ~ IGT_REP\n  )) %&gt;% \n  # Factor name order and label\n  mutate(SiteOrder = factor(Site, levels = site_ids, labels = site_fullname)) %&gt;% \n  mutate(NameOrder = factor(Name, levels = vent_ids, labels = vent_fullname)) %&gt;% \n  filter(VARIABLE == \"eukCONC\") %&gt;%\n  filter(TimePoint == \"T0\") %&gt;% \n  filter(!(grepl(\"b\", IGT_REP))) %&gt;% \n  unite(\"SITE_TYPE\", Site, EXP_CATEGORY, sep = \"-\", remove = FALSE) %&gt;%\n  unite(\"Experiment\", Name, EXP_CATEGORY, sep = \"-\", remove = FALSE) %&gt;%\n  unite(\"Experiment_rep\", Name, EXP_CATEGORY_WREP, sep = \"-\", remove = FALSE) %&gt;% \n  mutate(MEAN_SIG = signif(MEAN, digits = 5),\n         MIN_sig = signif(MIN, digits = 4),\n         MAX_sig = signif(MAX, digits = 4)) %&gt;% \n  unite(\"EUK_MinMax\", MIN_sig, MAX_sig, sep = \" / \") %&gt;% \n  select(Site, Name, SITE_TYPE, Experiment, Experiment_rep, VARIABLE, EUK_ml = MEAN_SIG, EUK_MinMax, EUK_sem = SEM) %&gt;% \n  left_join(prok_tojoin)\n\n\nJoining with `by = join_by(Site, Name)`\n\n\nCode\neuk_prok_counts # add to this later for Table 1\n\n\n      Site           Name         SITE_TYPE               Experiment\n1  Piccard    LotsOShrimp Piccard-Shipboard    LotsOShrimp-Shipboard\n2  Piccard          Plume Piccard-Shipboard          Plume-Shipboard\n3  Piccard Shrimpocalypse Piccard-Shipboard Shrimpocalypse-Shipboard\n4  Piccard Shrimpocalypse       Piccard-IGT       Shrimpocalypse-IGT\n5  Piccard Shrimpocalypse       Piccard-IGT       Shrimpocalypse-IGT\n6       VD            BSW      VD-Shipboard            BSW-Shipboard\n7       VD   MustardStand      VD-Shipboard   MustardStand-Shipboard\n8       VD            OMT            VD-IGT                  OMT-IGT\n9       VD          Plume      VD-Shipboard          Plume-Shipboard\n10      VD           Rav2      VD-Shipboard           Rav2-Shipboard\n11      VD           Rav2            VD-IGT                 Rav2-IGT\n12      VD           Rav2            VD-IGT                 Rav2-IGT\n13      VD     ShrimpHole      VD-Shipboard     ShrimpHole-Shipboard\n14      VD            X18      VD-Shipboard            X18-Shipboard\n             Experiment_rep VARIABLE  EUK_ml    EUK_MinMax    EUK_sem PROK_ml\n1     LotsOShrimp-Shipboard  eukCONC 230.910 230.9 / 230.9         NA   53878\n2           Plume-Shipboard  eukCONC  79.301   55.98 / 112  16.819081   51429\n3  Shrimpocalypse-Shipboard  eukCONC 454.820 454.8 / 454.8         NA  238590\n4       Shrimpocalypse-IGT3  eukCONC 384.840 384.8 / 384.8         NA  238590\n5       Shrimpocalypse-IGT7  eukCONC 524.790 524.8 / 524.8         NA  238590\n6             BSW-Shipboard  eukCONC  91.838 69.97 / 113.7  21.866127   37890\n7    MustardStand-Shipboard  eukCONC 259.770 230.9 / 288.6  28.863287   56677\n8                  OMT-IGT4  eukCONC 349.860 349.9 / 349.9         NA      NA\n9           Plume-Shipboard  eukCONC 157.770 55.98 / 284.4  67.098589   16478\n10           Rav2-Shipboard  eukCONC 409.330 335.9 / 482.8  73.470185      NA\n11                Rav2-IGT4  eukCONC 944.620 944.6 / 944.6         NA      NA\n12                Rav2-IGT5  eukCONC 629.740 629.7 / 629.7         NA      NA\n13     ShrimpHole-Shipboard  eukCONC 385.720 377.8 / 393.6   7.871806   41983\n14            X18-Shipboard  eukCONC 314.870 209.9 / 419.8 104.957407  111430\n       PROK_MinMax  PROK_sem\n1    26240 / 90260 13727.191\n2    46810 / 56050  4618.126\n3  108700 / 322000 65792.588\n4  108700 / 322000 65792.588\n5  108700 / 322000 65792.588\n6    18470 / 56470  8608.427\n7    42400 / 70950 14274.207\n8             &lt;NA&gt;        NA\n9    13850 / 19100  2623.935\n10            &lt;NA&gt;        NA\n11            &lt;NA&gt;        NA\n12            &lt;NA&gt;        NA\n13   38830 / 45130  3148.722\n14 108500 / 114400  2973.793"
  },
  {
    "objectID": "grazing.html#figure-s4",
    "href": "grazing.html#figure-s4",
    "title": "Protistan grazing analysis",
    "section": "8.4 Figure S4",
    "text": "8.4 Figure S4\n\n\nCode\nby_biovol_plot + by_sizefrac_plot + patchwork::plot_layout(ncol = 1) +\n  plot_annotation(tag_levels = \"a\")"
  },
  {
    "objectID": "grazing.html#results-summary",
    "href": "grazing.html#results-summary",
    "title": "Protistan grazing analysis",
    "section": "3.3 RESULTS SUMMARY",
    "text": "3.3 RESULTS SUMMARY\nNon-vent vs. vent associated prok counts\n\n\nCode\ntmp <- euk_prok_counts %>% \n  mutate(TYPE = case_when(\n    grepl(\"BSW\", Name) ~ \"non-vent\",\n    grepl(\"Plume\", Name) ~ \"non-vent\",\n    TRUE ~ \"vent\"\n  ),\n  EXP_TYPE = case_when(\n    grepl(\"IGT\", SITE_TYPE) ~ \"IGT\",\n    TRUE ~ \"Shipboard\"\n    ))\n\ntmp %>% \n  select(TYPE, PROK_ml, EUK_ml) %>% \n  distinct() %>%\n  group_by(TYPE) %>% \n  filter(!is.na(PROK_ml)) %>%\n  filter(!is.na(EUK_ml)) %>%\n  summarise(mean_prok = mean(PROK_ml),\n            mean_euk = mean(EUK_ml))\n\n\n# A tibble: 2 × 3\n  TYPE     mean_prok mean_euk\n  <chr>        <dbl>    <dbl>\n1 non-vent    35266.     110.\n2 vent       139963.     365.\n\n\nCode\ntmp %>% \n  select(TYPE, PROK_ml, EUK_ml, Site) %>% \n  distinct() %>%\n  group_by(TYPE, Site) %>% \n  filter(!is.na(PROK_ml)) %>%\n  filter(!is.na(EUK_ml)) %>%\n  summarise(mean_prok = mean(PROK_ml),\n            mean_euk = mean(EUK_ml))\n\n\n`summarise()` has grouped output by 'TYPE'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 4 × 4\n# Groups:   TYPE [2]\n  TYPE     Site    mean_prok mean_euk\n  <chr>    <chr>       <dbl>    <dbl>\n1 non-vent Piccard     51429     79.3\n2 non-vent VD          27184    125. \n3 vent     Piccard    192412    399. \n4 vent     VD          70030    320. \n\n\nCode\ntmp %>% \n  select(TYPE, PROK_ml, EUK_ml, EXP_TYPE) %>% \n  distinct() %>%\n  group_by(TYPE, EXP_TYPE) %>% \n  filter(!is.na(PROK_ml)) %>%\n  filter(!is.na(EUK_ml)) %>%\n  summarise(mean_prok = mean(PROK_ml),\n            mean_euk = mean(EUK_ml))\n\n\n`summarise()` has grouped output by 'TYPE'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 3 × 4\n# Groups:   TYPE [2]\n  TYPE     EXP_TYPE  mean_prok mean_euk\n  <chr>    <chr>         <dbl>    <dbl>\n1 non-vent Shipboard    35266.     110.\n2 vent     IGT         238590      455.\n3 vent     Shipboard   100512.     329."
  },
  {
    "objectID": "grazing.html#table-s4-biomass-summaries",
    "href": "grazing.html#table-s4-biomass-summaries",
    "title": "Protistan grazing analysis",
    "section": "8.2 Table S4 biomass summaries",
    "text": "8.2 Table S4 biomass summaries\n\n\nCode\nc_factor_biov <- \n  biov_calc %>% select(-EXP, -h, -d) %>% \n  pivot_longer(cols = c(BIOVOLUME, starts_with(\"pgC_\")), names_to = \"VARIABLES\", values_to = \"VALUES\") %>% \n  group_by(VENT_BSW, VARIABLES) %>% \n    summarise(mean = mean(VALUES),\n              max = max(VALUES),\n              min = min(VALUES)) %>% \n  pivot_wider(names_from = VENT_BSW, values_from = c(mean, max,min), names_sort = FALSE)\n\n\n`summarise()` has grouped output by 'VENT_BSW'. You can override using the\n`.groups` argument.\n\n\nCode\n# View(c_factor_biov)\n\n\n\nAssign a C conversion factor for background and within vents based on biovolume\n\n\n\nCode\n# pg C per cell (pgC_cell)\n\npgC_cell_BSW <- subset(c_factor_biov, VARIABLES == \"pgC_cell_MD_nodiatom\")$mean_BSW\n\npgC_cell_vent <- subset(c_factor_biov, VARIABLES == \"pgC_cell_MD_nodiatom\")$mean_vent\n\npgC_cell_BSW_min <- subset(c_factor_biov, VARIABLES == \"pgC_cell_MD_nodiatom\")$min_BSW\n\npgC_cell_vent_min <- subset(c_factor_biov, VARIABLES == \"pgC_cell_MD_nodiatom\")$min_vent\n\npgC_cell_BSW_max <- subset(c_factor_biov, VARIABLES == \"pgC_cell_MD_nodiatom\")$max_BSW\n\npgC_cell_vent_max <- subset(c_factor_biov, VARIABLES == \"pgC_cell_MD_nodiatom\")$max_vent\n\npgC_cell_BSW\n\n\n[1] 109.1574\n\n\nCode\npgC_cell_vent\n\n\n[1] 414.8068\n\n\n\nCombine with count table to estimate total standing stock in carbon\n\nIsolate at T0 all the euk cells per ml counts. Then add in the mean, min/max for the pg C per cell, based on the vent vs non-vent.\n\n\nCode\n# counts_cellsml_avg\npgC_ml_biov_bysample <- counts_cellsml_avg %>% \n  filter(TimePoint == \"T0\") %>%\n  filter(VARIABLE == \"eukCONC\") %>% \n  mutate(SAMPLE_TYPE_BIN = case_when(\n    Name == \"Background\" ~ \"Non-vent\",\n    Name == \"Plume\" ~ \"Non-vent\",\n    TRUE ~ \"Vent\"\n  )) %>% \n  # pg C per ml = (cells per ml)*(pg C per)\n  ## Apply the non-vent and vent pg C per cell value to total cells per ml\n  mutate(pgC_ml_mean = case_when(\n    SAMPLE_TYPE_BIN == \"Non-vent\" ~ MEAN * pgC_cell_BSW,\n    SAMPLE_TYPE_BIN == \"Vent\" ~ MEAN * pgC_cell_vent,\n  )) %>% \n  mutate(pgC_ml_min = case_when(\n    SAMPLE_TYPE_BIN == \"Non-vent\" ~ MEAN * pgC_cell_BSW_min,\n    SAMPLE_TYPE_BIN == \"Vent\" ~ MEAN * pgC_cell_vent_min\n  )) %>% \n  mutate(pgC_ml_max = case_when(\n    SAMPLE_TYPE_BIN == \"Non-vent\" ~ MEAN * pgC_cell_BSW_max,\n    SAMPLE_TYPE_BIN == \"Vent\" ~ MEAN * pgC_cell_vent_max\n  )) %>% \n  mutate(IGT_REP = case_when(\n    IGT_REP == \"Bag\" ~ \"Shipboard\",\n    TRUE ~ IGT_REP\n  )) %>% \n  unite(\"Experiment_rep\", Name, IGT_REP, sep = \"-\", remove = FALSE)\n\npgC_ml_biov_bysample\n\n\n      Site           Experiment_rep           Name TimePoint EXP_TYPE   IGT_REP\n1  Piccard    LotsOShrimp-Shipboard    LotsOShrimp        T0      Bag Shipboard\n2  Piccard          Plume-Shipboard          Plume        T0      Bag Shipboard\n3  Piccard Shrimpocalypse-Shipboard Shrimpocalypse        T0      Bag Shipboard\n4  Piccard      Shrimpocalypse-IGT3 Shrimpocalypse        T0      IGT      IGT3\n5  Piccard      Shrimpocalypse-IGT7 Shrimpocalypse        T0      IGT      IGT7\n6       VD            BSW-Shipboard            BSW        T0      Bag Shipboard\n7       VD   MustardStand-Shipboard   MustardStand        T0      Bag Shipboard\n8       VD                 OMT-IGT4            OMT        T0      IGT      IGT4\n9       VD                OMT-IGT4b            OMT        T0      IGT     IGT4b\n10      VD          Plume-Shipboard          Plume        T0      Bag Shipboard\n11      VD           Rav2-Shipboard           Rav2        T0      Bag Shipboard\n12      VD                Rav2-IGT4           Rav2        T0      IGT      IGT4\n13      VD               Rav2-IGT4b           Rav2        T0      IGT     IGT4b\n14      VD                Rav2-IGT5           Rav2        T0      IGT      IGT5\n15      VD               Rav2-IGT5b           Rav2        T0      IGT     IGT5b\n16      VD     ShrimpHole-Shipboard     ShrimpHole        T0      Bag Shipboard\n17      VD            X18-Shipboard            X18        T0      Bag Shipboard\n   VARIABLE      MEAN        VAR        SD        SEM       MIN      MAX\n1   eukCONC 230.90630         NA        NA         NA 230.90630 230.9063\n2   eukCONC  79.30115   848.6444  29.13150  16.819081  55.97728 111.9546\n3   eukCONC 454.81543         NA        NA         NA 454.81543 454.8154\n4   eukCONC 384.84383         NA        NA         NA 384.84383 384.8438\n5   eukCONC 524.78704         NA        NA         NA 524.78704 524.7870\n6   eukCONC  91.83773   956.2550  30.92337  21.866127  69.97160 113.7039\n7   eukCONC 259.76958  1666.1787  40.81885  28.863287 230.90630 288.6329\n8   eukCONC 349.85802         NA        NA         NA 349.85802 349.8580\n9   eukCONC 594.75864         NA        NA         NA 594.75864 594.7586\n10  eukCONC 157.77468 13506.6620 116.21817  67.098589  55.97728 284.4007\n11  eukCONC 409.33389 10795.7362 103.90253  73.470185 335.86370 482.8041\n12  eukCONC 944.61667         NA        NA         NA 944.61667 944.6167\n13  eukCONC 559.77284         NA        NA         NA 559.77284 559.7728\n14  eukCONC 629.74444         NA        NA         NA 629.74444 629.7444\n15  eukCONC 349.85802         NA        NA         NA 349.85802 349.8580\n16  eukCONC 385.71847   123.9306  11.13241   7.871806 377.84667 393.5903\n17  eukCONC 314.87222 22032.1147 148.43219 104.957407 209.91481 419.8296\n   SAMPLE_TYPE_BIN pgC_ml_mean pgC_ml_min pgC_ml_max\n1             Vent   95781.500  1216.6456  296465.66\n2         Non-vent    8656.305  2241.3730   20432.20\n3             Vent  188660.531  2396.4232  583947.52\n4             Vent  159635.834  2027.7427  494109.44\n5             Vent  217685.228  2765.1037  673785.60\n6             Vent   38094.915   483.8932  117912.48\n7             Vent  107754.188  1368.7263  333523.87\n8             Vent  145123.485  1843.4025  449190.40\n9             Vent  246709.925  3133.7842  763623.68\n10        Non-vent   17222.270  4459.3540   40651.15\n11            Vent  169794.478  2156.7809  525552.77\n12            Vent  391833.410  4977.1867 1212814.08\n13            Vent  232197.576  2949.4440  718704.64\n14            Vent  261222.273  3318.1245  808542.72\n15            Vent  145123.485  1843.4025  449190.40\n16            Vent  159998.642  2032.3512  495232.42\n17            Vent  130611.137  1659.0622  404271.36\n\n\nTable reports the total pg of carbon per ml when we consider the whole eukaryote community (based on cell count).\nReport in pg of C per ml.\n\n\nCode\nvent_ids <- c(\"BSW\",\"Plume\", \"LotsOShrimp\", \"Shrimpocalypse\", \n              \"ShrimpHole\", \"X18\", \"Rav2\", \"MustardStand\", \"OMT\")\nvent_fullname <- c(\"Background\",\"Plume\", \"Lots 'O Shrimp\", \"Shrimpocalypse\",  \n                   \"Shrimp Hole\", \"X-18\", \"Ravelin #2\", \"Mustard Stand\", \"Old Man Tree\")\nsite_ids <- c(\"VD\", \"Piccard\")\nsite_fullname <- c(\"Von Damm\", \"Piccard\")\n\nby_biovol_plot <- pgC_ml_biov_bysample %>% \n  mutate(NameOrder = factor(Name, levels = vent_ids, labels = vent_fullname)) %>%\n  mutate(SiteOrder = factor(Site, levels = site_ids, labels = site_fullname)) %>% \n  ggplot(aes(x = Experiment_rep, y = (pgC_ml_mean))) +\n    geom_point(shape = 21, color = \"black\") + \n    geom_linerange(aes(ymin = (pgC_ml_min), ymax = (pgC_ml_max))) +\n  facet_grid(.~SiteOrder + NameOrder, space = \"free\", scales = \"free\") +\n  scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +\n    theme_minimal() +\n    theme(panel.grid.major = element_line(), panel.grid.minor = element_blank(),\n           panel.background = element_blank(), \n           axis.line = element_line(colour = \"black\"), \n           axis.text.x = element_text(color=\"black\", size = 12, \n                                      angle = 45, hjust = 1, vjust = 1), \n           axis.text.y = element_text(color=\"black\", size = 12),\n           axis.title =element_text(color=\"black\", size = 12),\n           axis.ticks = element_line(),\n           strip.text =element_blank(), legend.title = element_blank())+\n    guides(fill = guide_legend(override.aes = list(shape = c(21))),\n       shape = guide_legend(override.aes = list(fill = \"black\"))) +\n    labs(x = \"\", y = bquote(\"Estimated total biomass: pg C \" ~ml^-1),\n         title = \"Carbon pool of protists - derived from biovolume\")\n\nby_biovol_plot"
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "Summary of results",
    "section": "",
    "text": "Code\nlibrary(tidyverse) \n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors"
  },
  {
    "objectID": "results.html#average-euk-prok-summary",
    "href": "results.html#average-euk-prok-summary",
    "title": "Summary of results",
    "section": "3.1 Average euk & prok summary",
    "text": "3.1 Average euk & prok summary\nIn results section, report the overall average euk cells per ml and prok cells per ml by sample type, location, experiment type, and vent field.\n\n\nCode\ntmp &lt;- euk_prok_counts %&gt;% \n  mutate(TYPE = case_when(\n    grepl(\"BSW\", Name) ~ \"non-vent\",\n    grepl(\"Plume\", Name) ~ \"non-vent\",\n    TRUE ~ \"vent\"\n  ),\n  EXP_TYPE = case_when(\n    grepl(\"IGT\", SITE_TYPE) ~ \"IGT\",\n    TRUE ~ \"Shipboard\"\n    ))\n\ntmp %&gt;% \n  select(TYPE, PROK_ml, EUK_ml) %&gt;% \n  distinct() %&gt;%\n  group_by(TYPE) %&gt;% \n  filter(!is.na(PROK_ml)) %&gt;%\n  filter(!is.na(EUK_ml)) %&gt;%\n  summarise(mean_prok = mean(PROK_ml),\n            mean_euk = mean(EUK_ml))\n\n\n# A tibble: 2 × 3\n  TYPE     mean_prok mean_euk\n  &lt;chr&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n1 non-vent    35266.     110.\n2 vent       139963.     365.\n\n\nCode\ntmp %&gt;% \n  select(TYPE, PROK_ml, EUK_ml, Site) %&gt;% \n  distinct() %&gt;%\n  group_by(TYPE, Site) %&gt;% \n  filter(!is.na(PROK_ml)) %&gt;%\n  filter(!is.na(EUK_ml)) %&gt;%\n  summarise(mean_prok = mean(PROK_ml),\n            mean_euk = mean(EUK_ml))\n\n\n# A tibble: 4 × 4\n# Groups:   TYPE [2]\n  TYPE     Site    mean_prok mean_euk\n  &lt;chr&gt;    &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;\n1 non-vent Piccard     51429     79.3\n2 non-vent VD          27184    125. \n3 vent     Piccard    192412    399. \n4 vent     VD          70030    320. \n\n\nCode\ntmp %&gt;% \n  select(TYPE, PROK_ml, EUK_ml, EXP_TYPE) %&gt;% \n  distinct() %&gt;%\n  group_by(TYPE, EXP_TYPE) %&gt;% \n  filter(!is.na(PROK_ml)) %&gt;%\n  filter(!is.na(EUK_ml)) %&gt;%\n  summarise(mean_prok = mean(PROK_ml),\n            mean_euk = mean(EUK_ml))\n\n\n# A tibble: 3 × 4\n# Groups:   TYPE [2]\n  TYPE     EXP_TYPE  mean_prok mean_euk\n  &lt;chr&gt;    &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;\n1 non-vent Shipboard    35266.     110.\n2 vent     IGT         238590      455.\n3 vent     Shipboard   100512.     329."
  },
  {
    "objectID": "results.html#complete-grazing-rate-results",
    "href": "results.html#complete-grazing-rate-results",
    "title": "Summary of results",
    "section": "3.2 Complete grazing rate results",
    "text": "3.2 Complete grazing rate results\n\n\nCode\ntable_wcalcs\n\n\n             Experiment_rep   FIELD           Name SiteOrder      NameOrder\n1     LotsOShrimp-Shipboard Piccard    LotsOShrimp   Piccard Lots 'O Shrimp\n2           Plume-Shipboard Piccard          Plume   Piccard          Plume\n3  Shrimpocalypse-Shipboard Piccard Shrimpocalypse   Piccard Shrimpocalypse\n4             BSW-Shipboard      VD            BSW  Von Damm     Background\n5    MustardStand-Shipboard      VD   MustardStand  Von Damm  Mustard Stand\n6           Plume-Shipboard      VD          Plume  Von Damm          Plume\n7            Rav2-Shipboard      VD           Rav2  Von Damm     Ravelin #2\n8      ShrimpHole-Shipboard      VD     ShrimpHole  Von Damm    Shrimp Hole\n9             X18-Shipboard      VD            X18  Von Damm           X-18\n10      Shrimpocalypse-IGT3 Piccard Shrimpocalypse   Piccard Shrimpocalypse\n11                 OMT-IGT4      VD            OMT  Von Damm   Old Man Tree\n12                Rav2-IGT4      VD           Rav2  Von Damm     Ravelin #2\n13                Rav2-IGT5      VD           Rav2  Von Damm     Ravelin #2\n14      Shrimpocalypse-IGT7 Piccard Shrimpocalypse      &lt;NA&gt;           &lt;NA&gt;\n   FLUID_ORIGIN CRUISE_SAMPLE         RATE RATE_minute      FLP_ml\n1       J2-1241          LV24 -0.007605829 0.000000000    617.1496\n2        CTD004     Niskin 10  0.005362856 0.005362856  29650.4676\n3       J2-1240          LV13  0.015686872 0.015686872  17003.1000\n4        CTD002  Niskins 8-10  0.002958889 0.002958889   4861.8239\n5       J2-1243          LV17 -0.005445545 0.000000000   6601.4929\n6        CTD001      Niskin 2  0.005274231 0.005274231  34242.3542\n7       J2-1238         LV13a  0.003470217 0.003470217  51890.9422\n8       J2-1244          LV13 -0.001967253 0.000000000 113354.0000\n9       J2-1235   LV23 & Bio5  0.001744429 0.001744429   3148.7222\n10      J2-1240          IGT3  0.016794258 0.016794258   5352.8278\n11      J2-1238          IGT4  0.003764672 0.003764672   5352.8278\n12      J2-1244          IGT4  0.021062665 0.021062665   5352.8278\n13      J2-1244          IGT5 -0.002850877 0.000000000   5352.8278\n14         &lt;NA&gt;          &lt;NA&gt;           NA          NA          NA\n          TimePoints EXP_REPS EXP_VOL CTRL_REPS CTRL_VOL         SITE_TYPE\n1      0, 15, 20, 40        3    1.50         2      0.2 Piccard-Shipboard\n2  0, 10, 15, 20, 40        3    2.00         2      0.5 Piccard-Shipboard\n3  0, 10, 14, 22, 42        3    1.50         2      0.2 Piccard-Shipboard\n4  0, 10, 15, 20, 40        3    2.00         2      0.5      VD-Shipboard\n5      0, 10, 20, 40        2    1.50         2      0.2      VD-Shipboard\n6  0, 10, 15, 25, 57        3    2.00         2      1.0      VD-Shipboard\n7  0, 10, 15, 21, 40        3    1.50         2      0.5      VD-Shipboard\n8  0, 10, 15, 20, 40        2    1.50         2      0.2      VD-Shipboard\n9      0, 15, 20, 40        2    1.50         2      0.5      VD-Shipboard\n10         0, 15, 25        1    0.15        NA       NA       Piccard-IGT\n11          0, 7, 25        1    0.15        NA       NA            VD-IGT\n12         0, 12, 20        1    0.15        NA       NA            VD-IGT\n13         0, 35, 40        1    0.15        NA       NA            VD-IGT\n14              &lt;NA&gt;       NA      NA        NA       NA       Piccard-IGT\n                 Experiment VARIABLE  EUK_ml    EUK_MinMax    EUK_sem  PROK_ml\n1     LotsOShrimp-Shipboard  eukCONC 230.910 230.9 / 230.9         NA  53878.0\n2           Plume-Shipboard  eukCONC  79.301   55.98 / 112  16.819081  51429.0\n3  Shrimpocalypse-Shipboard  eukCONC 454.820 454.8 / 454.8         NA 238590.0\n4             BSW-Shipboard  eukCONC  91.838 69.97 / 113.7  21.866127  37890.0\n5    MustardStand-Shipboard  eukCONC 259.770 230.9 / 288.6  28.863287  56677.0\n6           Plume-Shipboard  eukCONC 157.770 55.98 / 284.4  67.098589  16478.0\n7            Rav2-Shipboard  eukCONC 409.330 335.9 / 482.8  73.470185  71147.4\n8      ShrimpHole-Shipboard  eukCONC 385.720 377.8 / 393.6   7.871806  41983.0\n9             X18-Shipboard  eukCONC 314.870 209.9 / 419.8 104.957407 111430.0\n10       Shrimpocalypse-IGT  eukCONC 384.840 384.8 / 384.8         NA 238590.0\n11                  OMT-IGT  eukCONC 349.860 349.9 / 349.9         NA  71147.4\n12                 Rav2-IGT  eukCONC 944.620 944.6 / 944.6         NA  71147.4\n13                 Rav2-IGT  eukCONC 629.740 629.7 / 629.7         NA  71147.4\n14       Shrimpocalypse-IGT  eukCONC 524.790 524.8 / 524.8         NA 238590.0\n       PROK_MinMax  PROK_sem   RATE_hr  RATE_day       FLP_L CLEARANCE_RATE_ml\n1    26240 / 90260 13727.191 0.0000000  0.000000    617149.6      0.000000e+00\n2    46810 / 56050  4618.126 0.3217713  7.722512  29650467.6      1.085215e-05\n3  108700 / 322000 65792.588 0.9412123 22.589096  17003100.0      5.535534e-05\n4    18470 / 56470  8608.427 0.1775333  4.260800   4861823.9      3.651579e-05\n5    42400 / 70950 14274.207 0.0000000  0.000000   6601492.9      0.000000e+00\n6    13850 / 19100  2623.935 0.3164538  7.594892  34242354.2      9.241591e-06\n7             &lt;NA&gt;        NA 0.2082130  4.997113  51890942.2      4.012512e-06\n8    38830 / 45130  3148.722 0.0000000  0.000000 113354000.0      0.000000e+00\n9  108500 / 114400  2973.793 0.1046657  2.511977   3148722.2      3.324070e-05\n10 108700 / 322000 65792.588 1.0076555 24.183732   5352827.8      1.882473e-04\n11            &lt;NA&gt;        NA 0.2258803  5.421128   5352827.8      4.219832e-05\n12            &lt;NA&gt;        NA 1.2637599 30.330237   5352827.8      2.360920e-04\n13            &lt;NA&gt;        NA 0.0000000  0.000000   5352827.8      0.000000e+00\n14 108700 / 322000 65792.588        NA        NA          NA                NA\n   CLEARANCE_RATE_nL SPEC_GRAZE_RATE_hr GRAZE_RATE_DAY GRAZING_EFFECT_hr\n1       0.000000e+00          0.0000000       0.000000           0.00000\n2       1.085215e-11          0.5581153      13.394766          44.25910\n3       5.535534e-11         13.2072298     316.973515        6006.91224\n4       3.651579e-11          1.3835832      33.205997         127.06552\n5       0.000000e+00          0.0000000       0.000000           0.00000\n6       9.241591e-12          0.1522829       3.654791          24.02568\n7       4.012512e-12          0.2854798       6.851515         116.85545\n8       0.000000e+00          0.0000000       0.000000           0.00000\n9       3.324070e-11          3.7040107      88.896256        1166.28184\n10      1.882473e-10         44.9139287    1077.934290       17284.67633\n11      4.219832e-11          3.0023005      72.055212        1050.38486\n12      2.360920e-10         16.7973322     403.135972       15867.09592\n13      0.000000e+00          0.0000000       0.000000           0.00000\n14                NA                 NA             NA                NA\n   GRAZING_EFFECT_hr_min GRAZING_EFFECT_hr_max GRAZING_EFFECT_day\n1                     NA                    NA             0.0000\n2               34.87211              53.64608          1062.2184\n3                     NA                    NA        144165.8939\n4               96.81191             157.31912          3049.5724\n5                0.00000               0.00000             0.0000\n6               13.80771              34.24365           576.6163\n7               95.88119             137.82970          2804.5307\n8                0.00000               0.00000             0.0000\n9              777.51848            1555.04520         27990.7642\n10                    NA                    NA        414832.2320\n11                    NA                    NA         25209.2366\n12                    NA                    NA        380810.3021\n13                    NA                    NA             0.0000\n14                    NA                    NA                 NA\n   BAC_TURNOVER_PERC BAC_TURNOVER_PERC_min BAC_TURNOVER_PERC_max\n1           0.000000              0.000000              0.000000\n2           2.065407              2.269170              1.895224\n3          60.424114             83.430586             47.363384\n4           8.048489             10.414647              6.558442\n5           0.000000              0.000000              0.000000\n6           3.499310              4.162073              3.018628\n7           3.941860                    NA                    NA\n8           0.000000              0.000000              0.000000\n9          25.119595             25.808356             24.466640\n10        173.868239            240.068544            136.286453\n11         35.432409                    NA                    NA\n12        535.241369                    NA                    NA\n13          0.000000                    NA                    NA\n14                NA                    NA                    NA\n\n\nExplanation of units for table with calculated values.\n\nRATE_min & RATE_hr = Grazing rate as ‘FLPs per grazer per minute’ and per hour\nCLEARANCE_RATE = ml or nL per grazer per hour\nSPEC_GRAZE_RATE (Specific grazing rate) = Prokaryotes per grazer per hour\nGRAZING EFFECT = bacteria per ml per hour\nBacterial turnover rate = % per day"
  },
  {
    "objectID": "results.html#average-grazing-rates",
    "href": "results.html#average-grazing-rates",
    "title": "Summary of results",
    "section": "3.3 Average grazing rates",
    "text": "3.3 Average grazing rates\nReport grazing rates from shipboard and IGT experiments. Differentiate vent and non-vent samples. Averages reported here do not include the undetected grazing rates.\n\n\nCode\ntable_wcalcs %&gt;% \n  # Technical replicates are already removed\n  filter(!is.na(FLUID_ORIGIN)) %&gt;% # Remove IGT 7 that didn't work\n  filter(RATE_minute &gt; 0) %&gt;% # Remove undetected grazing rates\n    mutate(SAMPLE_TYPE_BIN = case_when(\n    NameOrder == \"Background\" ~ \"Non-vent\",\n    NameOrder == \"Plume\" ~ \"Non-vent\",\n    TRUE ~ \"Vent\"\n  )) %&gt;%\n  # group_by(SAMPLE_TYPE_BIN) %&gt;%\n  separate(Experiment_rep, into = c(\"name\", \"exptype_rep\"), remove = FALSE) %&gt;% \n  mutate(exptype = case_when(exptype_rep == \"Shipboard\" ~ \"Shipboard\",\n                             TRUE ~ \"IGT\")) %&gt;% \n  group_by(SAMPLE_TYPE_BIN, exptype) %&gt;%\n  # group_by(SAMPLE_TYPE_BIN) %&gt;% \n    summarise(MEAN_RATE = mean(GRAZING_EFFECT_hr),\n              MIN_RATE = min(GRAZING_EFFECT_hr),\n              MAX_RATE = max(GRAZING_EFFECT_hr))\n\n\n`summarise()` has grouped output by 'SAMPLE_TYPE_BIN'. You can override using\nthe `.groups` argument.\n\n\n# A tibble: 3 × 5\n# Groups:   SAMPLE_TYPE_BIN [2]\n  SAMPLE_TYPE_BIN exptype   MEAN_RATE MIN_RATE MAX_RATE\n  &lt;chr&gt;           &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 Non-vent        Shipboard      65.1     24.0     127.\n2 Vent            IGT         11401.    1050.    17285.\n3 Vent            Shipboard    2430.     117.     6007.\n\n\nCode\ntable_wcalcs %&gt;% \n  # Technical replicates are already removed\n  filter(!is.na(FLUID_ORIGIN)) %&gt;% # Remove IGT 7 that didn't work\n  filter(RATE_minute &gt; 0) %&gt;% # Remove undetected grazing rates\n    mutate(SAMPLE_TYPE_BIN = case_when(\n    NameOrder == \"Background\" ~ \"Non-vent\",\n    NameOrder == \"Plume\" ~ \"Non-vent\",\n    TRUE ~ \"Vent\"\n  )) %&gt;%\n  # group_by(SAMPLE_TYPE_BIN) %&gt;%\n  separate(Experiment_rep, into = c(\"name\", \"exptype_rep\"), remove = FALSE) %&gt;% \n  mutate(exptype = case_when(exptype_rep == \"Shipboard\" ~ \"Shipboard\",\n                             TRUE ~ \"IGT\")) %&gt;% \n  group_by(SAMPLE_TYPE_BIN, FIELD) %&gt;% \n    summarise(MEAN_RATE = mean(GRAZING_EFFECT_hr),\n              MIN_RATE = min(GRAZING_EFFECT_hr),\n              MAX_RATE = max(GRAZING_EFFECT_hr))\n\n\n`summarise()` has grouped output by 'SAMPLE_TYPE_BIN'. You can override using\nthe `.groups` argument.\n\n\n# A tibble: 4 × 5\n# Groups:   SAMPLE_TYPE_BIN [2]\n  SAMPLE_TYPE_BIN FIELD   MEAN_RATE MIN_RATE MAX_RATE\n  &lt;chr&gt;           &lt;chr&gt;       &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 Non-vent        Piccard      44.3     44.3     44.3\n2 Non-vent        VD           75.5     24.0    127. \n3 Vent            Piccard   11646.    6007.   17285. \n4 Vent            VD         4550.     117.   15867. \n\n\nCode\n# igt_vent_rate_avg &lt;- 11400.71904\n# ship_vent_rate_avg &lt;- 2430.01651\n# ship_nonvent_rate_avg &lt;- 65.11676\n\n\nUnits above are in cells consumed per ml per hour.\nCompare IGT and shipboard outputs with other studies below. Units: pg C per ml per hour"
  },
  {
    "objectID": "results.html#mean-biovolume-from-microscopy-images",
    "href": "results.html#mean-biovolume-from-microscopy-images",
    "title": "Summary of results",
    "section": "4.1 Mean biovolume from microscopy images",
    "text": "4.1 Mean biovolume from microscopy images\nUnits are µm^3 for biovolume.\n\n\nCode\n# Biovolume by sample type\n# biov_calc\nbiov_calc %&gt;% \n  group_by(VENT_BSW) %&gt;% \n  summarise(mean_biov = mean(BIOVOLUME))\n\n\n# A tibble: 2 × 2\n  VENT_BSW mean_biov\n  &lt;chr&gt;        &lt;dbl&gt;\n1 BSW           773.\n2 vent         3321.\n\n\nCode\n# Biovolume by IGT and sample type\nbiov_calc %&gt;% \n  # filter(VENT_BSW != \"BSW\") %&gt;% \n  group_by(EXP, VENT_BSW) %&gt;% \n  summarise(mean_biov = mean(BIOVOLUME))\n\n\n`summarise()` has grouped output by 'EXP'. You can override using the `.groups`\nargument.\n\n\n# A tibble: 3 × 3\n# Groups:   EXP [2]\n  EXP   VENT_BSW mean_biov\n  &lt;chr&gt; &lt;chr&gt;        &lt;dbl&gt;\n1 Bag   BSW           773.\n2 Bag   vent         1976.\n3 IGT   vent         4441.\n\n\nCode\nwrite.csv(biov_calc, file = \"output-data/biovolume-calculation.csv\")\n\n\nIn discussion compare deep sea biovolumes to Pernice et al.\n\n\nCode\nbiov_calc %&gt;% \n  filter(VENT_BSW != \"vent\")\n\n\n  EXP VENT_BSW      h      d BIOVOLUME pgC_cell_MD_dino pgC_cell_MD_nodiatom\n1 Bag      BSW 14.595  8.036  493.4948        122.07087             73.02072\n2 Bag      BSW 12.480  8.982  527.1805        128.85411             77.69151\n3 Bag      BSW 16.206 14.924 1889.9266        366.62493            257.65320\n4 Bag      BSW  7.000  7.000  179.5944         53.34323             28.26407"
  },
  {
    "objectID": "results.html#determine-c-conversion-rate",
    "href": "results.html#determine-c-conversion-rate",
    "title": "Summary of results",
    "section": "4.2 Determine C conversion rate",
    "text": "4.2 Determine C conversion rate\nDetermined from biovolume, using pg of C per cell.\n\n\nCode\npgC_cell_BSW &lt;- subset(c_factor_biov, VARIABLES == \"pgC_cell_MD_nodiatom\")$mean_BSW\n\npgC_cell_vent &lt;- subset(c_factor_biov, VARIABLES == \"pgC_cell_MD_nodiatom\")$mean_vent\n\n# pg C per cell (pgC_cell)\npgC_cell_BSW # nonvent\n\n\n[1] 109.1574\n\n\nCode\npgC_cell_vent # vent\n\n\n[1] 414.8068"
  },
  {
    "objectID": "results.html#report-carbon-biomass-as-a-mean",
    "href": "results.html#report-carbon-biomass-as-a-mean",
    "title": "Summary of results",
    "section": "4.3 Report carbon biomass as a mean",
    "text": "4.3 Report carbon biomass as a mean\nTo estimate pg C per ml, multiply pg C per cell by euk cell concentration.\n**(cells/ml)*(pg C/cell) = pg C/ml**\nTake the mean of estimate euk cells biomass across all samples (T0-Tfs). Remove the technical replicates first and convert pg C per ml to per L."
  },
  {
    "objectID": "results.html#part-1-of-table-2",
    "href": "results.html#part-1-of-table-2",
    "title": "Summary of results",
    "section": "4.4 Part 1 of Table 2",
    "text": "4.4 Part 1 of Table 2\n\n\nCode\n## Vent vs. non vent\npartONE &lt;- pgC_ml_biov_bysample %&gt;% \n  ##remove technical replicates:\n  filter(IGT_REP != \"IGT4b\" & IGT_REP != \"IGT5b\") %&gt;% \n  ##\n  group_by(SAMPLE_TYPE_BIN)%&gt;% \n  summarise(MEAN_pg_C_ml = round(mean(pgC_ml_mean), digits = 1),\n            MAX_pg_C_ml = round(max(pgC_ml_mean), digits =1),\n            MIN_pg_C_ml = round(min(pgC_ml_mean), digits = 1)) %&gt;% \n  add_column(ORIGIN = \"bybiovolume\") %&gt;% \n  select(CATEGORY = SAMPLE_TYPE_BIN, everything()) %&gt;% \n  ## Von Damm vs Piccard\n  rbind(\n    pgC_ml_biov_bysample %&gt;% \n  filter(IGT_REP != \"IGT4b\" & IGT_REP != \"IGT5b\") %&gt;% \n  filter(SAMPLE_TYPE_BIN == \"Vent\") %&gt;%\n  group_by(Site)%&gt;% \n  summarise(MEAN_pg_C_ml = round(mean(pgC_ml_mean), digits = 1),\n            MAX_pg_C_ml = round(max(pgC_ml_mean), digits =1),\n            MIN_pg_C_ml = round(min(pgC_ml_mean), digits = 1)) %&gt;% \n  add_column(ORIGIN = \"bybiovolume\") %&gt;% \n    select(CATEGORY = Site, everything())\n  ) %&gt;% \n  rbind(\n    ## Vent only, IGT vs shipboard\n    pgC_ml_biov_bysample %&gt;% \n  filter(SAMPLE_TYPE_BIN == \"Vent\") %&gt;%\n  group_by(VARIABLE, EXP_TYPE, SAMPLE_TYPE_BIN) %&gt;% \n  summarise(MEAN_pg_C_ml = round(mean(pgC_ml_mean), digits = 1),\n            MAX_pg_C_ml = round(max(pgC_ml_mean), digits =1),\n            MIN_pg_C_ml = round(min(pgC_ml_mean), digits = 1)) %&gt;% \n    unite(CATEGORY, EXP_TYPE, VARIABLE, SAMPLE_TYPE_BIN, sep = \" \") %&gt;% \n  add_column(ORIGIN = \"bybiovolume\")) %&gt;% \n  unite(\"MinMax_pg_C_ml\", MIN_pg_C_ml, MAX_pg_C_ml, sep = \" / \", remove = FALSE)\n\n\n`summarise()` has grouped output by 'VARIABLE', 'EXP_TYPE'. You can override\nusing the `.groups` argument."
  },
  {
    "objectID": "results.html#part-2-of-table-2",
    "href": "results.html#part-2-of-table-2",
    "title": "Summary of results",
    "section": "4.5 Part 2 of Table 2",
    "text": "4.5 Part 2 of Table 2\n\n\nCode\n## Vent vs. non vent\npartTWO &lt;- pgC_ml_sizefrac_bysample %&gt;% \n  ##remove technical replicates:\n  filter(IGT_REP != \"IGT4b\" & IGT_REP != \"IGT5b\") %&gt;% \n  filter(VARIABLE == \"totaleuk\") %&gt;% \n  ##\n  group_by(SAMPLE_TYPE_BIN)%&gt;% \n  summarise(MEAN_pg_C_ml = round(mean(pg_C_ml), digits = 1),\n            MAX_pg_C_ml = round(max(pg_C_ml), digits =1),\n            MIN_pg_C_ml = round(min(pg_C_ml), digits = 1)) %&gt;% \n  add_column(ORIGIN = \"sizefrac\") %&gt;% \n  select(CATEGORY = SAMPLE_TYPE_BIN, everything()) %&gt;% \n  ## Von Damm vs Piccard\n  rbind(\n    pgC_ml_sizefrac_bysample %&gt;% \n  filter(IGT_REP != \"IGT4b\" & IGT_REP != \"IGT5b\") %&gt;% \n  filter(SAMPLE_TYPE_BIN == \"Vent\") %&gt;%\n    filter(VARIABLE == \"totaleuk\") %&gt;% \n  group_by(Site)%&gt;% \n  summarise(MEAN_pg_C_ml = round(mean(pg_C_ml), digits = 1),\n            MAX_pg_C_ml = round(max(pg_C_ml), digits =1),\n            MIN_pg_C_ml = round(min(pg_C_ml), digits = 1)) %&gt;% \n  add_column(ORIGIN = \"sizefrac\") %&gt;% \n    select(CATEGORY = Site, everything())\n  ) %&gt;% \n  rbind(\n    ## Vent only, IGT vs shipboard\n    pgC_ml_sizefrac_bysample %&gt;% \n  filter(SAMPLE_TYPE_BIN == \"Vent\") %&gt;%\n    filter(VARIABLE == \"totaleuk\") %&gt;% \n  group_by(VARIABLE, EXP_TYPE, SAMPLE_TYPE_BIN) %&gt;% \n  summarise(MEAN_pg_C_ml = round(mean(pg_C_ml), digits = 1),\n            MAX_pg_C_ml = round(max(pg_C_ml), digits =1),\n            MIN_pg_C_ml = round(min(pg_C_ml), digits = 1)) %&gt;% \n    unite(CATEGORY, EXP_TYPE, VARIABLE, SAMPLE_TYPE_BIN, sep = \" \") %&gt;% \n  add_column(ORIGIN = \"sizefrac\")) %&gt;% \n  unite(\"MinMax_pg_C_ml\", MIN_pg_C_ml, MAX_pg_C_ml, sep = \" / \", remove = FALSE)\n\n\n`summarise()` has grouped output by 'VARIABLE', 'EXP_TYPE'. You can override\nusing the `.groups` argument.\n\n\n\nTable 3\n\n\nCode\ntable2 &lt;- partONE %&gt;% \n  rbind(partTWO) %&gt;% \n  select(-starts_with(\"MinMax\")) %&gt;% \n  pivot_longer(cols = ends_with(\"C_ml\"), values_to = \"pg_C_ml\") %&gt;% \n  mutate(µg_C_L = (pg_C_ml*(0.000001)*1000)) %&gt;% \n  mutate(STAT = str_remove(name, \"_pg_C_ml\")) %&gt;% \n  select(-name) %&gt;% \n  mutate(CLASSIFICATION = case_when(\n    CATEGORY == \"VD\" ~ \"Von Damm (vent only)\",\n    CATEGORY == \"Piccard\" ~ \"Piccard (vent only)\",\n    grepl(\"Bag\", CATEGORY) ~ \"Shipboard (vent only)\",\n    grepl(\"IGT\", CATEGORY) ~ \"IGT (vent only)\",\n    TRUE ~ CATEGORY))\n\ntable2_ugC_L &lt;- table2 %&gt;% \n  select(CLASSIFICATION, µg_C_L, STAT, ORIGIN) %&gt;% \n  pivot_wider(names_from = STAT, values_from = µg_C_L)\n\nwrite.csv(table2_ugC_L,\nfile = \"output-data/table3-BIOMASS_ugC_L.csv\")"
  },
  {
    "objectID": "results.html#carbon-consumed",
    "href": "results.html#carbon-consumed",
    "title": "Summary of results",
    "section": "4.6 Carbon consumed",
    "text": "4.6 Carbon consumed\nSummary of carbon consumed:\n\n\nCode\nhead(carbon_consumed)\n\n\n# A tibble: 6 × 11\n  SiteOrder NameOrder      FLUID_ORIGIN CRUISE_SAMPLE PROK_ml GRAZING_EFFECT_hr\n  &lt;fct&gt;     &lt;fct&gt;          &lt;chr&gt;        &lt;chr&gt;           &lt;dbl&gt;             &lt;dbl&gt;\n1 Piccard   Lots 'O Shrimp J2-1241      LV24            53878               0  \n2 Piccard   Plume          CTD004       Niskin 10       51429              44.3\n3 Piccard   Shrimpocalypse J2-1240      LV13           238590            6007. \n4 Von Damm  Background     CTD002       Niskins 8-10    37890             127. \n5 Von Damm  Mustard Stand  J2-1243      LV17            56677               0  \n6 Von Damm  Plume          CTD001       Niskin 2        16478              24.0\n# ℹ 5 more variables: CLEARANCE_RATE_ml &lt;dbl&gt;, bac_carbon_Mor_pg &lt;dbl&gt;,\n#   fgC_ml &lt;dbl&gt;, pgC_pergrazer_CLEARANCE &lt;dbl&gt;, pgC_perml_perhr &lt;dbl&gt;\n\n\n\n\nCode\ntable3 &lt;- carbon_consumed %&gt;% \n  drop_na() %&gt;% # Remove extra IGT7\n  filter(GRAZING_EFFECT_hr &gt; 0) %&gt;% # Remove slope 0 experiments\n  mutate(SAMPLE_TYPE_BIN = case_when(\n    NameOrder == \"Background\" ~ \"Non-vent\",\n    NameOrder == \"Plume\" ~ \"Non-vent\",\n    TRUE ~ \"Vent\"\n  )) %&gt;%\n  group_by(SAMPLE_TYPE_BIN) %&gt;% \n  summarise(MEAN_pgC_pergrazer_CLEARANCE = round(mean(pgC_pergrazer_CLEARANCE), digits = 1),\n            MEAN_pgC_perml_perhr = round(mean(pgC_perml_perhr), digits = 1),\n            MAX_pgC_pergrazer_CLEARANCE = round(max(pgC_pergrazer_CLEARANCE), digits = 1),\n            MAX_pgC_perml_perhr = round(max(pgC_perml_perhr), digits = 1),\n            MIN_pgC_pergrazer_CLEARANCE = round(min(pgC_pergrazer_CLEARANCE), digits = 1),\n            MIN_pgC_perml_perhr = round(min(pgC_perml_perhr), digits = 1)) %&gt;% \n  select(CATEGORY = SAMPLE_TYPE_BIN, everything()) %&gt;% \n  rbind(carbon_consumed %&gt;% \n  drop_na() %&gt;% # Remove extra IGT7\n    filter(GRAZING_EFFECT_hr &gt; 0) %&gt;% # Remove slope 0 experiments\n  mutate(SAMPLE_TYPE_BIN = case_when(\n    NameOrder == \"Background\" ~ \"Non-vent\",\n    NameOrder == \"Plume\" ~ \"Non-vent\",\n    TRUE ~ \"Vent\"\n  )) %&gt;%\n  filter(SAMPLE_TYPE_BIN == \"Vent\") %&gt;% \n  group_by(SiteOrder) %&gt;% \n    summarise(MEAN_pgC_pergrazer_CLEARANCE = round(mean(pgC_pergrazer_CLEARANCE), digits = 1),\n            MEAN_pgC_perml_perhr = round(mean(pgC_perml_perhr), digits = 1),\n            MAX_pgC_pergrazer_CLEARANCE = round(max(pgC_pergrazer_CLEARANCE), digits = 1),\n            MAX_pgC_perml_perhr = round(max(pgC_perml_perhr), digits = 1),\n            MIN_pgC_pergrazer_CLEARANCE = round(min(pgC_pergrazer_CLEARANCE), digits = 1),\n            MIN_pgC_perml_perhr = round(min(pgC_perml_perhr), digits = 1)) %&gt;% \n  select(CATEGORY = SiteOrder, everything())) %&gt;% \n  rbind(carbon_consumed %&gt;% \n  drop_na() %&gt;% # Remove extra IGT7\n    filter(GRAZING_EFFECT_hr &gt; 0) %&gt;% # Remove slope 0 experiments\n  mutate(SAMPLE_TYPE_BIN = case_when(\n    NameOrder == \"Background\" ~ \"Non-vent\",\n    NameOrder == \"Plume\" ~ \"Non-vent\",\n    TRUE ~ \"Vent\"\n  )) %&gt;%\n    mutate(EXP_TYPE = case_when(\n    grepl(\"IGT\", CRUISE_SAMPLE) ~ \"IGT\",\n    TRUE ~ \"Shipboard\"\n  )) %&gt;%\n  filter(SAMPLE_TYPE_BIN == \"Vent\") %&gt;% \n  group_by(EXP_TYPE) %&gt;% \n    summarise(MEAN_pgC_pergrazer_CLEARANCE = round(mean(pgC_pergrazer_CLEARANCE), digits = 2),\n            MEAN_pgC_perml_perhr = round(mean(pgC_perml_perhr), digits = 1),\n            MAX_pgC_pergrazer_CLEARANCE = round(max(pgC_pergrazer_CLEARANCE), digits = 2),\n            MAX_pgC_perml_perhr = round(max(pgC_perml_perhr), digits = 1),\n            MIN_pgC_pergrazer_CLEARANCE = round(min(pgC_pergrazer_CLEARANCE), digits = 2),\n            MIN_pgC_perml_perhr = round(min(pgC_perml_perhr), digits = 1)) %&gt;% \n  select(CATEGORY = EXP_TYPE, everything())) %&gt;% \n  ## Modify table\n  unite(\"MinMax_pgC_pergrazer_CLEARANCE\", MIN_pgC_pergrazer_CLEARANCE, MAX_pgC_pergrazer_CLEARANCE, sep = \" / \", remove = TRUE) %&gt;% \n  unite(\"MinMax_pgC_perml_perhr\", MIN_pgC_perml_perhr, MAX_pgC_perml_perhr, sep = \" / \", remove = TRUE) %&gt;% \n  mutate(CLASSIFICATION = case_when(\n    CATEGORY == \"Von Damm\" ~ \"Von Damm (vent only)\",\n    CATEGORY == \"Piccard\" ~ \"Piccard (vent only)\",\n    grepl(\"Bag\", CATEGORY) ~ \"Shipboard (vent only)\",\n    grepl(\"IGT\", CATEGORY) ~ \"IGT (vent only)\",\n    TRUE ~ CATEGORY)) %&gt;% \n  select(-CATEGORY)\n\n\n\nTable 3\n\n\nCode\nwrite.csv(table3, file = \"output-data/table3-C-consumption.csv\")"
  },
  {
    "objectID": "results.html#part-3-of-table-2",
    "href": "results.html#part-3-of-table-2",
    "title": "Summary of results",
    "section": "4.7 Part 3 of Table 2",
    "text": "4.7 Part 3 of Table 2\n\nTable 2\n\n\nCode\ntable2 <- partONE %>% \n  rbind(partTWO) %>% \n  select(-MAX_pg_C_L, -MIN_pg_C_L) %>% \n  mutate(CLASSIFICATION = case_when(\n    CATEGORY == \"VD\" ~ \"Von Damm (vent only)\",\n    CATEGORY == \"Piccard\" ~ \"Piccard (vent only)\",\n    grepl(\"Bag\", CATEGORY) ~ \"Shipboard (vent only)\",\n    grepl(\"IGT\", CATEGORY) ~ \"IGT (vent only)\",\n    TRUE ~ CATEGORY)) %>% \n  select(-CATEGORY) %>% \n  right_join(partTHREE)\n\n\nJoining with `by = join_by(CLASSIFICATION)`\n\n\nCode\ntable2\n\n\n# A tibble: 11 × 8\n   MEAN_pg_C_L MinMax_pg_C_L ORIGIN      CLASS…¹ MEAN_…² MEAN_…³ MinMa…⁴ MinMa…⁵\n         <dbl> <chr>         <chr>       <chr>     <dbl>   <dbl> <chr>   <chr>  \n 1        10.8 7.2 / 14.4    bybiovolume Non-ve…     60      5.6 13.1 /… 2.1 / …\n 2       115.  25.4 / 261    bybiovolume Vent      1174    595.  24.6 /… 10 / 1…\n 3       110.  63.8 / 145    bybiovolume Piccar…   2499.  1002.  1135.8… 516.6 …\n 4       117.  25.4 / 261    bybiovolume Von Da…    512.   391.  24.6 /… 10 / 1…\n 5       150.  96.7 / 261    bybiovolume IGT (v…   1855.   980.  258.2 … 90.3 /…\n 6         2.5 1.5 / 3.5     sizefrac    Non-ve…     60      5.6 13.1 /… 2.1 / …\n 7         5   0.2 / 11.1    sizefrac    Vent      1174    595.  24.6 /… 10 / 1…\n 8         4.6 0.6 / 10.8    sizefrac    Piccar…   2499.  1002.  1135.8… 516.6 …\n 9         5.2 0.2 / 11.1    sizefrac    Von Da…    512.   391.  24.6 /… 10 / 1…\n10         8.5 1 / 20.5      sizefrac    IGT (v…   1855.   980.  258.2 … 90.3 /…\n11        NA   <NA>          <NA>        Shipbo…    493    209   24.6 /… 10 / 5…\n# … with abbreviated variable names ¹​CLASSIFICATION,\n#   ²​MEAN_ugC_pergrazer_CLEARANCE, ³​MEAN_ugC_perml_perhr,\n#   ⁴​MinMax_ugC_pergrazer_CLEARANCE, ⁵​MinMax_ugC_perml_perhr\n\n\nCode\n# write_delim(table2,\n            # file = \"output-data/table2-BIOMASS.txt\", delim = \"\\t\")"
  },
  {
    "objectID": "results.html#carbon-consumed-total-and-by-cell",
    "href": "results.html#carbon-consumed-total-and-by-cell",
    "title": "Summary of results",
    "section": "4.7 Carbon consumed total and by cell?",
    "text": "4.7 Carbon consumed total and by cell?\nAssuming 86 fg C per cell for prokaryotic cells. 1 fg == 0.001 pg\n\n\nCode\n## From above:\nigt_vent_rate_avg &lt;- 11400.71904\nship_vent_rate_avg &lt;- 2430.01651\nship_nonvent_rate_avg &lt;- 65.11676\n\n\nmor_prok_c &lt;- 86 # in fg C per cell\n\n# Non vent cells consumed per ml per\n(mor_prok_c)*(0.001) * (65.11676) # pg\n\n\n[1] 5.600041\n\n\nCode\n# IGT\nigt &lt;- (mor_prok_c)*(0.001) * (11400.71904);igt\n\n\n[1] 980.4618\n\n\nCode\n# Shipboard\nship &lt;- (mor_prok_c)*(0.001) * (2430.01651);ship\n\n\n[1] 208.9814\n\n\nCode\n# (igt+ship)/2"
  },
  {
    "objectID": "results.html#compare-to-connell",
    "href": "results.html#compare-to-connell",
    "title": "Summary of results",
    "section": "11.1 Compare to Connell",
    "text": "11.1 Compare to Connell\nFrom Conne/l et al., table 4. Heterotrophic bacteria, Daily carbon grazed - based on standing stock and mortality rate in Southern California.\nmin: 1.74 max: 28.8\nunits: µg C per L per day\nTo compare with units:ug C per ml per hour (this study)\n\n\nCode\nmin &lt;- 1.74\nmax &lt;- 28.8\n\n# ug to pg: 1ug = 1E6 pg\n((min)/1000)/24\n\n\n[1] 7.25e-05\n\n\nCode\n((max)/1000)/24\n\n\n[1] 0.0012"
  },
  {
    "objectID": "results.html#compare-to-medina-et-al.",
    "href": "results.html#compare-to-medina-et-al.",
    "title": "Summary of results",
    "section": "11.3 Compare to Medina et al.",
    "text": "11.3 Compare to Medina et al.\nReview, so this includes several studies. Grazing effect in Table 3 is reported in bacteria per ml per day.\nMin and max are both from Pachiadaki et al. deep water and at an interface. min: 18.7 max: 13600\nMin and max in this study is 24 and 17285 cells consumed per ml per hour"
  },
  {
    "objectID": "grazing.html#figure-s2",
    "href": "grazing.html#figure-s2",
    "title": "Protistan grazing analysis",
    "section": "8.4 Figure S2",
    "text": "8.4 Figure S2\n\n\nCode\n# svg(\"../../../Manuscripts_presentations_reviews/MCR-grazing-2023/svg-files-figures/figS2.svg\", h = 8, w = 7)\nby_biovol_plot + by_sizefrac_plot + patchwork::plot_layout(ncol = 1) +\n  plot_annotation(tag_levels = \"a\")\n\n\n\n\n\nCode\n# dev.off()"
  },
  {
    "objectID": "results.html#compare-to-pernice-et-al.",
    "href": "results.html#compare-to-pernice-et-al.",
    "title": "Summary of results",
    "section": "11.2 Compare to Pernice et al.",
    "text": "11.2 Compare to Pernice et al.\nConvert to ug C per L.\n1 pg = 1e-6 ug\n\n\nCode\nshallow_pgC_ml &lt;- 280\ndeep_pgC_ml &lt;- 50\n\n# pgC/ml * (1e-6 ug / 1 pg) * (1000 ml / 1)\n\nshallow_pgC_ml * (1e-6) * 1000\n\n\n[1] 0.28\n\n\nCode\ndeep_pgC_ml * (1e-6) * 1000\n\n\n[1] 0.05"
  },
  {
    "objectID": "grazing.html#plot-variables-as-a-factor-of-grazing-rate.",
    "href": "grazing.html#plot-variables-as-a-factor-of-grazing-rate.",
    "title": "Protistan grazing analysis",
    "section": "14.3 Plot variables as a factor of grazing rate.",
    "text": "14.3 Plot variables as a factor of grazing rate.\n\n\nCode\nhead(grazing_wenv)\n\n\n  SiteOrder           Name           Experiment_rep FLUID_ORIGIN RATE_minute\n1   Piccard    LotsOShrimp    LotsOShrimp-Shipboard      J2-1241 0.000000000\n2   Piccard          Plume          Plume-Shipboard       CTD004 0.005362856\n3   Piccard Shrimpocalypse Shrimpocalypse-Shipboard      J2-1240 0.015686872\n4  Von Damm            BSW            BSW-Shipboard       CTD002 0.002958889\n5  Von Damm   MustardStand   MustardStand-Shipboard      J2-1243 0.000000000\n6  Von Damm          Plume          Plume-Shipboard       CTD001 0.005274231\n   EUK_ml    EUK_MinMax  EUK_sem PROK_ml     PROK_MinMax  PROK_sem\n1 230.910 230.9 / 230.9       NA   53878   26240 / 90260 13727.191\n2  79.301   55.98 / 112 16.81908   51429   46810 / 56050  4618.126\n3 454.820 454.8 / 454.8       NA  238590 108700 / 322000 65792.588\n4  91.838 69.97 / 113.7 21.86613   37890   18470 / 56470  8608.427\n5 259.770 230.9 / 288.6 28.86329   56677   42400 / 70950 14274.207\n6 157.770 55.98 / 284.4 67.09859   16478   13850 / 19100  2623.935\n  GRAZING_EFFECT_hr GRAZING_EFFECT_hr_min GRAZING_EFFECT_hr_max\n1           0.00000                    NA                    NA\n2          44.25910              34.87211              53.64608\n3        6006.91224                    NA                    NA\n4         127.06552              96.81191             157.31912\n5           0.00000               0.00000               0.00000\n6          24.02568              13.80771              34.24365\n  GRAZING_EFFECT_day CLEARANCE_RATE_ml SPEC_GRAZE_RATE_hr BAC_TURNOVER_PERC\n1             0.0000      0.000000e+00          0.0000000          0.000000\n2          1062.2184      1.085215e-05          0.5581153          2.065407\n3        144165.8939      5.535534e-05         13.2072298         60.424114\n4          3049.5724      3.651579e-05          1.3835832          8.048489\n5             0.0000      0.000000e+00          0.0000000          0.000000\n6           576.6163      9.241591e-06          0.1522829          3.499310\n                                               SEQ_SAMPLE           VENT\n1    78_MCR_Piccard_HOG_LotsOShrimp_J21241HOG14_0_Jun2021    LotsOShrimp\n2               74_MCR_Piccard_CTD_Plume_CTD004_5_Jun2021          Plume\n3 77_MCR_Piccard_HOG_Shrimpocalypse_J21240HOG14_0_Jun2021 Shrimpocalypse\n4                 63_MCR_VonDamm_CTD_BSW_CTD002_0_Jun2021            BSW\n5   69_MCR_VonDamm_HOG_MustardStand_J21243HOG14_5_Jun2021   MustardStand\n6               65_MCR_VonDamm_CTD_Plume_CTD003_0_Jun2021          Plume\n            COORDINATES SAMPLETYPE DEPTH YEAR    temp   pH percseawater   mg\n1 18.546789, -81.718356       Vent  4967 2020  36.000 5.92         94.9 51.0\n2 18.546767, -81.718200      Plume  4944 2020   4.460   NA           NA   NA\n3 18.546674, -81.717806       Vent  4945 2020  85.000 5.11         81.7 43.9\n4 18.374183, -81.781533 Background  2400 2020   4.181   NA        100.0   NA\n5 18.375130, -81.797488       Vent  2374 2020 108.000 5.63         36.2 19.4\n6 18.377600, -81.799317      Plume  1979 2020   4.208   NA           NA   NA\n     h2  h2s        ch4   ProkConc Sample_actual Type    FIELD ref_num    SITE\n1 22700   NA   11.46432  53878.136                HOG  Piccard      61 Piccard\n2         NA         NA   51429.13                CTD  Piccard      58 Piccard\n3     0   NA   27.53484  238585.68                HOG  Piccard      60 Piccard\n4         NA         NA 34705.9161                CTD Von Damm      84 VonDamm\n5  9800 1.79 1819.96080      56677                HOG Von Damm      94 VonDamm\n6         NA         NA  16478.313                CTD Von Damm      91 VonDamm\n  Sample_or_Control SAMPLEID\n1            Sample         \n2            Sample         \n3            Sample         \n4            Sample         \n5            Sample         \n6            Sample         \n\n\n\nFigure S7\n\n\nCode\n# svg(\"../../../Manuscripts_presentations_reviews/MCR-grazing-2023/svg-files-figures/figS6.svg\", h = 8, w = 10)\ngrazing_wenv %&gt;% \n    mutate(TEMP = as.numeric(temp)) %&gt;% \n    mutate(EXP_TYPE = case_when(\n      grepl(\"IGT\", Experiment_rep) ~ \"IGT\",\n      TRUE ~ \"Shipboard\"\n    )) %&gt;% \n  unite(SITE_TYPE, SiteOrder, EXP_TYPE, sep = \"-\", remove = FALSE) %&gt;% \n  filter(!(SITE_TYPE == \"NA-IGT\")) %&gt;% \n  mutate(EUK_ml = as.character(EUK_ml)) %&gt;% \n  mutate(PROK_ml = as.character(PROK_ml)) %&gt;%\n  mutate(temp = as.character(temp),\n         pH = as.character(pH),\n         mg = as.character(mg),\n         h2 = as.character(h2),\n         ch4 = as.character(ch4),\n         percseawater = as.character(percseawater)) %&gt;% \n  select(SITE_TYPE, SiteOrder, EXP_TYPE, Experiment_rep, GRAZING_EFFECT_hr, EUK_ml, PROK_ml, temp, DEPTH, pH, percseawater, mg, h2, ch4) %&gt;% \n  pivot_longer(cols = EUK_ml:ch4, values_to = \"VALUES\", values_ptypes = list(VALUES = character())) %&gt;% \n  mutate(VALUES = as.numeric(VALUES)) %&gt;% \n  drop_na() %&gt;% \n  ggplot(aes(x = GRAZING_EFFECT_hr, y = VALUES, \n             color = SITE_TYPE, fill = SITE_TYPE, shape = SITE_TYPE)) +\n  geom_point(aes(shape = SITE_TYPE), size = 4, stroke = 2) +\n  facet_wrap(~ name, scales = \"free\") +\n  scale_y_continuous() +\n  scale_x_log10() +\n  scale_shape_manual(values = c(21, 21, 21, 21)) +\n  scale_fill_manual(values = c(\"white\", \"#264653\", \"white\", \"#E76F51\")) +\n  scale_color_manual(values = c(\"#264653\", \"#264653\", \"#E76F51\", \"#E76F51\")) +\n  theme_minimal() +\n    theme(panel.grid.minor = element_blank(),\n           axis.line = element_line(colour = \"black\"), \n           axis.text.x = element_text(color=\"black\", size = 13), \n           axis.text.y = element_text(color=\"black\", size = 13),\n           axis.title = element_text(color=\"black\", size = 13),\n           axis.ticks = element_line(),\n           strip.text = element_text(color=\"black\", size = 13), legend.title = element_blank()) +\n  labs(x = bquote(\"Cells consumed \"~mL^-1 ~hr^-1), y = bquote(\"Eukaryote cells \"~mL^-1),\n       title = \"\")\n\n\nWarning: Transformation introduced infinite values in continuous x-axis\n\n\n\n\n\nCode\n# dev.off()\n\n\n\n\nCode\ngrazing_wenv_forLM &lt;- grazing_wenv %&gt;% \n  # filter(!(Name == \"Shrimpocalypse\" & grepl(\"IGT\", Experiment_rep))) %&gt;%\n  filter(GRAZING_EFFECT_hr &gt; 0) %&gt;%\n    mutate(TEMP = as.numeric(temp)) %&gt;% \n    mutate(EXP_TYPE = case_when(\n      grepl(\"IGT\", Experiment_rep) ~ \"IGT\",\n      TRUE ~ \"Shipboard\"\n    )) %&gt;% \n  unite(SITE_TYPE, SiteOrder, EXP_TYPE, sep = \"-\", remove = FALSE) %&gt;% \n  filter(!(SITE_TYPE == \"NA-IGT\")) %&gt;% \n  mutate(EUK_ml = as.character(EUK_ml)) %&gt;% \n  mutate(PROK_ml = as.character(PROK_ml),\n         PROK_EUK_RATIO = as.character(as.numeric(PROK_ml)/as.numeric(EUK_ml))) %&gt;%\n  mutate(temp = as.character(temp),\n         pH = as.character(pH),\n         mg = as.character(mg),\n         h2 = as.character(h2),\n         ch4 = as.character(ch4),\n         percseawater = as.character(percseawater)) %&gt;% \n  select(SITE_TYPE, SiteOrder, EXP_TYPE, Experiment_rep, GRAZING_EFFECT_hr, CLEARANCE_RATE_ml, SPEC_GRAZE_RATE_hr, BAC_TURNOVER_PERC, EUK_ml, PROK_ml, PROK_EUK_RATIO, temp, DEPTH, pH, percseawater, mg, h2, ch4) %&gt;% \n  pivot_longer(cols = c(GRAZING_EFFECT_hr, CLEARANCE_RATE_ml, SPEC_GRAZE_RATE_hr, BAC_TURNOVER_PERC), names_to = \"RATE\", values_to = \"RATE_VALUE\") %&gt;%\n  pivot_longer(cols = c(PROK_ml, EUK_ml, temp, DEPTH, pH, percseawater, mg, h2, ch4, PROK_EUK_RATIO), names_to = \"PARAMS\", values_to = \"PARAMS_VALUE\") %&gt;%\n  data.frame\n\n\n\n\nCode\nlibrary(broom)\nregression_tmp &lt;- grazing_wenv_forLM %&gt;%\n  mutate(PARAMS_VALUE = as.numeric(PARAMS_VALUE)) %&gt;% \n  # Set up the linear regression\n  group_by(RATE, PARAMS) %&gt;%\n  nest(data = c(-RATE, -PARAMS)) %&gt;%\n  mutate(lm_fit = map(data, ~lm(RATE_VALUE ~ PARAMS_VALUE, data = .)),\n    tidied = map(lm_fit, tidy)) %&gt;%\n  unnest(tidied) %&gt;%\n  select(RATE, PARAMS,\n    term, estimate) %&gt;%\n  pivot_wider(names_from = term, values_from = estimate) %&gt;%\n  select(everything(), SLOPE = PARAMS_VALUE) %&gt;%\n  data.frame\n\nregression_results_S8 &lt;- grazing_wenv_forLM %&gt;%\n  group_by(RATE, PARAMS) %&gt;%\n  nest(data = c(-RATE, -PARAMS)) %&gt;%\n  mutate(lm_fit = map(data, ~lm(RATE_VALUE ~ PARAMS_VALUE, data = .)),\n    glanced = map(lm_fit, glance)) %&gt;%\n  unnest(glanced) %&gt;%\n  select(RATE, PARAMS, r.squared, adj.r.squared) %&gt;%\n  right_join(grazing_wenv_forLM) %&gt;%\n  right_join(regression_tmp) %&gt;%\n  data.frame\n\n\nJoining with `by = join_by(RATE, PARAMS)`\nJoining with `by = join_by(RATE, PARAMS)`\n\n\nSupplementary Table\n\n\nCode\nregression_results_TABLE &lt;- regression_results_S8 %&gt;% \n  select(RATE, PARAMS, r.squared, adj.r.squared, SLOPE) %&gt;% \n  distinct()\n# write.csv(regression_results_TABLE, file = \"output-data/LM-results-table.csv\")\n\n\n\n\nCode\n# svg(\"../../../Manuscripts_presentations_reviews/MCR-grazing-2023/svg-files-figures/figS6.svg\", h = 8, w = 10)\ngrazing_for_supp &lt;- regression_results_S8\n\n# y = mx+b\n# 0 = slope (x) + b\n# solve for b\nplot_r2 &lt;- grazing_for_supp %&gt;% \n  ggplot(aes(x = as.numeric(RATE_VALUE), y = as.numeric(PARAMS_VALUE), \n             color = SITE_TYPE, fill = SITE_TYPE, shape = SITE_TYPE)) +\n  geom_point(aes(shape = SITE_TYPE), size = 4, stroke = 2) +\n  facet_wrap(~ PARAMS + round(r.squared, 3), scales = \"free\", ncol = 5,\n             labeller = label_parsed) +\n  scale_y_continuous() +\n  scale_x_log10(labels = scientific_10) +\n  scale_shape_manual(values = c(21, 21, 21, 21)) +\n  scale_fill_manual(values = c(\"white\", \"#264653\", \"white\", \"#E76F51\")) +\n  scale_color_manual(values = c(\"#264653\", \"#264653\", \"#E76F51\", \"#E76F51\")) +\n  theme_minimal() +\n    theme(panel.grid.minor = element_blank(),\n           axis.line = element_line(colour = \"black\"), \n           axis.text.x = element_text(color=\"black\", size = 13), \n           axis.text.y = element_text(color=\"black\", size = 13),\n           axis.title = element_text(color=\"black\", size = 13),\n           axis.ticks = element_line(),\n           strip.text = element_text(color=\"black\", size = 13), legend.title = element_blank()) +\n  labs(x = bquote(\"Cells consumed \"~mL^-1 ~hr^-1), y = bquote(\"Eukaryote cells \"~mL^-1),\n       title = \"\")\n\nplot_wslope &lt;- grazing_for_supp %&gt;% \n    mutate(b = (SLOPE)*(`X.Intercept.`)) %&gt;% \n  mutate(new_xint = ((0 - b)/SLOPE)) %&gt;% \n    mutate(new_xint_2 = case_when(\n      `X.Intercept.` &lt; 0 ~ (`X.Intercept.`)*(-1),\n      `X.Intercept.` &gt; 0 ~ (`X.Intercept.`),\n    )) %&gt;% \n  filter(!is.na(PARAMS_VALUE)) %&gt;% \n  ggplot(aes(x = as.numeric(RATE_VALUE), y = as.numeric(PARAMS_VALUE), \n             color = SITE_TYPE, fill = SITE_TYPE, shape = SITE_TYPE)) +\n  geom_point(aes(shape = SITE_TYPE), size = 4, stroke = 2) +\n  facet_wrap(~ PARAMS + round(r.squared, 3), scales = \"free\", ncol = 5,\n             labeller = label_parsed) +\n  # scale_y_continuous() +\n  # scale_x_log10() +\n  scale_x_continuous(trans=log10_trans(),\n                       breaks = trans_breaks(\"log10\", function(x) 10^x),\n                       labels = trans_format(\"log10\", math_format(10^.x))) +\n    geom_abline(aes(slope = (SLOPE), intercept = (`X.Intercept.`)), color = \"black\", linetype = \"dashed\", size = 0.5) +\n  # geom_abline(aes(slope = (SLOPE), yintercept = (b)), color = \"black\", linetype = \"dashed\", size = 0.5) +\n  scale_shape_manual(values = c(21, 21, 21, 21)) +\n  scale_fill_manual(values = c(\"white\", \"#264653\", \"white\", \"#E76F51\")) +\n  scale_color_manual(values = c(\"#264653\", \"#264653\", \"#E76F51\", \"#E76F51\")) +\n  theme_minimal() +\n    theme(panel.grid.minor = element_blank(),\n           axis.line = element_line(colour = \"black\"), \n           axis.text.x = element_text(color=\"black\", size = 13), \n           axis.text.y = element_text(color=\"black\", size = 13),\n           axis.title = element_text(color=\"black\", size = 13),\n           axis.ticks = element_line(),\n           strip.text = element_text(color=\"black\", size = 13), legend.title = element_blank()) +\n  labs(x = bquote(\"Cells consumed \"~mL^-1 ~hr^-1), y = bquote(\"Eukaryote cells \"~mL^-1),\n       title = \"\")\n\n# plot_wslope\n\n\n\n\nFigure S7 #2\nSupplementary figure\n\n\nCode\n# svg(\"../../../Manuscripts_presentations_reviews/MCR-grazing-2023/svg-files-figures/figS7_log.svg\", h = 8, w = 16)\n\n# plot_r2\n\n# svg(\"../../../Manuscripts_presentations_reviews/MCR-grazing-2023/svg-files-figures/figS7_slope.svg\", h = 8, w = 16)\n# \n# plot_wslope\n\n# dev.off()"
  },
  {
    "objectID": "grazing.html#figure-s2-1",
    "href": "grazing.html#figure-s2-1",
    "title": "Protistan grazing analysis",
    "section": "8.4 Figure S2",
    "text": "8.4 Figure S2\n\n\nCode\n# svg(\"../../../Manuscripts_presentations_reviews/MCR-grazing-2023/svg-files-figures/figS2.svg\", h = 8, w = 7)\nby_biovol_plot + by_sizefrac_plot + patchwork::plot_layout(ncol = 1) +\n  plot_annotation(tag_levels = \"a\")\n\n\n\n\n\nCode\n# dev.off()"
  },
  {
    "objectID": "grazing.html#set-up-working-r-environment",
    "href": "grazing.html#set-up-working-r-environment",
    "title": "Protistan grazing analysis",
    "section": "",
    "text": "Code\nlibrary(tidyverse); library(cowplot); library(broom)\nlibrary(patchwork)\n\n\nSet color schematic\n\n\nCode\n# vent_ids &lt;- c(\"BSW\",\"Plume\", \"Shrimpocalypse\", \"LotsOShrimp\", \"X18\", \"OMT\", \"Rav2\", \"MustardStand\", \"ShrimpHole\")\n# vent_fullname &lt;- c(\"Background\",\"Plume\", \"Shrimpocalypse\", \"Lots 'O Shrimp\", \"X-18\", \"Old Man Tree\", \"Ravelin #2\", \"Mustard Stand\", \"Shrimp Hole\")\n# Order by temperature\nvent_ids &lt;- c(\"BSW\",\"Plume\", \"LotsOShrimp\", \"Shrimpocalypse\", \n              \"ShrimpHole\", \"X18\", \"Rav2\", \"MustardStand\", \"OMT\")\nvent_fullname &lt;- c(\"Background\",\"Plume\", \"Lots 'O Shrimp\", \"Shrimpocalypse\",  \n                   \"Shrimp Hole\", \"X-18\", \"Ravelin #2\", \"Mustard Stand\", \"Old Man Tree\")\n\nsite_ids &lt;- c(\"VD\", \"Piccard\")\nsite_fullname &lt;- c(\"Von Damm\", \"Piccard\")\nsite_color &lt;- c(\"#264653\", \"#E76F51\")\nnames(site_color) &lt;- site_fullname\n\nwhole_pal &lt;- c(\"#264653\", \"#2A9D8F\", \"#E9C46A\",\"#F4A261\", \"#E76F51\")\n\nextra &lt;- c(\"#eae2b7\", \"#5f0f40\", \"#90be6d\", \"#941b0c\", \"#577590\")"
  },
  {
    "objectID": "grazing.html#import-raw-count-data",
    "href": "grazing.html#import-raw-count-data",
    "title": "Protistan grazing analysis",
    "section": "",
    "text": "Import eukaryotic cell count data from grazing experiments. In this section, we will calculate cells per ml from raw counts (Field of view, etc.) and use to estimate protist cell concentration. These will be used below in grazing experiment calculations.\n\n\nCode\ncounts &lt;- read.delim(\"input-data/euk-counts-compiled.txt\", \n                     blank.lines.skip = FALSE,\n                     na.strings = c(\"\", \"NA\"),\n                     stringsAsFactors = FALSE) # Import\ncounts[is.na(counts)] &lt;- 0 # Change blanks to zeroes\n\n\nRaw data table collected during microscopy count process. Below code reviews the structure of this raw data and updates column headers to be more ‘R’ friendly.\n\n\nCode\n# head(counts)\ncolnames(counts) &lt;- c(\"DATE\", \"SAMPLE\", \"EXPID\", \"VOL\", \"MAG\", \"FOV\", \"nanoNoFLP\", \"microNoFLP\", \"nanoFLP\", \"microFLP\", \"NOTES\", \"DateCompiled\"); colnames(counts)\n\n\n [1] \"DATE\"         \"SAMPLE\"       \"EXPID\"        \"VOL\"          \"MAG\"         \n [6] \"FOV\"          \"nanoNoFLP\"    \"microNoFLP\"   \"nanoFLP\"      \"microFLP\"    \n[11] \"NOTES\"        \"DateCompiled\"\n\n\n\nTo count occurrence and number of FLP ingested by eukaryotic cells, the number of FLPs ingested was tallied and comma separated for multiple eukaryotic cells with FLP. These values need to separated and counted as 1 eukaryotic cell each, but retain the number of FLP per cell.\n\nParse raw microscopy count data.\n\n\nCode\ncounts_occur &lt;- counts %&gt;%\n  # remove incomplete\n  filter(NOTES != \"Not countable\") %&gt;% \n  # Count number of euk cells observed with FLPs (ex. if \"1,2\", 'occur' will = 2)\n  mutate(nanoFLP_occur = as.numeric(str_count(nanoFLP, \"[1-9]\\\\d*\")), \n         microFLP_occur = as.numeric(str_count(microFLP, \"[1-9]\\\\d*\")),\n         # Add number of euk cells with FLPs to those without for total number of euk cells\n         nanoTOTAL = as.numeric(nanoNoFLP) + nanoFLP_occur, \n         microTOTAL = as.numeric(microNoFLP) + microFLP_occur,\n         euksTOTAL = nanoTOTAL + microTOTAL) %&gt;%\n      data.frame"
  },
  {
    "objectID": "grazing.html#biomass-summaries",
    "href": "grazing.html#biomass-summaries",
    "title": "Protistan grazing analysis",
    "section": "8.2 Biomass summaries",
    "text": "8.2 Biomass summaries\n\n\nCode\nc_factor_biov &lt;- \n  biov_calc %&gt;% select(-EXP, -h, -d) %&gt;% \n  pivot_longer(cols = c(BIOVOLUME, starts_with(\"pgC_\")), names_to = \"VARIABLES\", values_to = \"VALUES\") %&gt;% \n  group_by(VENT_BSW, VARIABLES) %&gt;% \n    summarise(mean = mean(VALUES),\n              max = max(VALUES),\n              min = min(VALUES)) %&gt;% \n  pivot_wider(names_from = VENT_BSW, values_from = c(mean, max,min), names_sort = FALSE)\n\n\n`summarise()` has grouped output by 'VENT_BSW'. You can override using the\n`.groups` argument.\n\n\nCode\n# View(c_factor_biov)\n\n\n\nAssign a C conversion factor for background and within vents based on biovolume\n\n\n\nCode\n# pg C per cell (pgC_cell)\n\npgC_cell_BSW &lt;- subset(c_factor_biov, VARIABLES == \"pgC_cell_MD_nodiatom\")$mean_BSW\n\npgC_cell_vent &lt;- subset(c_factor_biov, VARIABLES == \"pgC_cell_MD_nodiatom\")$mean_vent\n\npgC_cell_BSW_min &lt;- subset(c_factor_biov, VARIABLES == \"pgC_cell_MD_nodiatom\")$min_BSW\n\npgC_cell_vent_min &lt;- subset(c_factor_biov, VARIABLES == \"pgC_cell_MD_nodiatom\")$min_vent\n\npgC_cell_BSW_max &lt;- subset(c_factor_biov, VARIABLES == \"pgC_cell_MD_nodiatom\")$max_BSW\n\npgC_cell_vent_max &lt;- subset(c_factor_biov, VARIABLES == \"pgC_cell_MD_nodiatom\")$max_vent\n\npgC_cell_BSW\n\n\n[1] 109.1574\n\n\nCode\npgC_cell_vent\n\n\n[1] 414.8068\n\n\n\nCombine with count table to estimate total standing stock in carbon\n\nIsolate at T0 all the euk cells per ml counts. Then add in the mean, min/max for the pg C per cell, based on the vent vs non-vent.\n\n\nCode\n# counts_cellsml_avg\npgC_ml_biov_bysample &lt;- counts_cellsml_avg %&gt;% \n  filter(TimePoint == \"T0\") %&gt;%\n  filter(VARIABLE == \"eukCONC\") %&gt;% \n  mutate(SAMPLE_TYPE_BIN = case_when(\n    Name == \"Background\" ~ \"Non-vent\",\n    Name == \"Plume\" ~ \"Non-vent\",\n    TRUE ~ \"Vent\"\n  )) %&gt;% \n  # pg C per ml = (cells per ml)*(pg C per)\n  ## Apply the non-vent and vent pg C per cell value to total cells per ml\n  mutate(pgC_ml_mean = case_when(\n    SAMPLE_TYPE_BIN == \"Non-vent\" ~ MEAN * pgC_cell_BSW,\n    SAMPLE_TYPE_BIN == \"Vent\" ~ MEAN * pgC_cell_vent,\n  )) %&gt;% \n  mutate(pgC_ml_min = case_when(\n    SAMPLE_TYPE_BIN == \"Non-vent\" ~ MEAN * pgC_cell_BSW_min,\n    SAMPLE_TYPE_BIN == \"Vent\" ~ MEAN * pgC_cell_vent_min\n  )) %&gt;% \n  mutate(pgC_ml_max = case_when(\n    SAMPLE_TYPE_BIN == \"Non-vent\" ~ MEAN * pgC_cell_BSW_max,\n    SAMPLE_TYPE_BIN == \"Vent\" ~ MEAN * pgC_cell_vent_max\n  )) %&gt;% \n  mutate(IGT_REP = case_when(\n    IGT_REP == \"Bag\" ~ \"Shipboard\",\n    TRUE ~ IGT_REP\n  )) %&gt;% \n  unite(\"Experiment_rep\", Name, IGT_REP, sep = \"-\", remove = FALSE)\n\npgC_ml_biov_bysample\n\n\n      Site           Experiment_rep           Name TimePoint EXP_TYPE   IGT_REP\n1  Piccard    LotsOShrimp-Shipboard    LotsOShrimp        T0      Bag Shipboard\n2  Piccard          Plume-Shipboard          Plume        T0      Bag Shipboard\n3  Piccard Shrimpocalypse-Shipboard Shrimpocalypse        T0      Bag Shipboard\n4  Piccard      Shrimpocalypse-IGT3 Shrimpocalypse        T0      IGT      IGT3\n5  Piccard      Shrimpocalypse-IGT7 Shrimpocalypse        T0      IGT      IGT7\n6       VD            BSW-Shipboard            BSW        T0      Bag Shipboard\n7       VD   MustardStand-Shipboard   MustardStand        T0      Bag Shipboard\n8       VD                 OMT-IGT4            OMT        T0      IGT      IGT4\n9       VD                OMT-IGT4b            OMT        T0      IGT     IGT4b\n10      VD          Plume-Shipboard          Plume        T0      Bag Shipboard\n11      VD           Rav2-Shipboard           Rav2        T0      Bag Shipboard\n12      VD                Rav2-IGT4           Rav2        T0      IGT      IGT4\n13      VD               Rav2-IGT4b           Rav2        T0      IGT     IGT4b\n14      VD                Rav2-IGT5           Rav2        T0      IGT      IGT5\n15      VD               Rav2-IGT5b           Rav2        T0      IGT     IGT5b\n16      VD     ShrimpHole-Shipboard     ShrimpHole        T0      Bag Shipboard\n17      VD            X18-Shipboard            X18        T0      Bag Shipboard\n   VARIABLE      MEAN        VAR        SD        SEM       MIN      MAX\n1   eukCONC 230.90630         NA        NA         NA 230.90630 230.9063\n2   eukCONC  79.30115   848.6444  29.13150  16.819081  55.97728 111.9546\n3   eukCONC 454.81543         NA        NA         NA 454.81543 454.8154\n4   eukCONC 384.84383         NA        NA         NA 384.84383 384.8438\n5   eukCONC 524.78704         NA        NA         NA 524.78704 524.7870\n6   eukCONC  91.83773   956.2550  30.92337  21.866127  69.97160 113.7039\n7   eukCONC 259.76958  1666.1787  40.81885  28.863287 230.90630 288.6329\n8   eukCONC 349.85802         NA        NA         NA 349.85802 349.8580\n9   eukCONC 594.75864         NA        NA         NA 594.75864 594.7586\n10  eukCONC 157.77468 13506.6620 116.21817  67.098589  55.97728 284.4007\n11  eukCONC 409.33389 10795.7362 103.90253  73.470185 335.86370 482.8041\n12  eukCONC 944.61667         NA        NA         NA 944.61667 944.6167\n13  eukCONC 559.77284         NA        NA         NA 559.77284 559.7728\n14  eukCONC 629.74444         NA        NA         NA 629.74444 629.7444\n15  eukCONC 349.85802         NA        NA         NA 349.85802 349.8580\n16  eukCONC 385.71847   123.9306  11.13241   7.871806 377.84667 393.5903\n17  eukCONC 314.87222 22032.1147 148.43219 104.957407 209.91481 419.8296\n   SAMPLE_TYPE_BIN pgC_ml_mean pgC_ml_min pgC_ml_max\n1             Vent   95781.500  1216.6456  296465.66\n2         Non-vent    8656.305  2241.3730   20432.20\n3             Vent  188660.531  2396.4232  583947.52\n4             Vent  159635.834  2027.7427  494109.44\n5             Vent  217685.228  2765.1037  673785.60\n6             Vent   38094.915   483.8932  117912.48\n7             Vent  107754.188  1368.7263  333523.87\n8             Vent  145123.485  1843.4025  449190.40\n9             Vent  246709.925  3133.7842  763623.68\n10        Non-vent   17222.270  4459.3540   40651.15\n11            Vent  169794.478  2156.7809  525552.77\n12            Vent  391833.410  4977.1867 1212814.08\n13            Vent  232197.576  2949.4440  718704.64\n14            Vent  261222.273  3318.1245  808542.72\n15            Vent  145123.485  1843.4025  449190.40\n16            Vent  159998.642  2032.3512  495232.42\n17            Vent  130611.137  1659.0622  404271.36\n\n\nTable reports the total pg of carbon per ml when we consider the whole eukaryote community (based on cell count).\nReport in pg of C per ml.\n\n\nCode\nvent_ids &lt;- c(\"BSW\",\"Plume\", \"LotsOShrimp\", \"Shrimpocalypse\", \n              \"ShrimpHole\", \"X18\", \"Rav2\", \"MustardStand\", \"OMT\")\nvent_fullname &lt;- c(\"Background\",\"Plume\", \"Lots 'O Shrimp\", \"Shrimpocalypse\",  \n                   \"Shrimp Hole\", \"X-18\", \"Ravelin #2\", \"Mustard Stand\", \"Old Man Tree\")\nsite_ids &lt;- c(\"VD\", \"Piccard\")\nsite_fullname &lt;- c(\"Von Damm\", \"Piccard\")\n\nby_biovol_plot &lt;- pgC_ml_biov_bysample %&gt;% \n  mutate(NameOrder = factor(Name, levels = vent_ids, labels = vent_fullname)) %&gt;%\n  mutate(SiteOrder = factor(Site, levels = site_ids, labels = site_fullname)) %&gt;% \n  ggplot(aes(x = Experiment_rep, y = (pgC_ml_mean))) +\n    geom_point(shape = 21, color = \"black\") + \n    geom_linerange(aes(ymin = (pgC_ml_min), ymax = (pgC_ml_max))) +\n  facet_grid(.~SiteOrder + NameOrder, space = \"free\", scales = \"free\") +\n  scale_y_continuous(labels = scientific_10) +\n    theme_minimal() +\n    theme(panel.grid.major = element_line(), panel.grid.minor = element_blank(),\n           panel.background = element_blank(), \n           axis.line = element_line(colour = \"black\"), \n           axis.text.x = element_text(color=\"black\", size = 12, \n                                      angle = 45, hjust = 1, vjust = 1), \n           axis.text.y = element_text(color=\"black\", size = 12),\n           axis.title =element_text(color=\"black\", size = 12),\n           axis.ticks = element_line(),\n           strip.text =element_blank(), legend.title = element_blank())+\n    guides(fill = guide_legend(override.aes = list(shape = c(21))),\n       shape = guide_legend(override.aes = list(fill = \"black\"))) +\n    labs(x = \"\", y = bquote(\"Estimated total biomass: pg C \" ~ml^-1),\n         title = \"Carbon pool of protists - derived from biovolume\")\n\nby_biovol_plot"
  },
  {
    "objectID": "grazing.html#figure-s3",
    "href": "grazing.html#figure-s3",
    "title": "Protistan grazing analysis",
    "section": "8.4 Figure S3",
    "text": "8.4 Figure S3\n\n\nCode\n# svg(\"../../../Manuscripts_presentations_reviews/MCR-grazing-2023/svg-files-figures/figS3_new.svg\", h = 8, w = 7)\nby_biovol_plot + by_sizefrac_plot + patchwork::plot_layout(ncol = 1) +\n  plot_annotation(tag_levels = \"a\")\n\n\n\n\n\nCode\n# dev.off()"
  }
]